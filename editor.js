// Generated by psc-bundle 0.11.4
var PS = {};
(function(exports) {
    "use strict";

  exports.ace = ace;

  exports.editImpl = function (el, self) {
    return function () {
      return self.edit(el);
    };
  };
})(PS["Ace"] = PS["Ace"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var result = [];
      var n = 0;
      for (var i = 0, l = fs.length; i < l; i++) {
        for (var j = 0, k = xs.length; j < k; j++) {
          result[n++] = fs[i](xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["applyFlipped"] = applyFlipped;
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Ace"];
  var Ace_Types = PS["Ace.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var edit = function (el) {
      return function (self) {
          return $foreign.editImpl(el, self);
      };
  };
  exports["edit"] = edit;
  exports["ace"] = $foreign.ace;
})(PS["Ace"] = PS["Ace"] || {});
(function(exports) {
    "use strict";

  exports.onImpl = function (event, fn, self) {
    return function () {
      return self.on(event, function (e) {
        fn(e)();
      });
    };
  };

  exports.setValueImpl = function (text, self) {
    return function () {
      return self.setValue(text);
    };
  };

  exports.setModeImpl = function (mode, self) {
    return function () {
      return self.setMode(mode);
    };
  };

  exports.getValue = function (self) {
    return function () {
      return self.getValue();
    };
  };

  exports.removeMarkerImpl = function (markerId, self) {
    return function () {
      return self.removeMarker(markerId);
    };
  };

  function  create(text, mode) {
    return function () {
      var EditSession = ace.require("ace/edit_session").EditSession;
      return new EditSession(text, mode);
    };
  }
})(PS["Ace.EditSession"] = PS["Ace.EditSession"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                         
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq); 
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 123, column 3 - line 126, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];        
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 220, column 1 - line 220, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar34) {
                  return $dollar34;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 271, column 1 - line 271, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 69, column 3 - line 69, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Ace.EditSession"];
  var Ace_Types = PS["Ace.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var setValue = function (text) {
      return function (self) {
          return $foreign.setValueImpl(text, self);
      };
  };
  var setMode = function (mode$prime) {
      return function (self) {
          return $foreign.setModeImpl(mode$prime, self);
      };
  };
  var removeMarker = function (markerId) {
      return function (self) {
          return $foreign.removeMarkerImpl(markerId, self);
      };
  };
  var onChange = function (self) {
      return function (fn) {
          return $foreign.onImpl("change", function (v) {
              return fn;
          }, self);
      };
  };
  exports["onChange"] = onChange;
  exports["removeMarker"] = removeMarker;
  exports["setMode"] = setMode;
  exports["setValue"] = setValue;
  exports["getValue"] = $foreign.getValue;
})(PS["Ace.EditSession"] = PS["Ace.EditSession"] || {});
(function(exports) {
    "use strict";

  function effize(method) {
    return function () {
      var me = arguments[arguments.length - 1];
      var args = Array.prototype.slice.call(arguments, 0, -1);
      return function () {
        return me[method].apply(me, args);
      };
    };
  }

  function effGet(field) {
    return function (self) {
      return function () {
        return self[field];
      };
    };
  }

  function effSet(field) {
    return function (val, self) {
      return function () {
        self[field] = val;
      };
    };
  }                                             
  exports.getSession = effize("getSession");
  exports.setThemeImpl = effize("setTheme");
})(PS["Ace.Editor"] = PS["Ace.Editor"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Ace.Editor"];
  var Ace_Types = PS["Ace.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var setTheme = function (theme) {
      return function (self) {
          return $foreign.setThemeImpl(theme, self);
      };
  };
  exports["setTheme"] = setTheme;
  exports["getSession"] = $foreign.getSession;
})(PS["Ace.Editor"] = PS["Ace.Editor"] || {});
(function(exports) {
    "use strict";

  function effize(method) {
    return function () {
      var me = arguments[arguments.length - 1];
      var args = Array.prototype.slice.call(arguments, 0, -1);
      return function () {
        return me[method].apply(me, args);
      };
    };
  }

  function effGet(field) {
    return function (self) {
      return function () {
        return self[field];
      };
    };
  } 

  exports.createImpl = function (startRow, startColumn, endRow, endColumn) {
    return function () {
      var Range = ace.require("ace/range").Range;
      return new Range(startRow, startColumn, endRow, endColumn);
    };
  };
})(PS["Ace.Range"] = PS["Ace.Range"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Ace.Range"];
  var Ace_Types = PS["Ace.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Prelude = PS["Prelude"];
  var create = function (startRow) {
      return function (startColumn) {
          return function (endRow) {
              return function (endColumn) {
                  return $foreign.createImpl(startRow, startColumn, endRow, endColumn);
              };
          };
      };
  };
  exports["create"] = create;
})(PS["Ace.Range"] = PS["Ace.Range"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["error"] = $foreign.error;
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeConj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Conj);
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["newtypeConj"] = newtypeConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($175) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($175));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["any"] = any;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Prelude = PS["Prelude"];
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var stateL = function (v) {
      return v;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var functorStateL = new Data_Functor.Functor(function (f) {
      return function (k) {
          return function (s) {
              var v = stateL(k)(s);
              return {
                  accum: v.accum, 
                  value: f(v.value)
              };
          };
      };
  });
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  }; 
  var applyStateL = new Control_Apply.Apply(function () {
      return functorStateL;
  }, function (f) {
      return function (x) {
          return function (s) {
              var v = stateL(f)(s);
              var v1 = stateL(x)(v.accum);
              return {
                  accum: v1.accum, 
                  value: v.value(v1.value)
              };
          };
      };
  });
  var applicativeStateL = new Control_Applicative.Applicative(function () {
      return applyStateL;
  }, function (a) {
      return function (s) {
          return {
              accum: s, 
              value: a
          };
      };
  });
  var mapAccumL = function (dictTraversable) {
      return function (f) {
          return function (s0) {
              return function (xs) {
                  return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                      return function (s) {
                          return f(s)(a);
                      };
                  })(xs))(s0);
              };
          };
      };
  };
  var scanl = function (dictTraversable) {
      return function (f) {
          return function (b0) {
              return function (xs) {
                  return (mapAccumL(dictTraversable)(function (b) {
                      return function (a) {
                          var b$prime = f(b)(a);
                          return {
                              accum: b$prime, 
                              value: b$prime
                          };
                      };
                  })(b0)(xs)).value;
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["mapAccumL"] = mapAccumL;
  exports["scanl"] = scanl;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 37, column 3 - line 37, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 230, column 1 - line 230, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 44, column 3 - line 44, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 80, column 3 - line 80, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.find = function(selector) {
      return function(ob) {
          return function() {
              return ob.find(selector);
          };
      };
  };

  exports.create = function(html) {
      return function() {
          return jQuery(html);
      };
  };

  exports.getProp = function(p) {
      return function(ob) {
          return function() {
              return ob.prop(p);
          };
      };
  };

  exports.append = function(ob1) {
      return function(ob) {
          return function() {
              ob.append(ob1);
          };
      };
  };

  exports.body = function() {
      return jQuery(document.body);
  };

  exports.getText = function(ob) {
      return function() {
          return ob.text();
      };
  };

  exports.setText = function(text) {
      return function(ob) {
          return function() {
              ob.text(text);
          };
      };
  };

  exports.getValue = function(ob) {
      return function() {
          return ob.val();
      };
  };

  exports.setValue = function(val) {
      return function(ob) {
          return function() {
              ob.val(val);
          };
      };
  };

  exports.on = function(evt) {
      return function(act) {
          return function(ob) {
              return function() {
                  ob.on(evt, function(e) {
                      act(e)(jQuery(this))();
                  });
              };
          };
      };
  };
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
    "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["MonadThrow"] = MonadThrow;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return f(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(z)(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(v.value1)(z);
          };
      };
  });
  var traversableTuple = new Data_Traversable.Traversable(function () {
      return foldableTuple;
  }, function () {
      return functorTuple;
  }, function (dictApplicative) {
      return function (v) {
          return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
      };
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["functorTuple"] = functorTuple;
  exports["foldableTuple"] = foldableTuple;
  exports["traversableTuple"] = traversableTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;

  exports.readFloat = parseFloat;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
  exports["readFloat"] = $foreign.readFloat;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];      
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 63, column 1 - line 68, column 43: " + [ x.constructor.name ]);
  };
  var floor = function ($3) {
      return unsafeClamp($$Math.floor($3));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];        
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  var replicate = function (dictUnfoldable) {
      return function (n) {
          return function (v) {
              var step = function (i) {
                  var $8 = i <= 0;
                  if ($8) {
                      return Data_Maybe.Nothing.value;
                  };
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
              };
              return unfoldr(dictUnfoldable)(step)(n);
          };
      };
  };
  var replicateA = function (dictApplicative) {
      return function (dictUnfoldable) {
          return function (dictTraversable) {
              return function (n) {
                  return function (m) {
                      return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                  };
              };
          };
      };
  };
  exports["Unfoldable"] = Unfoldable;
  exports["replicate"] = replicate;
  exports["replicateA"] = replicateA;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };               
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($116) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($116));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var __tco_b = __copy_b;
              var __tco_done = false;
              var __tco_result;
              function __tco_loop(b, v) {
                  if (v instanceof Nil) {
                      __tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      __tco_b = f(b)(v.value0);
                      __copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 76, column 12 - line 78, column 30: " + [ v.constructor.name ]);
              };
              while (!__tco_done) {
                  __tco_result = __tco_loop(__tco_b, __copy_v);
              };
              return __tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = function (__copy_acc) {
              return function (__copy_v) {
                  var __tco_acc = __copy_acc;
                  var __tco_done = false;
                  var __tco_result;
                  function __tco_loop(acc, v) {
                      if (v instanceof Nil) {
                          __tco_done = true;
                          return acc;
                      };
                      if (v instanceof Cons) {
                          __tco_acc = new Cons(v.value0, acc);
                          __copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 71, column 15 - line 73, column 33: " + [ v.constructor.name ]);
                  };
                  while (!__tco_done) {
                      __tco_result = __tco_loop(__tco_acc, __copy_v);
                  };
                  return __tco_result;
              };
          };
          return function ($117) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)($117));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });                                                                  
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function ($118) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                  return function ($119) {
                      return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($119));
                  };
              })(Control_Applicative.pure(dictApplicative)(Nil.value))($118));
          };
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 93, column 3 - line 93, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                                                   
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0, 
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 253, column 1 - line 253, column 21: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 239, column 1 - line 239, column 19: " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var __tco_acc = __copy_acc;
              var __tco_done = false;
              var __tco_result;
              function __tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      __tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                      __copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 359, column 11 - line 362, column 36: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!__tco_done) {
                  __tco_result = __tco_loop(__tco_acc, __copy_v);
              };
              return __tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              var go = function (__copy_v) {
                  return function (__copy_v1) {
                      return function (__copy_acc) {
                          var __tco_v = __copy_v;
                          var __tco_v1 = __copy_v1;
                          var __tco_done = false;
                          var __tco_result;
                          function __tco_loop(v, v1, acc) {
                              if (v instanceof Data_List_Types.Nil) {
                                  __tco_done = true;
                                  return acc;
                              };
                              if (v1 instanceof Data_List_Types.Nil) {
                                  __tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                  __tco_v = v.value1;
                                  __tco_v1 = v1.value1;
                                  __copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List line 650, column 19 - line 654, column 52: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                          };
                          while (!__tco_done) {
                              __tco_result = __tco_loop(__tco_v, __tco_v1, __copy_acc);
                          };
                          return __tco_result;
                      };
                  };
              };
              return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
          };
      };
  };
  var zip = zipWith(Data_Tuple.Tuple.create);
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Data_Boolean.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var __tco_s = __copy_s;
                              var __tco_e = __copy_e;
                              var __tco_step = __copy_step;
                              var __tco_done = false;
                              var __tco_result;
                              function __tco_loop(s, e, step, rest) {
                                  if (s === e) {
                                      __tco_done = true;
                                      return new Data_List_Types.Cons(s, rest);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      __tco_s = s + step | 0;
                                      __tco_e = e;
                                      __tco_step = step;
                                      __copy_rest = new Data_List_Types.Cons(s, rest);
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 139, column 31 - line 142, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                              while (!__tco_done) {
                                  __tco_result = __tco_loop(__tco_s, __tco_e, __tco_step, __copy_rest);
                              };
                              return __tco_result;
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $195 = start > end;
                  if ($195) {
                      return 1;
                  };
                  return -1 | 0;
              })())(Data_List_Types.Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 65: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 224, column 1 - line 224, column 19: " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["fromFoldable"] = fromFoldable;
  exports["head"] = head;
  exports["range"] = range;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
  exports["tail"] = tail;
  exports["toUnfoldable"] = toUnfoldable;
  exports["uncons"] = uncons;
  exports["zip"] = zip;
  exports["zipWith"] = zipWith;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var singleton = function ($42) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($42));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = function ($121) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 105, column 1 - line 107, column 54: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readNumber = unsafeReadTagged("Number");
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["fail"] = fail;
  exports["readBoolean"] = readBoolean;
  exports["readNumber"] = readNumber;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  exports["append"] = $foreign.append;
  exports["body"] = $foreign.body;
  exports["create"] = $foreign.create;
  exports["find"] = $foreign.find;
  exports["getProp"] = $foreign.getProp;
  exports["getText"] = $foreign.getText;
  exports["getValue"] = $foreign.getValue;
  exports["on"] = $foreign.on;
  exports["setText"] = $foreign.setText;
  exports["setValue"] = $foreign.setValue;
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */

  // module Control.Monad.Eff.WebGL


      "use strict";

      exports.runWebGl_ = function (f) {
        return f;
    };
})(PS["Control.Monad.Eff.WebGL"] = PS["Control.Monad.Eff.WebGL"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Control.Monad.Eff.WebGL"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runWebGl_"] = $foreign.runWebGl_;
})(PS["Control.Monad.Eff.WebGL"] = PS["Control.Monad.Eff.WebGL"] || {});
(function(exports) {
    "use strict";

  function id(x) {
    return x;
  } 

  var objToString = Object.prototype.toString;

  function isArray(a) {
    return objToString.call(a) === "[object Array]";
  }

  exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull(null);
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (objToString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports.size = function (m) {
    var s = 0;
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        ++s;
      }
    }
    return s;
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;

  exports.keys = Object.keys || _collect(function (k) {
    return function () { return k; };
  });
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicate = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ?
      replicate :
      replicatePolyfill;

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      // jshint maxparams: 2
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unzip = $foreign["uncons'"](function (v) {
      return new Data_Tuple.Tuple([  ], [  ]);
  })(function (v) {
      return function (ts) {
          var v1 = unzip(ts);
          return new Data_Tuple.Tuple($foreign.cons(v.value0)(v1.value0), $foreign.cons(v.value1)(v1.value1));
      };
  });
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array line 132, column 19 - line 137, column 26: " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  };
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 462, column 15 - line 467, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var nubBy = function (eq) {
      return function (xs) {
          var v = uncons(xs);
          if (v instanceof Data_Maybe.Just) {
              return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                  return !eq(v.value0.head)(y);
              })(v.value0.tail)));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          throw new Error("Failed pattern match at Data.Array line 570, column 3 - line 572, column 18: " + [ v.constructor.name ]);
      };
  };
  var nub = function (dictEq) {
      return nubBy(Data_Eq.eq(dictEq));
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (a) {
              return $foreign["uncons'"](function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(a);
              })(function (b) {
                  return function (bs) {
                      return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                          return foldM(dictMonad)(f)(a$prime)(bs);
                      });
                  };
              });
          };
      };
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  exports["concatMap"] = concatMap;
  exports["findIndex"] = findIndex;
  exports["foldM"] = foldM;
  exports["head"] = head;
  exports["index"] = index;
  exports["last"] = last;
  exports["nub"] = nub;
  exports["nubBy"] = nubBy;
  exports["null"] = $$null;
  exports["sortBy"] = sortBy;
  exports["tail"] = tail;
  exports["toUnfoldable"] = toUnfoldable;
  exports["uncons"] = uncons;
  exports["unsafeIndex"] = unsafeIndex;
  exports["unzip"] = unzip;
  exports["updateAt"] = updateAt;
  exports["zip"] = zip;
  exports["concat"] = $foreign.concat;
  exports["cons"] = $foreign.cons;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["take"] = $foreign.take;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var values = $foreign._collect(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function ($40) {
          return Data_Array.toUnfoldable(dictUnfoldable)($foreign._collect(Data_Tuple.Tuple.create)($40));
      };
  };
  var toArray = $foreign._collect(Data_Tuple.Tuple.create);
  var thawST = $foreign._copyEff;
  var showStrMap = function (dictShow) {
      return new Data_Show.Show(function (m) {
          return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
      });
  };
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              var v2 = Data_StrMap_ST.poke(v1)(k)(v)();
              return v1;
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign._mapWithKey(m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isSubmap = function (dictEq) {
      return function (m1) {
          return function (m2) {
              var f = function (k) {
                  return function (v) {
                      return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                  };
              };
              return $foreign.all(f)(m1);
          };
      };
  };
  var functorStrMap = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                  return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
              })();
              return v;
          });
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m));
      });
  };
  var fold = $foreign._foldM(Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                  return function (acc) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(union)(x))(acc);
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.uncurry(singleton)))(Data_Functor.map(Data_Functor.functorArray)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toArray(ms))));
          };
      };
  });
  var eqStrMap = function (dictEq) {
      return new Data_Eq.Eq(function (m1) {
          return function (m2) {
              return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
          };
      });
  };
  exports["fold"] = fold;
  exports["foldM"] = foldM;
  exports["foldMap"] = foldMap;
  exports["fromFoldable"] = fromFoldable;
  exports["isSubmap"] = isSubmap;
  exports["lookup"] = lookup;
  exports["mapWithKey"] = mapWithKey;
  exports["member"] = member;
  exports["pureST"] = pureST;
  exports["singleton"] = singleton;
  exports["thawST"] = thawST;
  exports["toUnfoldable"] = toUnfoldable;
  exports["union"] = union;
  exports["values"] = values;
  exports["functorStrMap"] = functorStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["eqStrMap"] = eqStrMap;
  exports["showStrMap"] = showStrMap;
  exports["keys"] = $foreign.keys;
  exports["size"] = $foreign.size;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(foldJsonNull);
  var foldJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                          
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonBoolean"] = foldJsonBoolean;
  exports["foldJsonNull"] = foldJsonNull;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonString"] = foldJsonString;
  exports["isNull"] = isNull;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 425, column 1 - line 425, column 18: " + [ v.constructor.name ]);
  }; 
  var fromZipper = function (__copy_dictOrd) {
      return function (__copy_v) {
          return function (__copy_tree) {
              var __tco_dictOrd = __copy_dictOrd;
              var __tco_v = __copy_v;
              var __tco_done = false;
              var __tco_result;
              function __tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      __tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          __tco_dictOrd = dictOrd;
                          __tco_v = v.value1;
                          __copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          __tco_dictOrd = dictOrd;
                          __tco_v = v.value1;
                          __copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          __tco_dictOrd = dictOrd;
                          __tco_v = v.value1;
                          __copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          __tco_dictOrd = dictOrd;
                          __tco_v = v.value1;
                          __copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          __tco_dictOrd = dictOrd;
                          __tco_v = v.value1;
                          __copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 247, column 3 - line 252, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 245, column 1 - line 245, column 27: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!__tco_done) {
                  __tco_result = __tco_loop(__tco_dictOrd, __tco_v, __copy_tree);
              };
              return __tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      var up = function (__copy_v) {
          return function (__copy_v1) {
              var __tco_v = __copy_v;
              var __tco_done = false;
              var __tco_result;
              function __tco_loop(v, v1) {
                  if (v instanceof Data_List_Types.Nil) {
                      __tco_done = true;
                      return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          __tco_done = true;
                          return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                      };
                      if (v.value0 instanceof TwoRight) {
                          __tco_done = true;
                          return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          __tco_v = v.value1;
                          __copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          __tco_v = v.value1;
                          __copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          __tco_v = v.value1;
                          __copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map line 283, column 5 - line 288, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 281, column 3 - line 281, column 54: " + [ v.constructor.name, v1.constructor.name ]);
              };
              while (!__tco_done) {
                  __tco_result = __tco_loop(__tco_v, __copy_v1);
              };
              return __tco_result;
          };
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy_v1) {
                      var __tco_ctx = __copy_ctx;
                      var __tco_k = __copy_k;
                      var __tco_v = __copy_v;
                      var __tco_done = false;
                      var __tco_result;
                      function __tco_loop(ctx, k, v, v1) {
                          if (v1 instanceof Leaf) {
                              __tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  __tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  __tco_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  __tco_k = k;
                                  __tco_v = v;
                                  __copy_v1 = v1.value0;
                                  return;
                              };
                              __tco_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              __tco_k = k;
                              __tco_v = v;
                              __copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  __tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  __tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  __tco_k = k;
                                  __tco_v = v;
                                  __copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  __tco_k = k;
                                  __tco_v = v;
                                  __copy_v1 = v1.value3;
                                  return;
                              };
                              __tco_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              __tco_k = k;
                              __tco_v = v;
                              __copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map line 264, column 3 - line 264, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                      };
                      while (!__tco_done) {
                          __tco_result = __tco_loop(__tco_ctx, __tco_k, __tco_v, __copy_v1);
                      };
                      return __tco_result;
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var empty = Leaf.value;
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["values"] = values;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  }; 
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
  var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Value is not a Boolean"))(Data_Either.Right.create));
  var decodeJson = function (dict) {
      return dict.decodeJson;
  }; 
  var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($32) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($32));
  })(decodeJson(decodeJsonNumber)));
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Class line 24, column 3 - line 26, column 40: " + [ j.constructor.name ]);
      });
  };
  var decodeJObject = function ($33) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($33));
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function ($34) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode StrMap: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($34));
      });
  };
  var decodeJArray = function ($35) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($35));
  };
  var decodeList = function (dictDecodeJson) {
      return new DecodeJson(function ($36) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode List: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)(Data_List.fromFoldable(Data_Foldable.foldableArray)))(decodeJArray))($36));
      });
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function ($38) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode Array: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJArray)($38));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonBoolean"] = decodeJsonBoolean;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
  exports["decodeList"] = decodeList;
})(PS["Data.Argonaut.Decode.Class"] = PS["Data.Argonaut.Decode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
})(PS["Data.Argonaut.Decode.Combinators"] = PS["Data.Argonaut.Decode.Combinators"] || {});
(function(exports) {
    "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];        
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
    "use strict";

  // module Data.Generic

  exports.zipAll = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        for (var i = 0; i < l; i++) {
          if (!f(xs[i])(ys[i])) {
            return false;
          }
        }
        return true;
      };
    };
  };
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];
  var Type_Proxy = PS["Type.Proxy"];        
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SUnit = (function () {
      function SUnit() {

      };
      SUnit.value = new SUnit();
      return SUnit;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };                  
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var force = function (f) {
      return f(Data_Unit.unit);
  };
  var genericShowPrec = function (v) {
      return function (v1) {
          if (v1 instanceof SProd) {
              if (Data_Array["null"](v1.value1)) {
                  return v1.value0;
              };
              if (Data_Boolean.otherwise) {
                  var showParen = function (v2) {
                      return function (x) {
                          if (!v2) {
                              return x;
                          };
                          if (v2) {
                              return "(" + (x + ")");
                          };
                          throw new Error("Failed pattern match at Data.Generic line 467, column 7 - line 467, column 28: " + [ v2.constructor.name, x.constructor.name ]);
                      };
                  };
                  return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return genericShowPrec(11)(force(x));
                  })(v1.value1))));
              };
          };
          if (v1 instanceof SRecord) {
              var showLabelPart = function (x) {
                  return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
              };
              return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
          };
          if (v1 instanceof SBoolean) {
              return Data_Show.show(Data_Show.showBoolean)(v1.value0);
          };
          if (v1 instanceof SInt) {
              return Data_Show.show(Data_Show.showInt)(v1.value0);
          };
          if (v1 instanceof SNumber) {
              return Data_Show.show(Data_Show.showNumber)(v1.value0);
          };
          if (v1 instanceof SString) {
              return Data_Show.show(Data_Show.showString)(v1.value0);
          };
          if (v1 instanceof SChar) {
              return Data_Show.show(Data_Show.showChar)(v1.value0);
          };
          if (v1 instanceof SArray) {
              return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return genericShowPrec(0)(force(x));
              })(v1.value0)) + "]");
          };
          if (v1 instanceof SUnit) {
              return "unit";
          };
          throw new Error("Failed pattern match at Data.Generic line 461, column 1 - line 469, column 1: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var gShow = function (dictGeneric) {
      return function ($312) {
          return genericShowPrec(0)(toSpine(dictGeneric)($312));
      };
  };                                                           
  var eqThunk = function (dictEq) {
      return function (x) {
          return function (y) {
              return Data_Eq.eq(dictEq)(force(x))(force(y));
          };
      };
  };
  var eqRecordSigs = function (dictEq) {
      return function (arr1) {
          return function (arr2) {
              var labelCompare = function (r1) {
                  return function (r2) {
                      return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
                  };
              };
              var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
              var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
              var doCmp = function (x) {
                  return function (y) {
                      return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
                  };
              };
              return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
          };
      };
  };
  var eqGenericSpine = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof SProd && v1 instanceof SProd) {
              return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
          };
          if (v instanceof SRecord && v1 instanceof SRecord) {
              return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
          };
          if (v instanceof SNumber && v1 instanceof SNumber) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SBoolean && v1 instanceof SBoolean) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SInt && v1 instanceof SInt) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SString && v1 instanceof SString) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SChar && v1 instanceof SChar) {
              return v.value0 === v1.value0;
          };
          if (v instanceof SArray && v1 instanceof SArray) {
              return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
          };
          if (v instanceof SUnit && v1 instanceof SUnit) {
              return true;
          };
          return false;
      };
  });
  var gEq = function (dictGeneric) {
      return function (x) {
          return function (y) {
              return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
          };
      };
  };
  exports["SigProd"] = SigProd;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["SUnit"] = SUnit;
  exports["Generic"] = Generic;
  exports["fromSpine"] = fromSpine;
  exports["gEq"] = gEq;
  exports["gShow"] = gShow;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["eqGenericSpine"] = eqGenericSpine;
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
    "use strict";

  exports.unsafeIndex = function (m) {
    return function (k) {
      return m[k];
    };
  };
})(PS["Data.StrMap.Unsafe"] = PS["Data.StrMap.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.StrMap.Unsafe"];
  var Data_StrMap = PS["Data.StrMap"];
  exports["unsafeIndex"] = $foreign.unsafeIndex;
})(PS["Data.StrMap.Unsafe"] = PS["Data.StrMap.Unsafe"] || {});
(function(exports) {
  /* global exports */

  // module Data.TypedArray


      "use strict";     

      exports.asInt32Array = function (array)
          {var res = new Int32Array( array);
           return res;};

      exports.asFloat32Array = function (array)
          {var res = new Float32Array( array);
           return res;};
})(PS["Data.TypedArray"] = PS["Data.TypedArray"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Data.TypedArray"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["asFloat32Array"] = $foreign.asFloat32Array;
  exports["asInt32Array"] = $foreign.asInt32Array;
})(PS["Data.TypedArray"] = PS["Data.TypedArray"] || {});
(function(exports) {
  /* global exports */

  // module Extensions


      "use strict";

      exports.fail = function(s) {
        throw new Error(s);
      }
})(PS["Extensions"] = PS["Extensions"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Extensions"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  exports["fail"] = $foreign.fail;
})(PS["Extensions"] = PS["Extensions"] || {});
(function(exports) {
  /* global exports */

  // module Graphics.WebGL

      "use strict";


      exports.initGL_ = function (canvasId) {
              return function(attr) {
                  return function() {
                    var canvas = document.getElementById(canvasId);
                    try {
                      gl = canvas.getContext("webgl", attr) || canvas.getContext("experimental-webgl", attr);
                    }
                    catch(e) {return false;}
                    if (!gl)
                    {
                      gl = null;
                      return false;
                    }
                    return true;
            };
        };
    };

          exports.getCanvasWidth_ = function(canvasId) {
            return function() {
              var canvas = document.getElementById(canvasId);
              return canvas.width;
              };
          };

          exports.getCanvasHeight_ = function(canvasId) {
            return function() {
              var canvas = document.getElementById(canvasId);
              return canvas.height;
              };
          };
})(PS["Graphics.WebGL"] = PS["Graphics.WebGL"] || {});
(function(exports) {
  // Auto generated: don't change manually, use purescript-webgl-generator to modify!!
  /* global exports */

  // module Graphics.WebGLRaw

    "use strict";
      exports.getExtension_ = function (name)
      {return function()
       {var res = gl.getExtension(name);
        if (res === undefined){
          throw "Undefined in  getExtension"};
        return res;}
       ;}
      ;
      exports.activeTexture_ = function (texture)
      {return function()
       {gl.activeTexture(texture);}
       ;}
      ;
      exports.attachShader_ = function (program)
      {return function(shader)
       {return function()
        {gl.attachShader(program,shader);}
        ;}
       ;}
      ;
      exports.bindBuffer_ = function (target)
      {return function(buffer)
       {return function()
        {gl.bindBuffer(target,buffer);}
        ;}
       ;}
      ;
      exports.bindFramebuffer_ = function (target)
      {return function(framebuffer)
       {return function()
        {gl.bindFramebuffer(target,framebuffer);}
        ;}
       ;}
      ;
      exports.bindTexture_ = function (target)
      {return function(texture)
       {return function()
        {gl.bindTexture(target,texture);}
        ;}
       ;}
      ;
      exports.blendColor_ = function (red)
      {return function(green)
       {return function(blue)
        {return function(alpha)
         {return function()
          {gl.blendColor(red,green,blue,alpha);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.blendEquationSeparate_ = function (modeRGB)
      {return function(modeAlpha)
       {return function()
        {gl.blendEquationSeparate(modeRGB,modeAlpha);}
        ;}
       ;}
      ;
      exports.blendFuncSeparate_ = function (srcRGB)
      {return function(dstRGB)
       {return function(srcAlpha)
        {return function(dstAlpha)
         {return function()
          {gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.clear_ = function (mask)
      {return function()
       {gl.clear(mask);}
       ;}
      ;
      exports.clearColor_ = function (red)
      {return function(green)
       {return function(blue)
        {return function(alpha)
         {return function()
          {gl.clearColor(red,green,blue,alpha);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.clearDepth_ = function (depth)
      {return function()
       {gl.clearDepth(depth);}
       ;}
      ;
      exports.clearStencil_ = function (s)
      {return function()
       {gl.clearStencil(s);}
       ;}
      ;
      exports.colorMask_ = function (red)
      {return function(green)
       {return function(blue)
        {return function(alpha)
         {return function()
          {gl.colorMask(red,green,blue,alpha);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.compileShader_ = function (shader)
      {return function()
       {gl.compileShader(shader);}
       ;}
      ;
      exports.createBuffer_ = function ()
      {var res = gl.createBuffer();
       if (res === undefined){
         throw "Undefined in  createBuffer"};
       return res;}
      ;
      exports.createFramebuffer_ = function ()
      {var res = gl.createFramebuffer();
       if (res === undefined){
         throw "Undefined in  createFramebuffer"};
       return res;}
      ;
      exports.createProgram_ = function ()
      {var res = gl.createProgram();
       if (res === undefined){
         throw "Undefined in  createProgram"};
       return res;}
      ;
      exports.createShader_ = function (type)
      {return function()
       {var res = gl.createShader(type);
        if (res === undefined){
          throw "Undefined in  createShader"};
        return res;}
       ;}
      ;
      exports.createTexture_ = function ()
      {var res = gl.createTexture();
       if (res === undefined){
         throw "Undefined in  createTexture"};
       return res;}
      ;
      exports.cullFace_ = function (mode)
      {return function()
       {gl.cullFace(mode);}
       ;}
      ;
      exports.deleteProgram_ = function (program)
      {return function()
       {gl.deleteProgram(program);}
       ;}
      ;
      exports.deleteShader_ = function (shader)
      {return function()
       {gl.deleteShader(shader);}
       ;}
      ;
      exports.depthFunc_ = function (func)
      {return function()
       {gl.depthFunc(func);}
       ;}
      ;
      exports.depthMask_ = function (flag)
      {return function()
       {gl.depthMask(flag);}
       ;}
      ;
      exports.disable_ = function (cap)
      {return function()
       {gl.disable(cap);}
       ;}
      ;
      exports.disableVertexAttribArray_ = function (index)
      {return function()
       {gl.disableVertexAttribArray(index);}
       ;}
      ;
      exports.drawArrays_ = function (mode)
      {return function(first)
       {return function(count)
        {return function()
         {gl.drawArrays(mode,first,count);}
         ;}
        ;}
       ;}
      ;
      exports.drawElements_ = function (mode)
      {return function(count)
       {return function(type)
        {return function(offset)
         {return function()
          {gl.drawElements(mode,count,type,offset);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.enable_ = function (cap)
      {return function()
       {gl.enable(cap);}
       ;}
      ;
      exports.enableVertexAttribArray_ = function (index)
      {return function()
       {gl.enableVertexAttribArray(index);}
       ;}
      ;
      exports.framebufferTexture2D_ = function (target)
      {return function(attachment)
       {return function(textarget)
        {return function(texture)
         {return function(level)
          {return function()
           {gl.framebufferTexture2D(target,attachment,textarget,texture,level);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.frontFace_ = function (mode)
      {return function()
       {gl.frontFace(mode);}
       ;}
      ;
      exports.getAttribLocation_ = function (program)
      {return function(name)
       {return function()
        {var res = gl.getAttribLocation(program,name);
         if (res === undefined){
           throw "Undefined in  getAttribLocation"};
         return res;}
        ;}
       ;}
      ;
      exports.getProgramParameter_ = function (program)
      {return function(pname)
       {return function()
        {var res = gl.getProgramParameter(program,pname);
         if (res === undefined){
           throw "Undefined in  getProgramParameter"};
         return res;}
        ;}
       ;}
      ;
      exports.getProgramInfoLog_ = function (program)
      {return function()
       {var res = gl.getProgramInfoLog(program);
        if (res === undefined){
          throw "Undefined in  getProgramInfoLog"};
        return res;}
       ;}
      ;
      exports.getShaderParameter_ = function (shader)
      {return function(pname)
       {return function()
        {var res = gl.getShaderParameter(shader,pname);
         if (res === undefined){
           throw "Undefined in  getShaderParameter"};
         return res;}
        ;}
       ;}
      ;
      exports.getShaderInfoLog_ = function (shader)
      {return function()
       {var res = gl.getShaderInfoLog(shader);
        if (res === undefined){
          throw "Undefined in  getShaderInfoLog"};
        return res;}
       ;}
      ;
      exports.getUniformLocation_ = function (program)
      {return function(name)
       {return function()
        {var res = gl.getUniformLocation(program,name);
         if (res === undefined){
           throw "Undefined in  getUniformLocation"};
         return res;}
        ;}
       ;}
      ;
      exports.lineWidth_ = function (width)
      {return function()
       {gl.lineWidth(width);}
       ;}
      ;
      exports.linkProgram_ = function (program)
      {return function()
       {gl.linkProgram(program);}
       ;}
      ;
      exports.pixelStorei_ = function (pname)
      {return function(param)
       {return function()
        {gl.pixelStorei(pname,param);}
        ;}
       ;}
      ;
      exports.polygonOffset_ = function (factor)
      {return function(units)
       {return function()
        {gl.polygonOffset(factor,units);}
        ;}
       ;}
      ;
      exports.shaderSource_ = function (shader)
      {return function(source)
       {return function()
        {gl.shaderSource(shader,source);}
        ;}
       ;}
      ;
      exports.texParameteri_ = function (target)
      {return function(pname)
       {return function(param)
        {return function()
         {gl.texParameteri(target,pname,param);}
         ;}
        ;}
       ;}
      ;
      exports.uniform1fv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform1fv(location,v);}
        ;}
       ;}
      ;
      exports.uniform1i_ = function (location)
      {return function(x)
       {return function()
        {gl.uniform1i(location,x);}
        ;}
       ;}
      ;
      exports.uniform1iv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform1iv(location,v);}
        ;}
       ;}
      ;
      exports.uniform2fv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform2fv(location,v);}
        ;}
       ;}
      ;
      exports.uniform2iv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform2iv(location,v);}
        ;}
       ;}
      ;
      exports.uniform3fv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform3fv(location,v);}
        ;}
       ;}
      ;
      exports.uniform3iv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform3iv(location,v);}
        ;}
       ;}
      ;
      exports.uniform4fv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform4fv(location,v);}
        ;}
       ;}
      ;
      exports.uniform4iv_ = function (location)
      {return function(v)
       {return function()
        {gl.uniform4iv(location,v);}
        ;}
       ;}
      ;
      exports.uniformMatrix2fv_ = function (location)
      {return function(transpose)
       {return function(value)
        {return function()
         {gl.uniformMatrix2fv(location,transpose,value);}
         ;}
        ;}
       ;}
      ;
      exports.uniformMatrix3fv_ = function (location)
      {return function(transpose)
       {return function(value)
        {return function()
         {gl.uniformMatrix3fv(location,transpose,value);}
         ;}
        ;}
       ;}
      ;
      exports.uniformMatrix4fv_ = function (location)
      {return function(transpose)
       {return function(value)
        {return function()
         {gl.uniformMatrix4fv(location,transpose,value);}
         ;}
        ;}
       ;}
      ;
      exports.useProgram_ = function (program)
      {return function()
       {gl.useProgram(program);}
       ;}
      ;
      exports.vertexAttrib1f_ = function (indx)
      {return function(x)
       {return function()
        {gl.vertexAttrib1f(indx,x);}
        ;}
       ;}
      ;
      exports.vertexAttrib2f_ = function (indx)
      {return function(x)
       {return function(y)
        {return function()
         {gl.vertexAttrib2f(indx,x,y);}
         ;}
        ;}
       ;}
      ;
      exports.vertexAttrib3f_ = function (indx)
      {return function(x)
       {return function(y)
        {return function(z)
         {return function()
          {gl.vertexAttrib3f(indx,x,y,z);}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.vertexAttrib4f_ = function (indx)
      {return function(x)
       {return function(y)
        {return function(z)
         {return function(w)
          {return function()
           {gl.vertexAttrib4f(indx,x,y,z,w);}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.vertexAttribPointer_ = function (indx)
      {return function(size)
       {return function(type)
        {return function(normalized)
         {return function(stride)
          {return function(offset)
           {return function()
            {gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);}
            ;}
           ;}
          ;}
         ;}
        ;}
       ;}
      ;
      exports.viewport_ = function (x)
      {return function(y)
       {return function(width)
        {return function(height)
         {return function()
          {gl.viewport(x,y,width,height);}
          ;}
         ;}
        ;}
       ;}
      ;
})(PS["Graphics.WebGLRaw"] = PS["Graphics.WebGLRaw"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Graphics.WebGLRaw"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Prelude = PS["Prelude"];        
  var _ZERO = 0;       
  var _VERTEX_SHADER = 35633;         
  var _UNSIGNED_SHORT = 5123;
  var _UNSIGNED_BYTE = 5121;
  var _UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
  var _UNPACK_FLIP_Y_WEBGL = 37440;
  var _TRIANGLE_STRIP = 5;
  var _TRIANGLE_FAN = 6;
  var _TRIANGLES = 4;
  var _TEXTURE_WRAP_T = 10243;
  var _TEXTURE_WRAP_S = 10242;
  var _TEXTURE_MIN_FILTER = 10241;
  var _TEXTURE_MAG_FILTER = 10240;
  var _TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
  var _TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
  var _TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
  var _TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
  var _TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
  var _TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
  var _TEXTURE_2D = 3553;
  var _TEXTURE0 = 33984;         
  var _STENCIL_TEST = 2960;       
  var _STENCIL_BUFFER_BIT = 1024; 
  var _STATIC_DRAW = 35044;
  var _SRC_COLOR = 768;
  var _SRC_ALPHA_SATURATE = 776;
  var _SRC_ALPHA = 770;
  var _SHORT = 5122; 
  var _RGBA = 6408;   
  var _REPEAT = 10497;              
  var _POLYGON_OFFSET_FILL = 32823;  
  var _POINTS = 0;          
  var _ONE_MINUS_SRC_COLOR = 769;
  var _ONE_MINUS_SRC_ALPHA = 771;
  var _ONE_MINUS_DST_COLOR = 775;
  var _ONE_MINUS_DST_ALPHA = 773;
  var _ONE_MINUS_CONSTANT_COLOR = 32770;
  var _ONE_MINUS_CONSTANT_ALPHA = 32772;
  var _ONE = 1;     
  var _NOTEQUAL = 517;
  var _NONE = 0;     
  var _NEVER = 512;
  var _NEAREST_MIPMAP_NEAREST = 9984;
  var _NEAREST_MIPMAP_LINEAR = 9986;
  var _NEAREST = 9728;
  var _MIRRORED_REPEAT = 33648;
  var _LINK_STATUS = 35714;
  var _LINE_STRIP = 3;
  var _LINE_LOOP = 2;
  var _LINES = 1;
  var _LINEAR_MIPMAP_NEAREST = 9985;
  var _LINEAR_MIPMAP_LINEAR = 9987;
  var _LINEAR = 9729;
  var _LESS = 513;
  var _LEQUAL = 515;     
  var _GREATER = 516;
  var _GEQUAL = 518;                
  var _FUNC_SUBTRACT = 32778;
  var _FUNC_REVERSE_SUBTRACT = 32779;
  var _FUNC_ADD = 32774;     
  var _FRONT = 1028;                              
  var _FRAMEBUFFER = 36160;
  var _FRAGMENT_SHADER = 35632;
  var _FLOAT = 5126;  
  var _EQUAL = 514;                         
  var _ELEMENT_ARRAY_BUFFER = 34963;
  var _DST_COLOR = 774;
  var _DST_ALPHA = 772;       
  var _DEPTH_TEST = 2929;        
  var _DEPTH_COMPONENT = 6402;  
  var _DEPTH_BUFFER_BIT = 256;
  var _DEPTH_ATTACHMENT = 36096;
  var _CW = 2304;            
  var _CULL_FACE = 2884;          
  var _CONSTANT_COLOR = 32769;
  var _CONSTANT_ALPHA = 32771;            
  var _COMPILE_STATUS = 35713;  
  var _COLOR_BUFFER_BIT = 16384;
  var _COLOR_ATTACHMENT0 = 36064;
  var _CLAMP_TO_EDGE = 33071;
  var _CCW = 2305;
  var _BYTE = 5120;        
  var _BLEND = 3042;
  var _BACK = 1029;                 
  var _ARRAY_BUFFER = 34962;
  var _ALWAYS = 519;
  exports["_ALWAYS"] = _ALWAYS;
  exports["_ARRAY_BUFFER"] = _ARRAY_BUFFER;
  exports["_BACK"] = _BACK;
  exports["_BLEND"] = _BLEND;
  exports["_BYTE"] = _BYTE;
  exports["_CCW"] = _CCW;
  exports["_CLAMP_TO_EDGE"] = _CLAMP_TO_EDGE;
  exports["_COLOR_ATTACHMENT0"] = _COLOR_ATTACHMENT0;
  exports["_COLOR_BUFFER_BIT"] = _COLOR_BUFFER_BIT;
  exports["_COMPILE_STATUS"] = _COMPILE_STATUS;
  exports["_CONSTANT_ALPHA"] = _CONSTANT_ALPHA;
  exports["_CONSTANT_COLOR"] = _CONSTANT_COLOR;
  exports["_CULL_FACE"] = _CULL_FACE;
  exports["_CW"] = _CW;
  exports["_DEPTH_ATTACHMENT"] = _DEPTH_ATTACHMENT;
  exports["_DEPTH_BUFFER_BIT"] = _DEPTH_BUFFER_BIT;
  exports["_DEPTH_COMPONENT"] = _DEPTH_COMPONENT;
  exports["_DEPTH_TEST"] = _DEPTH_TEST;
  exports["_DST_ALPHA"] = _DST_ALPHA;
  exports["_DST_COLOR"] = _DST_COLOR;
  exports["_ELEMENT_ARRAY_BUFFER"] = _ELEMENT_ARRAY_BUFFER;
  exports["_EQUAL"] = _EQUAL;
  exports["_FLOAT"] = _FLOAT;
  exports["_FRAGMENT_SHADER"] = _FRAGMENT_SHADER;
  exports["_FRAMEBUFFER"] = _FRAMEBUFFER;
  exports["_FRONT"] = _FRONT;
  exports["_FUNC_ADD"] = _FUNC_ADD;
  exports["_FUNC_REVERSE_SUBTRACT"] = _FUNC_REVERSE_SUBTRACT;
  exports["_FUNC_SUBTRACT"] = _FUNC_SUBTRACT;
  exports["_GEQUAL"] = _GEQUAL;
  exports["_GREATER"] = _GREATER;
  exports["_LEQUAL"] = _LEQUAL;
  exports["_LESS"] = _LESS;
  exports["_LINEAR"] = _LINEAR;
  exports["_LINEAR_MIPMAP_LINEAR"] = _LINEAR_MIPMAP_LINEAR;
  exports["_LINEAR_MIPMAP_NEAREST"] = _LINEAR_MIPMAP_NEAREST;
  exports["_LINES"] = _LINES;
  exports["_LINE_LOOP"] = _LINE_LOOP;
  exports["_LINE_STRIP"] = _LINE_STRIP;
  exports["_LINK_STATUS"] = _LINK_STATUS;
  exports["_MIRRORED_REPEAT"] = _MIRRORED_REPEAT;
  exports["_NEAREST"] = _NEAREST;
  exports["_NEAREST_MIPMAP_LINEAR"] = _NEAREST_MIPMAP_LINEAR;
  exports["_NEAREST_MIPMAP_NEAREST"] = _NEAREST_MIPMAP_NEAREST;
  exports["_NEVER"] = _NEVER;
  exports["_NONE"] = _NONE;
  exports["_NOTEQUAL"] = _NOTEQUAL;
  exports["_ONE"] = _ONE;
  exports["_ONE_MINUS_CONSTANT_ALPHA"] = _ONE_MINUS_CONSTANT_ALPHA;
  exports["_ONE_MINUS_CONSTANT_COLOR"] = _ONE_MINUS_CONSTANT_COLOR;
  exports["_ONE_MINUS_DST_ALPHA"] = _ONE_MINUS_DST_ALPHA;
  exports["_ONE_MINUS_DST_COLOR"] = _ONE_MINUS_DST_COLOR;
  exports["_ONE_MINUS_SRC_ALPHA"] = _ONE_MINUS_SRC_ALPHA;
  exports["_ONE_MINUS_SRC_COLOR"] = _ONE_MINUS_SRC_COLOR;
  exports["_POINTS"] = _POINTS;
  exports["_POLYGON_OFFSET_FILL"] = _POLYGON_OFFSET_FILL;
  exports["_REPEAT"] = _REPEAT;
  exports["_RGBA"] = _RGBA;
  exports["_SHORT"] = _SHORT;
  exports["_SRC_ALPHA"] = _SRC_ALPHA;
  exports["_SRC_ALPHA_SATURATE"] = _SRC_ALPHA_SATURATE;
  exports["_SRC_COLOR"] = _SRC_COLOR;
  exports["_STATIC_DRAW"] = _STATIC_DRAW;
  exports["_STENCIL_BUFFER_BIT"] = _STENCIL_BUFFER_BIT;
  exports["_STENCIL_TEST"] = _STENCIL_TEST;
  exports["_TEXTURE0"] = _TEXTURE0;
  exports["_TEXTURE_2D"] = _TEXTURE_2D;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_X"] = _TEXTURE_CUBE_MAP_NEGATIVE_X;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_Y"] = _TEXTURE_CUBE_MAP_NEGATIVE_Y;
  exports["_TEXTURE_CUBE_MAP_NEGATIVE_Z"] = _TEXTURE_CUBE_MAP_NEGATIVE_Z;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_X"] = _TEXTURE_CUBE_MAP_POSITIVE_X;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_Y"] = _TEXTURE_CUBE_MAP_POSITIVE_Y;
  exports["_TEXTURE_CUBE_MAP_POSITIVE_Z"] = _TEXTURE_CUBE_MAP_POSITIVE_Z;
  exports["_TEXTURE_MAG_FILTER"] = _TEXTURE_MAG_FILTER;
  exports["_TEXTURE_MIN_FILTER"] = _TEXTURE_MIN_FILTER;
  exports["_TEXTURE_WRAP_S"] = _TEXTURE_WRAP_S;
  exports["_TEXTURE_WRAP_T"] = _TEXTURE_WRAP_T;
  exports["_TRIANGLES"] = _TRIANGLES;
  exports["_TRIANGLE_FAN"] = _TRIANGLE_FAN;
  exports["_TRIANGLE_STRIP"] = _TRIANGLE_STRIP;
  exports["_UNPACK_FLIP_Y_WEBGL"] = _UNPACK_FLIP_Y_WEBGL;
  exports["_UNPACK_PREMULTIPLY_ALPHA_WEBGL"] = _UNPACK_PREMULTIPLY_ALPHA_WEBGL;
  exports["_UNSIGNED_BYTE"] = _UNSIGNED_BYTE;
  exports["_UNSIGNED_SHORT"] = _UNSIGNED_SHORT;
  exports["_VERTEX_SHADER"] = _VERTEX_SHADER;
  exports["_ZERO"] = _ZERO;
  exports["activeTexture_"] = $foreign.activeTexture_;
  exports["attachShader_"] = $foreign.attachShader_;
  exports["bindBuffer_"] = $foreign.bindBuffer_;
  exports["bindFramebuffer_"] = $foreign.bindFramebuffer_;
  exports["bindTexture_"] = $foreign.bindTexture_;
  exports["blendColor_"] = $foreign.blendColor_;
  exports["blendEquationSeparate_"] = $foreign.blendEquationSeparate_;
  exports["blendFuncSeparate_"] = $foreign.blendFuncSeparate_;
  exports["clearColor_"] = $foreign.clearColor_;
  exports["clearDepth_"] = $foreign.clearDepth_;
  exports["clearStencil_"] = $foreign.clearStencil_;
  exports["clear_"] = $foreign.clear_;
  exports["colorMask_"] = $foreign.colorMask_;
  exports["compileShader_"] = $foreign.compileShader_;
  exports["createBuffer_"] = $foreign.createBuffer_;
  exports["createFramebuffer_"] = $foreign.createFramebuffer_;
  exports["createProgram_"] = $foreign.createProgram_;
  exports["createShader_"] = $foreign.createShader_;
  exports["createTexture_"] = $foreign.createTexture_;
  exports["cullFace_"] = $foreign.cullFace_;
  exports["deleteProgram_"] = $foreign.deleteProgram_;
  exports["deleteShader_"] = $foreign.deleteShader_;
  exports["depthFunc_"] = $foreign.depthFunc_;
  exports["depthMask_"] = $foreign.depthMask_;
  exports["disableVertexAttribArray_"] = $foreign.disableVertexAttribArray_;
  exports["disable_"] = $foreign.disable_;
  exports["drawArrays_"] = $foreign.drawArrays_;
  exports["drawElements_"] = $foreign.drawElements_;
  exports["enableVertexAttribArray_"] = $foreign.enableVertexAttribArray_;
  exports["enable_"] = $foreign.enable_;
  exports["framebufferTexture2D_"] = $foreign.framebufferTexture2D_;
  exports["frontFace_"] = $foreign.frontFace_;
  exports["getAttribLocation_"] = $foreign.getAttribLocation_;
  exports["getExtension_"] = $foreign.getExtension_;
  exports["getProgramInfoLog_"] = $foreign.getProgramInfoLog_;
  exports["getProgramParameter_"] = $foreign.getProgramParameter_;
  exports["getShaderInfoLog_"] = $foreign.getShaderInfoLog_;
  exports["getShaderParameter_"] = $foreign.getShaderParameter_;
  exports["getUniformLocation_"] = $foreign.getUniformLocation_;
  exports["lineWidth_"] = $foreign.lineWidth_;
  exports["linkProgram_"] = $foreign.linkProgram_;
  exports["pixelStorei_"] = $foreign.pixelStorei_;
  exports["polygonOffset_"] = $foreign.polygonOffset_;
  exports["shaderSource_"] = $foreign.shaderSource_;
  exports["texParameteri_"] = $foreign.texParameteri_;
  exports["uniform1fv_"] = $foreign.uniform1fv_;
  exports["uniform1i_"] = $foreign.uniform1i_;
  exports["uniform1iv_"] = $foreign.uniform1iv_;
  exports["uniform2fv_"] = $foreign.uniform2fv_;
  exports["uniform2iv_"] = $foreign.uniform2iv_;
  exports["uniform3fv_"] = $foreign.uniform3fv_;
  exports["uniform3iv_"] = $foreign.uniform3iv_;
  exports["uniform4fv_"] = $foreign.uniform4fv_;
  exports["uniform4iv_"] = $foreign.uniform4iv_;
  exports["uniformMatrix2fv_"] = $foreign.uniformMatrix2fv_;
  exports["uniformMatrix3fv_"] = $foreign.uniformMatrix3fv_;
  exports["uniformMatrix4fv_"] = $foreign.uniformMatrix4fv_;
  exports["useProgram_"] = $foreign.useProgram_;
  exports["vertexAttrib1f_"] = $foreign.vertexAttrib1f_;
  exports["vertexAttrib2f_"] = $foreign.vertexAttrib2f_;
  exports["vertexAttrib3f_"] = $foreign.vertexAttrib3f_;
  exports["vertexAttrib4f_"] = $foreign.vertexAttrib4f_;
  exports["vertexAttribPointer_"] = $foreign.vertexAttribPointer_;
  exports["viewport_"] = $foreign.viewport_;
})(PS["Graphics.WebGLRaw"] = PS["Graphics.WebGLRaw"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Graphics.WebGL"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Partial = PS["Data.Array.Partial"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_TypedArray = PS["Data.TypedArray"];
  var Data_Unit = PS["Data.Unit"];
  var Extensions = PS["Extensions"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var getCanvasWidth = function (context) {
      return $foreign.getCanvasWidth_(context.canvasName);
  };
  var getCanvasHeight = function (context) {
      return $foreign.getCanvasHeight_(context.canvasName);
  };
  var defContextAttributes = {
      alpha: true, 
      depth: true, 
      stencil: false, 
      antialias: true, 
      premultipliedAlpha: true, 
      preserveDrawingBuffer: false, 
      preferLowPowerToHighPerformance: false, 
      failIfMajorPerformanceCaveat: false
  };
  var runWebGL = function (canvasId) {
      return function (failure) {
          return function (success) {
              var makeContext = {
                  canvasName: canvasId
              };
              return function __do() {
                  var v = $foreign.initGL_(canvasId)(defContextAttributes)();
                  if (v) {
                      return Control_Monad_Eff_WebGL.runWebGl_(success(makeContext))();
                  };
                  return failure("Unable to initialize WebGL. Your browser may not support it.")();
              };
          };
      };
  };
  exports["defContextAttributes"] = defContextAttributes;
  exports["getCanvasHeight"] = getCanvasHeight;
  exports["getCanvasWidth"] = getCanvasWidth;
  exports["runWebGL"] = runWebGL;
})(PS["Graphics.WebGL"] = PS["Graphics.WebGL"] || {});
(function(exports) {
  /* global exports */

  // module Graphics.WebGLTexture


      "use strict";

      exports.bindTexture__ = function(target)
          {return function()
           {gl.bindTexture(target,null);};};
})(PS["Graphics.WebGLTexture"] = PS["Graphics.WebGLTexture"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Graphics.WebGLTexture"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_TypedArray = PS["Data.TypedArray"];
  var Data_Unit = PS["Data.Unit"];
  var Extensions = PS["Extensions"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Graphics_WebGL = PS["Graphics.WebGL"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Prelude = PS["Prelude"];
  var TEXTURE_2D = (function () {
      function TEXTURE_2D() {

      };
      TEXTURE_2D.value = new TEXTURE_2D();
      return TEXTURE_2D;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_X = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_X() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_X.value = new TEXTURE_CUBE_MAP_POSITIVE_X();
      return TEXTURE_CUBE_MAP_POSITIVE_X;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_X = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_X() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_X.value = new TEXTURE_CUBE_MAP_NEGATIVE_X();
      return TEXTURE_CUBE_MAP_NEGATIVE_X;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_Y = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_Y() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_Y.value = new TEXTURE_CUBE_MAP_POSITIVE_Y();
      return TEXTURE_CUBE_MAP_POSITIVE_Y;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_Y = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_Y() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_Y.value = new TEXTURE_CUBE_MAP_NEGATIVE_Y();
      return TEXTURE_CUBE_MAP_NEGATIVE_Y;
  })();
  var TEXTURE_CUBE_MAP_POSITIVE_Z = (function () {
      function TEXTURE_CUBE_MAP_POSITIVE_Z() {

      };
      TEXTURE_CUBE_MAP_POSITIVE_Z.value = new TEXTURE_CUBE_MAP_POSITIVE_Z();
      return TEXTURE_CUBE_MAP_POSITIVE_Z;
  })();
  var TEXTURE_CUBE_MAP_NEGATIVE_Z = (function () {
      function TEXTURE_CUBE_MAP_NEGATIVE_Z() {

      };
      TEXTURE_CUBE_MAP_NEGATIVE_Z.value = new TEXTURE_CUBE_MAP_NEGATIVE_Z();
      return TEXTURE_CUBE_MAP_NEGATIVE_Z;
  })();
  var targetTypeToConst = function (v) {
      if (v instanceof TEXTURE_2D) {
          return Graphics_WebGLRaw._TEXTURE_2D;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_X) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_X;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_X) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_X;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Y) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Y;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Y) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Y;
      };
      if (v instanceof TEXTURE_CUBE_MAP_POSITIVE_Z) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_POSITIVE_Z;
      };
      if (v instanceof TEXTURE_CUBE_MAP_NEGATIVE_Z) {
          return Graphics_WebGLRaw._TEXTURE_CUBE_MAP_NEGATIVE_Z;
      };
      throw new Error("Failed pattern match at Graphics.WebGLTexture line 70, column 1 - line 70, column 43: " + [ v.constructor.name ]);
  };
  var unbindTexture = function (tt) {
      return $foreign.bindTexture__(targetTypeToConst(tt));
  };
  exports["TEXTURE_2D"] = TEXTURE_2D;
  exports["TEXTURE_CUBE_MAP_POSITIVE_X"] = TEXTURE_CUBE_MAP_POSITIVE_X;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_X"] = TEXTURE_CUBE_MAP_NEGATIVE_X;
  exports["TEXTURE_CUBE_MAP_POSITIVE_Y"] = TEXTURE_CUBE_MAP_POSITIVE_Y;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_Y"] = TEXTURE_CUBE_MAP_NEGATIVE_Y;
  exports["TEXTURE_CUBE_MAP_POSITIVE_Z"] = TEXTURE_CUBE_MAP_POSITIVE_Z;
  exports["TEXTURE_CUBE_MAP_NEGATIVE_Z"] = TEXTURE_CUBE_MAP_NEGATIVE_Z;
  exports["targetTypeToConst"] = targetTypeToConst;
  exports["unbindTexture"] = unbindTexture;
})(PS["Graphics.WebGLTexture"] = PS["Graphics.WebGLTexture"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var V4 = (function () {
      function V4(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      V4.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new V4(value0, value1, value2, value3);
                  };
              };
          };
      };
      return V4;
  })();
  var V3 = (function () {
      function V3(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      V3.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new V3(value0, value1, value2);
              };
          };
      };
      return V3;
  })();
  var V2 = (function () {
      function V2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      V2.create = function (value0) {
          return function (value1) {
              return new V2(value0, value1);
          };
      };
      return V2;
  })();
  var decodeJsonV4 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
              return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(V4.create)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("x")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("y")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("z")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("w"));
          });
      });
  };
  var decodeJsonV3 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
              return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(V3.create)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("x")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("y")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("z"));
          });
      });
  };
  var decodeJsonV2 = function (dictDecodeJson) {
      return new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
              return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(V2.create)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("x")))(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v)("y"));
          });
      });
  };
  exports["V2"] = V2;
  exports["V3"] = V3;
  exports["V4"] = V4;
  exports["decodeJsonV2"] = decodeJsonV2;
  exports["decodeJsonV3"] = decodeJsonV3;
  exports["decodeJsonV4"] = decodeJsonV4;
})(PS["LambdaCube.LinearBase"] = PS["LambdaCube.LinearBase"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Unit = PS["Data.Unit"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var Prelude = PS["Prelude"];        
  var VBool = (function () {
      function VBool(value0) {
          this.value0 = value0;
      };
      VBool.create = function (value0) {
          return new VBool(value0);
      };
      return VBool;
  })();
  var VV2B = (function () {
      function VV2B(value0) {
          this.value0 = value0;
      };
      VV2B.create = function (value0) {
          return new VV2B(value0);
      };
      return VV2B;
  })();
  var VV3B = (function () {
      function VV3B(value0) {
          this.value0 = value0;
      };
      VV3B.create = function (value0) {
          return new VV3B(value0);
      };
      return VV3B;
  })();
  var VV4B = (function () {
      function VV4B(value0) {
          this.value0 = value0;
      };
      VV4B.create = function (value0) {
          return new VV4B(value0);
      };
      return VV4B;
  })();
  var VWord = (function () {
      function VWord(value0) {
          this.value0 = value0;
      };
      VWord.create = function (value0) {
          return new VWord(value0);
      };
      return VWord;
  })();
  var VV2U = (function () {
      function VV2U(value0) {
          this.value0 = value0;
      };
      VV2U.create = function (value0) {
          return new VV2U(value0);
      };
      return VV2U;
  })();
  var VV3U = (function () {
      function VV3U(value0) {
          this.value0 = value0;
      };
      VV3U.create = function (value0) {
          return new VV3U(value0);
      };
      return VV3U;
  })();
  var VV4U = (function () {
      function VV4U(value0) {
          this.value0 = value0;
      };
      VV4U.create = function (value0) {
          return new VV4U(value0);
      };
      return VV4U;
  })();
  var VInt = (function () {
      function VInt(value0) {
          this.value0 = value0;
      };
      VInt.create = function (value0) {
          return new VInt(value0);
      };
      return VInt;
  })();
  var VV2I = (function () {
      function VV2I(value0) {
          this.value0 = value0;
      };
      VV2I.create = function (value0) {
          return new VV2I(value0);
      };
      return VV2I;
  })();
  var VV3I = (function () {
      function VV3I(value0) {
          this.value0 = value0;
      };
      VV3I.create = function (value0) {
          return new VV3I(value0);
      };
      return VV3I;
  })();
  var VV4I = (function () {
      function VV4I(value0) {
          this.value0 = value0;
      };
      VV4I.create = function (value0) {
          return new VV4I(value0);
      };
      return VV4I;
  })();
  var VFloat = (function () {
      function VFloat(value0) {
          this.value0 = value0;
      };
      VFloat.create = function (value0) {
          return new VFloat(value0);
      };
      return VFloat;
  })();
  var VV2F = (function () {
      function VV2F(value0) {
          this.value0 = value0;
      };
      VV2F.create = function (value0) {
          return new VV2F(value0);
      };
      return VV2F;
  })();
  var VV3F = (function () {
      function VV3F(value0) {
          this.value0 = value0;
      };
      VV3F.create = function (value0) {
          return new VV3F(value0);
      };
      return VV3F;
  })();
  var VV4F = (function () {
      function VV4F(value0) {
          this.value0 = value0;
      };
      VV4F.create = function (value0) {
          return new VV4F(value0);
      };
      return VV4F;
  })();
  var VM22F = (function () {
      function VM22F(value0) {
          this.value0 = value0;
      };
      VM22F.create = function (value0) {
          return new VM22F(value0);
      };
      return VM22F;
  })();
  var VM23F = (function () {
      function VM23F(value0) {
          this.value0 = value0;
      };
      VM23F.create = function (value0) {
          return new VM23F(value0);
      };
      return VM23F;
  })();
  var VM24F = (function () {
      function VM24F(value0) {
          this.value0 = value0;
      };
      VM24F.create = function (value0) {
          return new VM24F(value0);
      };
      return VM24F;
  })();
  var VM32F = (function () {
      function VM32F(value0) {
          this.value0 = value0;
      };
      VM32F.create = function (value0) {
          return new VM32F(value0);
      };
      return VM32F;
  })();
  var VM33F = (function () {
      function VM33F(value0) {
          this.value0 = value0;
      };
      VM33F.create = function (value0) {
          return new VM33F(value0);
      };
      return VM33F;
  })();
  var VM34F = (function () {
      function VM34F(value0) {
          this.value0 = value0;
      };
      VM34F.create = function (value0) {
          return new VM34F(value0);
      };
      return VM34F;
  })();
  var VM42F = (function () {
      function VM42F(value0) {
          this.value0 = value0;
      };
      VM42F.create = function (value0) {
          return new VM42F(value0);
      };
      return VM42F;
  })();
  var VM43F = (function () {
      function VM43F(value0) {
          this.value0 = value0;
      };
      VM43F.create = function (value0) {
          return new VM43F(value0);
      };
      return VM43F;
  })();
  var VM44F = (function () {
      function VM44F(value0) {
          this.value0 = value0;
      };
      VM44F.create = function (value0) {
          return new VM44F(value0);
      };
      return VM44F;
  })();
  var OpZero = (function () {
      function OpZero() {

      };
      OpZero.value = new OpZero();
      return OpZero;
  })();
  var OpKeep = (function () {
      function OpKeep() {

      };
      OpKeep.value = new OpKeep();
      return OpKeep;
  })();
  var OpReplace = (function () {
      function OpReplace() {

      };
      OpReplace.value = new OpReplace();
      return OpReplace;
  })();
  var OpIncr = (function () {
      function OpIncr() {

      };
      OpIncr.value = new OpIncr();
      return OpIncr;
  })();
  var OpIncrWrap = (function () {
      function OpIncrWrap() {

      };
      OpIncrWrap.value = new OpIncrWrap();
      return OpIncrWrap;
  })();
  var OpDecr = (function () {
      function OpDecr() {

      };
      OpDecr.value = new OpDecr();
      return OpDecr;
  })();
  var OpDecrWrap = (function () {
      function OpDecrWrap() {

      };
      OpDecrWrap.value = new OpDecrWrap();
      return OpDecrWrap;
  })();
  var OpInvert = (function () {
      function OpInvert() {

      };
      OpInvert.value = new OpInvert();
      return OpInvert;
  })();
  var StencilOps = (function () {
      function StencilOps(value0) {
          this.value0 = value0;
      };
      StencilOps.create = function (value0) {
          return new StencilOps(value0);
      };
      return StencilOps;
  })();
  var FirstVertex = (function () {
      function FirstVertex() {

      };
      FirstVertex.value = new FirstVertex();
      return FirstVertex;
  })();
  var LastVertex = (function () {
      function LastVertex() {

      };
      LastVertex.value = new LastVertex();
      return LastVertex;
  })();
  var NoOffset = (function () {
      function NoOffset() {

      };
      NoOffset.value = new NoOffset();
      return NoOffset;
  })();
  var Offset = (function () {
      function Offset(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Offset.create = function (value0) {
          return function (value1) {
              return new Offset(value0, value1);
          };
      };
      return Offset;
  })();
  var LowerLeft = (function () {
      function LowerLeft() {

      };
      LowerLeft.value = new LowerLeft();
      return LowerLeft;
  })();
  var UpperLeft = (function () {
      function UpperLeft() {

      };
      UpperLeft.value = new UpperLeft();
      return UpperLeft;
  })();
  var PointSize = (function () {
      function PointSize(value0) {
          this.value0 = value0;
      };
      PointSize.create = function (value0) {
          return new PointSize(value0);
      };
      return PointSize;
  })();
  var ProgramPointSize = (function () {
      function ProgramPointSize() {

      };
      ProgramPointSize.value = new ProgramPointSize();
      return ProgramPointSize;
  })();
  var PolygonPoint = (function () {
      function PolygonPoint(value0) {
          this.value0 = value0;
      };
      PolygonPoint.create = function (value0) {
          return new PolygonPoint(value0);
      };
      return PolygonPoint;
  })();
  var PolygonLine = (function () {
      function PolygonLine(value0) {
          this.value0 = value0;
      };
      PolygonLine.create = function (value0) {
          return new PolygonLine(value0);
      };
      return PolygonLine;
  })();
  var PolygonFill = (function () {
      function PolygonFill() {

      };
      PolygonFill.value = new PolygonFill();
      return PolygonFill;
  })();
  var Clear = (function () {
      function Clear() {

      };
      Clear.value = new Clear();
      return Clear;
  })();
  var And = (function () {
      function And() {

      };
      And.value = new And();
      return And;
  })();
  var AndReverse = (function () {
      function AndReverse() {

      };
      AndReverse.value = new AndReverse();
      return AndReverse;
  })();
  var Copy = (function () {
      function Copy() {

      };
      Copy.value = new Copy();
      return Copy;
  })();
  var AndInverted = (function () {
      function AndInverted() {

      };
      AndInverted.value = new AndInverted();
      return AndInverted;
  })();
  var Noop = (function () {
      function Noop() {

      };
      Noop.value = new Noop();
      return Noop;
  })();
  var Xor = (function () {
      function Xor() {

      };
      Xor.value = new Xor();
      return Xor;
  })();
  var Or = (function () {
      function Or() {

      };
      Or.value = new Or();
      return Or;
  })();
  var Nor = (function () {
      function Nor() {

      };
      Nor.value = new Nor();
      return Nor;
  })();
  var Equiv = (function () {
      function Equiv() {

      };
      Equiv.value = new Equiv();
      return Equiv;
  })();
  var Invert = (function () {
      function Invert() {

      };
      Invert.value = new Invert();
      return Invert;
  })();
  var OrReverse = (function () {
      function OrReverse() {

      };
      OrReverse.value = new OrReverse();
      return OrReverse;
  })();
  var CopyInverted = (function () {
      function CopyInverted() {

      };
      CopyInverted.value = new CopyInverted();
      return CopyInverted;
  })();
  var OrInverted = (function () {
      function OrInverted() {

      };
      OrInverted.value = new OrInverted();
      return OrInverted;
  })();
  var Nand = (function () {
      function Nand() {

      };
      Nand.value = new Nand();
      return Nand;
  })();
  var $$Set = (function () {
      function $$Set() {

      };
      $$Set.value = new $$Set();
      return $$Set;
  })();
  var Bool = (function () {
      function Bool() {

      };
      Bool.value = new Bool();
      return Bool;
  })();
  var V2B = (function () {
      function V2B() {

      };
      V2B.value = new V2B();
      return V2B;
  })();
  var V3B = (function () {
      function V3B() {

      };
      V3B.value = new V3B();
      return V3B;
  })();
  var V4B = (function () {
      function V4B() {

      };
      V4B.value = new V4B();
      return V4B;
  })();
  var Word = (function () {
      function Word() {

      };
      Word.value = new Word();
      return Word;
  })();
  var V2U = (function () {
      function V2U() {

      };
      V2U.value = new V2U();
      return V2U;
  })();
  var V3U = (function () {
      function V3U() {

      };
      V3U.value = new V3U();
      return V3U;
  })();
  var V4U = (function () {
      function V4U() {

      };
      V4U.value = new V4U();
      return V4U;
  })();
  var Int = (function () {
      function Int() {

      };
      Int.value = new Int();
      return Int;
  })();
  var V2I = (function () {
      function V2I() {

      };
      V2I.value = new V2I();
      return V2I;
  })();
  var V3I = (function () {
      function V3I() {

      };
      V3I.value = new V3I();
      return V3I;
  })();
  var V4I = (function () {
      function V4I() {

      };
      V4I.value = new V4I();
      return V4I;
  })();
  var Float = (function () {
      function Float() {

      };
      Float.value = new Float();
      return Float;
  })();
  var V2F = (function () {
      function V2F() {

      };
      V2F.value = new V2F();
      return V2F;
  })();
  var V3F = (function () {
      function V3F() {

      };
      V3F.value = new V3F();
      return V3F;
  })();
  var V4F = (function () {
      function V4F() {

      };
      V4F.value = new V4F();
      return V4F;
  })();
  var M22F = (function () {
      function M22F() {

      };
      M22F.value = new M22F();
      return M22F;
  })();
  var M23F = (function () {
      function M23F() {

      };
      M23F.value = new M23F();
      return M23F;
  })();
  var M24F = (function () {
      function M24F() {

      };
      M24F.value = new M24F();
      return M24F;
  })();
  var M32F = (function () {
      function M32F() {

      };
      M32F.value = new M32F();
      return M32F;
  })();
  var M33F = (function () {
      function M33F() {

      };
      M33F.value = new M33F();
      return M33F;
  })();
  var M34F = (function () {
      function M34F() {

      };
      M34F.value = new M34F();
      return M34F;
  })();
  var M42F = (function () {
      function M42F() {

      };
      M42F.value = new M42F();
      return M42F;
  })();
  var M43F = (function () {
      function M43F() {

      };
      M43F.value = new M43F();
      return M43F;
  })();
  var M44F = (function () {
      function M44F() {

      };
      M44F.value = new M44F();
      return M44F;
  })();
  var STexture1D = (function () {
      function STexture1D() {

      };
      STexture1D.value = new STexture1D();
      return STexture1D;
  })();
  var STexture2D = (function () {
      function STexture2D() {

      };
      STexture2D.value = new STexture2D();
      return STexture2D;
  })();
  var STextureCube = (function () {
      function STextureCube() {

      };
      STextureCube.value = new STextureCube();
      return STextureCube;
  })();
  var STexture1DArray = (function () {
      function STexture1DArray() {

      };
      STexture1DArray.value = new STexture1DArray();
      return STexture1DArray;
  })();
  var STexture2DArray = (function () {
      function STexture2DArray() {

      };
      STexture2DArray.value = new STexture2DArray();
      return STexture2DArray;
  })();
  var STexture2DRect = (function () {
      function STexture2DRect() {

      };
      STexture2DRect.value = new STexture2DRect();
      return STexture2DRect;
  })();
  var FTexture1D = (function () {
      function FTexture1D() {

      };
      FTexture1D.value = new FTexture1D();
      return FTexture1D;
  })();
  var FTexture2D = (function () {
      function FTexture2D() {

      };
      FTexture2D.value = new FTexture2D();
      return FTexture2D;
  })();
  var FTexture3D = (function () {
      function FTexture3D() {

      };
      FTexture3D.value = new FTexture3D();
      return FTexture3D;
  })();
  var FTextureCube = (function () {
      function FTextureCube() {

      };
      FTextureCube.value = new FTextureCube();
      return FTextureCube;
  })();
  var FTexture1DArray = (function () {
      function FTexture1DArray() {

      };
      FTexture1DArray.value = new FTexture1DArray();
      return FTexture1DArray;
  })();
  var FTexture2DArray = (function () {
      function FTexture2DArray() {

      };
      FTexture2DArray.value = new FTexture2DArray();
      return FTexture2DArray;
  })();
  var FTexture2DMS = (function () {
      function FTexture2DMS() {

      };
      FTexture2DMS.value = new FTexture2DMS();
      return FTexture2DMS;
  })();
  var FTexture2DMSArray = (function () {
      function FTexture2DMSArray() {

      };
      FTexture2DMSArray.value = new FTexture2DMSArray();
      return FTexture2DMSArray;
  })();
  var FTextureBuffer = (function () {
      function FTextureBuffer() {

      };
      FTextureBuffer.value = new FTextureBuffer();
      return FTextureBuffer;
  })();
  var FTexture2DRect = (function () {
      function FTexture2DRect() {

      };
      FTexture2DRect.value = new FTexture2DRect();
      return FTexture2DRect;
  })();
  var ITexture1D = (function () {
      function ITexture1D() {

      };
      ITexture1D.value = new ITexture1D();
      return ITexture1D;
  })();
  var ITexture2D = (function () {
      function ITexture2D() {

      };
      ITexture2D.value = new ITexture2D();
      return ITexture2D;
  })();
  var ITexture3D = (function () {
      function ITexture3D() {

      };
      ITexture3D.value = new ITexture3D();
      return ITexture3D;
  })();
  var ITextureCube = (function () {
      function ITextureCube() {

      };
      ITextureCube.value = new ITextureCube();
      return ITextureCube;
  })();
  var ITexture1DArray = (function () {
      function ITexture1DArray() {

      };
      ITexture1DArray.value = new ITexture1DArray();
      return ITexture1DArray;
  })();
  var ITexture2DArray = (function () {
      function ITexture2DArray() {

      };
      ITexture2DArray.value = new ITexture2DArray();
      return ITexture2DArray;
  })();
  var ITexture2DMS = (function () {
      function ITexture2DMS() {

      };
      ITexture2DMS.value = new ITexture2DMS();
      return ITexture2DMS;
  })();
  var ITexture2DMSArray = (function () {
      function ITexture2DMSArray() {

      };
      ITexture2DMSArray.value = new ITexture2DMSArray();
      return ITexture2DMSArray;
  })();
  var ITextureBuffer = (function () {
      function ITextureBuffer() {

      };
      ITextureBuffer.value = new ITextureBuffer();
      return ITextureBuffer;
  })();
  var ITexture2DRect = (function () {
      function ITexture2DRect() {

      };
      ITexture2DRect.value = new ITexture2DRect();
      return ITexture2DRect;
  })();
  var UTexture1D = (function () {
      function UTexture1D() {

      };
      UTexture1D.value = new UTexture1D();
      return UTexture1D;
  })();
  var UTexture2D = (function () {
      function UTexture2D() {

      };
      UTexture2D.value = new UTexture2D();
      return UTexture2D;
  })();
  var UTexture3D = (function () {
      function UTexture3D() {

      };
      UTexture3D.value = new UTexture3D();
      return UTexture3D;
  })();
  var UTextureCube = (function () {
      function UTextureCube() {

      };
      UTextureCube.value = new UTextureCube();
      return UTextureCube;
  })();
  var UTexture1DArray = (function () {
      function UTexture1DArray() {

      };
      UTexture1DArray.value = new UTexture1DArray();
      return UTexture1DArray;
  })();
  var UTexture2DArray = (function () {
      function UTexture2DArray() {

      };
      UTexture2DArray.value = new UTexture2DArray();
      return UTexture2DArray;
  })();
  var UTexture2DMS = (function () {
      function UTexture2DMS() {

      };
      UTexture2DMS.value = new UTexture2DMS();
      return UTexture2DMS;
  })();
  var UTexture2DMSArray = (function () {
      function UTexture2DMSArray() {

      };
      UTexture2DMSArray.value = new UTexture2DMSArray();
      return UTexture2DMSArray;
  })();
  var UTextureBuffer = (function () {
      function UTextureBuffer() {

      };
      UTextureBuffer.value = new UTextureBuffer();
      return UTextureBuffer;
  })();
  var UTexture2DRect = (function () {
      function UTexture2DRect() {

      };
      UTexture2DRect.value = new UTexture2DRect();
      return UTexture2DRect;
  })();
  var Parameter = (function () {
      function Parameter(value0) {
          this.value0 = value0;
      };
      Parameter.create = function (value0) {
          return new Parameter(value0);
      };
      return Parameter;
  })();
  var Program = (function () {
      function Program(value0) {
          this.value0 = value0;
      };
      Program.create = function (value0) {
          return new Program(value0);
      };
      return Program;
  })();
  var Depth = (function () {
      function Depth() {

      };
      Depth.value = new Depth();
      return Depth;
  })();
  var Stencil = (function () {
      function Stencil() {

      };
      Stencil.value = new Stencil();
      return Stencil;
  })();
  var Color = (function () {
      function Color() {

      };
      Color.value = new Color();
      return Color;
  })();
  var TextureImage = (function () {
      function TextureImage(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TextureImage.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TextureImage(value0, value1, value2);
              };
          };
      };
      return TextureImage;
  })();
  var Framebuffer = (function () {
      function Framebuffer(value0) {
          this.value0 = value0;
      };
      Framebuffer.create = function (value0) {
          return new Framebuffer(value0);
      };
      return Framebuffer;
  })();
  var TargetItem = (function () {
      function TargetItem(value0) {
          this.value0 = value0;
      };
      TargetItem.create = function (value0) {
          return new TargetItem(value0);
      };
      return TargetItem;
  })();
  var RenderTarget = (function () {
      function RenderTarget(value0) {
          this.value0 = value0;
      };
      RenderTarget.create = function (value0) {
          return new RenderTarget(value0);
      };
      return RenderTarget;
  })();
  var CCW = (function () {
      function CCW() {

      };
      CCW.value = new CCW();
      return CCW;
  })();
  var CW = (function () {
      function CW() {

      };
      CW.value = new CW();
      return CW;
  })();
  var Nearest = (function () {
      function Nearest() {

      };
      Nearest.value = new Nearest();
      return Nearest;
  })();
  var Linear = (function () {
      function Linear() {

      };
      Linear.value = new Linear();
      return Linear;
  })();
  var NearestMipmapNearest = (function () {
      function NearestMipmapNearest() {

      };
      NearestMipmapNearest.value = new NearestMipmapNearest();
      return NearestMipmapNearest;
  })();
  var NearestMipmapLinear = (function () {
      function NearestMipmapLinear() {

      };
      NearestMipmapLinear.value = new NearestMipmapLinear();
      return NearestMipmapLinear;
  })();
  var LinearMipmapNearest = (function () {
      function LinearMipmapNearest() {

      };
      LinearMipmapNearest.value = new LinearMipmapNearest();
      return LinearMipmapNearest;
  })();
  var LinearMipmapLinear = (function () {
      function LinearMipmapLinear() {

      };
      LinearMipmapLinear.value = new LinearMipmapLinear();
      return LinearMipmapLinear;
  })();
  var Points = (function () {
      function Points() {

      };
      Points.value = new Points();
      return Points;
  })();
  var Lines = (function () {
      function Lines() {

      };
      Lines.value = new Lines();
      return Lines;
  })();
  var Triangles = (function () {
      function Triangles() {

      };
      Triangles.value = new Triangles();
      return Triangles;
  })();
  var LinesAdjacency = (function () {
      function LinesAdjacency() {

      };
      LinesAdjacency.value = new LinesAdjacency();
      return LinesAdjacency;
  })();
  var TrianglesAdjacency = (function () {
      function TrianglesAdjacency() {

      };
      TrianglesAdjacency.value = new TrianglesAdjacency();
      return TrianglesAdjacency;
  })();
  var Slot = (function () {
      function Slot(value0) {
          this.value0 = value0;
      };
      Slot.create = function (value0) {
          return new Slot(value0);
      };
      return Slot;
  })();
  var Repeat = (function () {
      function Repeat() {

      };
      Repeat.value = new Repeat();
      return Repeat;
  })();
  var MirroredRepeat = (function () {
      function MirroredRepeat() {

      };
      MirroredRepeat.value = new MirroredRepeat();
      return MirroredRepeat;
  })();
  var ClampToEdge = (function () {
      function ClampToEdge() {

      };
      ClampToEdge.value = new ClampToEdge();
      return ClampToEdge;
  })();
  var ClampToBorder = (function () {
      function ClampToBorder() {

      };
      ClampToBorder.value = new ClampToBorder();
      return ClampToBorder;
  })();
  var CullNone = (function () {
      function CullNone() {

      };
      CullNone.value = new CullNone();
      return CullNone;
  })();
  var CullFront = (function () {
      function CullFront(value0) {
          this.value0 = value0;
      };
      CullFront.create = function (value0) {
          return new CullFront(value0);
      };
      return CullFront;
  })();
  var CullBack = (function () {
      function CullBack(value0) {
          this.value0 = value0;
      };
      CullBack.create = function (value0) {
          return new CullBack(value0);
      };
      return CullBack;
  })();
  var PointCtx = (function () {
      function PointCtx(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      PointCtx.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new PointCtx(value0, value1, value2);
              };
          };
      };
      return PointCtx;
  })();
  var LineCtx = (function () {
      function LineCtx(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LineCtx.create = function (value0) {
          return function (value1) {
              return new LineCtx(value0, value1);
          };
      };
      return LineCtx;
  })();
  var TriangleCtx = (function () {
      function TriangleCtx(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      TriangleCtx.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new TriangleCtx(value0, value1, value2, value3);
                  };
              };
          };
      };
      return TriangleCtx;
  })();
  var Never = (function () {
      function Never() {

      };
      Never.value = new Never();
      return Never;
  })();
  var Less = (function () {
      function Less() {

      };
      Less.value = new Less();
      return Less;
  })();
  var Equal = (function () {
      function Equal() {

      };
      Equal.value = new Equal();
      return Equal;
  })();
  var Lequal = (function () {
      function Lequal() {

      };
      Lequal.value = new Lequal();
      return Lequal;
  })();
  var Greater = (function () {
      function Greater() {

      };
      Greater.value = new Greater();
      return Greater;
  })();
  var Notequal = (function () {
      function Notequal() {

      };
      Notequal.value = new Notequal();
      return Notequal;
  })();
  var Gequal = (function () {
      function Gequal() {

      };
      Gequal.value = new Gequal();
      return Gequal;
  })();
  var Always = (function () {
      function Always() {

      };
      Always.value = new Always();
      return Always;
  })();
  var SamplerDescriptor = (function () {
      function SamplerDescriptor(value0) {
          this.value0 = value0;
      };
      SamplerDescriptor.create = function (value0) {
          return new SamplerDescriptor(value0);
      };
      return SamplerDescriptor;
  })();
  var StencilTest = (function () {
      function StencilTest(value0) {
          this.value0 = value0;
      };
      StencilTest.create = function (value0) {
          return new StencilTest(value0);
      };
      return StencilTest;
  })();
  var StencilTests = (function () {
      function StencilTests(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      StencilTests.create = function (value0) {
          return function (value1) {
              return new StencilTests(value0, value1);
          };
      };
      return StencilTests;
  })();
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var RG = (function () {
      function RG() {

      };
      RG.value = new RG();
      return RG;
  })();
  var RGB = (function () {
      function RGB() {

      };
      RGB.value = new RGB();
      return RGB;
  })();
  var RGBA = (function () {
      function RGBA() {

      };
      RGBA.value = new RGBA();
      return RGBA;
  })();
  var FloatT = (function () {
      function FloatT(value0) {
          this.value0 = value0;
      };
      FloatT.create = function (value0) {
          return new FloatT(value0);
      };
      return FloatT;
  })();
  var IntT = (function () {
      function IntT(value0) {
          this.value0 = value0;
      };
      IntT.create = function (value0) {
          return new IntT(value0);
      };
      return IntT;
  })();
  var WordT = (function () {
      function WordT(value0) {
          this.value0 = value0;
      };
      WordT.create = function (value0) {
          return new WordT(value0);
      };
      return WordT;
  })();
  var ShadowT = (function () {
      function ShadowT() {

      };
      ShadowT.value = new ShadowT();
      return ShadowT;
  })();
  var Texture1D = (function () {
      function Texture1D(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Texture1D.create = function (value0) {
          return function (value1) {
              return new Texture1D(value0, value1);
          };
      };
      return Texture1D;
  })();
  var Texture2D = (function () {
      function Texture2D(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Texture2D.create = function (value0) {
          return function (value1) {
              return new Texture2D(value0, value1);
          };
      };
      return Texture2D;
  })();
  var Texture3D = (function () {
      function Texture3D(value0) {
          this.value0 = value0;
      };
      Texture3D.create = function (value0) {
          return new Texture3D(value0);
      };
      return Texture3D;
  })();
  var TextureCube = (function () {
      function TextureCube(value0) {
          this.value0 = value0;
      };
      TextureCube.create = function (value0) {
          return new TextureCube(value0);
      };
      return TextureCube;
  })();
  var TextureRect = (function () {
      function TextureRect(value0) {
          this.value0 = value0;
      };
      TextureRect.create = function (value0) {
          return new TextureRect(value0);
      };
      return TextureRect;
  })();
  var Texture2DMS = (function () {
      function Texture2DMS(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Texture2DMS.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Texture2DMS(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Texture2DMS;
  })();
  var TextureBuffer = (function () {
      function TextureBuffer(value0) {
          this.value0 = value0;
      };
      TextureBuffer.create = function (value0) {
          return new TextureBuffer(value0);
      };
      return TextureBuffer;
  })();
  var TextureDescriptor = (function () {
      function TextureDescriptor(value0) {
          this.value0 = value0;
      };
      TextureDescriptor.create = function (value0) {
          return new TextureDescriptor(value0);
      };
      return TextureDescriptor;
  })();
  var ClearImage = (function () {
      function ClearImage(value0) {
          this.value0 = value0;
      };
      ClearImage.create = function (value0) {
          return new ClearImage(value0);
      };
      return ClearImage;
  })();
  var Zero = (function () {
      function Zero() {

      };
      Zero.value = new Zero();
      return Zero;
  })();
  var One = (function () {
      function One() {

      };
      One.value = new One();
      return One;
  })();
  var SrcColor = (function () {
      function SrcColor() {

      };
      SrcColor.value = new SrcColor();
      return SrcColor;
  })();
  var OneMinusSrcColor = (function () {
      function OneMinusSrcColor() {

      };
      OneMinusSrcColor.value = new OneMinusSrcColor();
      return OneMinusSrcColor;
  })();
  var DstColor = (function () {
      function DstColor() {

      };
      DstColor.value = new DstColor();
      return DstColor;
  })();
  var OneMinusDstColor = (function () {
      function OneMinusDstColor() {

      };
      OneMinusDstColor.value = new OneMinusDstColor();
      return OneMinusDstColor;
  })();
  var SrcAlpha = (function () {
      function SrcAlpha() {

      };
      SrcAlpha.value = new SrcAlpha();
      return SrcAlpha;
  })();
  var OneMinusSrcAlpha = (function () {
      function OneMinusSrcAlpha() {

      };
      OneMinusSrcAlpha.value = new OneMinusSrcAlpha();
      return OneMinusSrcAlpha;
  })();
  var DstAlpha = (function () {
      function DstAlpha() {

      };
      DstAlpha.value = new DstAlpha();
      return DstAlpha;
  })();
  var OneMinusDstAlpha = (function () {
      function OneMinusDstAlpha() {

      };
      OneMinusDstAlpha.value = new OneMinusDstAlpha();
      return OneMinusDstAlpha;
  })();
  var ConstantColor = (function () {
      function ConstantColor() {

      };
      ConstantColor.value = new ConstantColor();
      return ConstantColor;
  })();
  var OneMinusConstantColor = (function () {
      function OneMinusConstantColor() {

      };
      OneMinusConstantColor.value = new OneMinusConstantColor();
      return OneMinusConstantColor;
  })();
  var ConstantAlpha = (function () {
      function ConstantAlpha() {

      };
      ConstantAlpha.value = new ConstantAlpha();
      return ConstantAlpha;
  })();
  var OneMinusConstantAlpha = (function () {
      function OneMinusConstantAlpha() {

      };
      OneMinusConstantAlpha.value = new OneMinusConstantAlpha();
      return OneMinusConstantAlpha;
  })();
  var SrcAlphaSaturate = (function () {
      function SrcAlphaSaturate() {

      };
      SrcAlphaSaturate.value = new SrcAlphaSaturate();
      return SrcAlphaSaturate;
  })();
  var FuncAdd = (function () {
      function FuncAdd() {

      };
      FuncAdd.value = new FuncAdd();
      return FuncAdd;
  })();
  var FuncSubtract = (function () {
      function FuncSubtract() {

      };
      FuncSubtract.value = new FuncSubtract();
      return FuncSubtract;
  })();
  var FuncReverseSubtract = (function () {
      function FuncReverseSubtract() {

      };
      FuncReverseSubtract.value = new FuncReverseSubtract();
      return FuncReverseSubtract;
  })();
  var Min = (function () {
      function Min() {

      };
      Min.value = new Min();
      return Min;
  })();
  var Max = (function () {
      function Max() {

      };
      Max.value = new Max();
      return Max;
  })();
  var NoBlending = (function () {
      function NoBlending() {

      };
      NoBlending.value = new NoBlending();
      return NoBlending;
  })();
  var BlendLogicOp = (function () {
      function BlendLogicOp(value0) {
          this.value0 = value0;
      };
      BlendLogicOp.create = function (value0) {
          return new BlendLogicOp(value0);
      };
      return BlendLogicOp;
  })();
  var Blend = (function () {
      function Blend(value0) {
          this.value0 = value0;
      };
      Blend.create = function (value0) {
          return new Blend(value0);
      };
      return Blend;
  })();
  var DepthOp = (function () {
      function DepthOp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DepthOp.create = function (value0) {
          return function (value1) {
              return new DepthOp(value0, value1);
          };
      };
      return DepthOp;
  })();
  var StencilOp = (function () {
      function StencilOp(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      StencilOp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new StencilOp(value0, value1, value2);
              };
          };
      };
      return StencilOp;
  })();
  var ColorOp = (function () {
      function ColorOp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ColorOp.create = function (value0) {
          return function (value1) {
              return new ColorOp(value0, value1);
          };
      };
      return ColorOp;
  })();
  var WebGL1 = (function () {
      function WebGL1() {

      };
      WebGL1.value = new WebGL1();
      return WebGL1;
  })();
  var OpenGL33 = (function () {
      function OpenGL33() {

      };
      OpenGL33.value = new OpenGL33();
      return OpenGL33;
  })();
  var VBoolArray = (function () {
      function VBoolArray(value0) {
          this.value0 = value0;
      };
      VBoolArray.create = function (value0) {
          return new VBoolArray(value0);
      };
      return VBoolArray;
  })();
  var VIntArray = (function () {
      function VIntArray(value0) {
          this.value0 = value0;
      };
      VIntArray.create = function (value0) {
          return new VIntArray(value0);
      };
      return VIntArray;
  })();
  var VWordArray = (function () {
      function VWordArray(value0) {
          this.value0 = value0;
      };
      VWordArray.create = function (value0) {
          return new VWordArray(value0);
      };
      return VWordArray;
  })();
  var VFloatArray = (function () {
      function VFloatArray(value0) {
          this.value0 = value0;
      };
      VFloatArray.create = function (value0) {
          return new VFloatArray(value0);
      };
      return VFloatArray;
  })();
  var StreamData = (function () {
      function StreamData(value0) {
          this.value0 = value0;
      };
      StreamData.create = function (value0) {
          return new StreamData(value0);
      };
      return StreamData;
  })();
  var AccumulationContext = (function () {
      function AccumulationContext(value0) {
          this.value0 = value0;
      };
      AccumulationContext.create = function (value0) {
          return new AccumulationContext(value0);
      };
      return AccumulationContext;
  })();
  var SetRasterContext = (function () {
      function SetRasterContext(value0) {
          this.value0 = value0;
      };
      SetRasterContext.create = function (value0) {
          return new SetRasterContext(value0);
      };
      return SetRasterContext;
  })();
  var SetAccumulationContext = (function () {
      function SetAccumulationContext(value0) {
          this.value0 = value0;
      };
      SetAccumulationContext.create = function (value0) {
          return new SetAccumulationContext(value0);
      };
      return SetAccumulationContext;
  })();
  var SetRenderTarget = (function () {
      function SetRenderTarget(value0) {
          this.value0 = value0;
      };
      SetRenderTarget.create = function (value0) {
          return new SetRenderTarget(value0);
      };
      return SetRenderTarget;
  })();
  var SetProgram = (function () {
      function SetProgram(value0) {
          this.value0 = value0;
      };
      SetProgram.create = function (value0) {
          return new SetProgram(value0);
      };
      return SetProgram;
  })();
  var SetSamplerUniform = (function () {
      function SetSamplerUniform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSamplerUniform.create = function (value0) {
          return function (value1) {
              return new SetSamplerUniform(value0, value1);
          };
      };
      return SetSamplerUniform;
  })();
  var SetTexture = (function () {
      function SetTexture(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetTexture.create = function (value0) {
          return function (value1) {
              return new SetTexture(value0, value1);
          };
      };
      return SetTexture;
  })();
  var SetSampler = (function () {
      function SetSampler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSampler.create = function (value0) {
          return function (value1) {
              return new SetSampler(value0, value1);
          };
      };
      return SetSampler;
  })();
  var RenderSlot = (function () {
      function RenderSlot(value0) {
          this.value0 = value0;
      };
      RenderSlot.create = function (value0) {
          return new RenderSlot(value0);
      };
      return RenderSlot;
  })();
  var RenderStream = (function () {
      function RenderStream(value0) {
          this.value0 = value0;
      };
      RenderStream.create = function (value0) {
          return new RenderStream(value0);
      };
      return RenderStream;
  })();
  var ClearRenderTarget = (function () {
      function ClearRenderTarget(value0) {
          this.value0 = value0;
      };
      ClearRenderTarget.create = function (value0) {
          return new ClearRenderTarget(value0);
      };
      return ClearRenderTarget;
  })();
  var GenerateMipMap = (function () {
      function GenerateMipMap(value0) {
          this.value0 = value0;
      };
      GenerateMipMap.create = function (value0) {
          return new GenerateMipMap(value0);
      };
      return GenerateMipMap;
  })();
  var SaveImage = (function () {
      function SaveImage(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SaveImage.create = function (value0) {
          return function (value1) {
              return new SaveImage(value0, value1);
          };
      };
      return SaveImage;
  })();
  var LoadImage = (function () {
      function LoadImage(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LoadImage.create = function (value0) {
          return function (value1) {
              return new LoadImage(value0, value1);
          };
      };
      return LoadImage;
  })();
  var Pipeline = (function () {
      function Pipeline(value0) {
          this.value0 = value0;
      };
      Pipeline.create = function (value0) {
          return new Pipeline(value0);
      };
      return Pipeline;
  })();
  var genericFetchPrimitive = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.Points" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Points.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.Lines" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Lines.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.Triangles" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Triangles.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.LinesAdjacency" && v.value1.length === 0)) {
          return new Data_Maybe.Just(LinesAdjacency.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.TrianglesAdjacency" && v.value1.length === 0)) {
          return new Data_Maybe.Just(TrianglesAdjacency.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("LambdaCube.IR.FetchPrimitive", [ {
          sigConstructor: "LambdaCube.IR.Points", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.Lines", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.Triangles", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.LinesAdjacency", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.TrianglesAdjacency", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Points) {
          return new Data_Generic.SProd("LambdaCube.IR.Points", [  ]);
      };
      if (v instanceof Lines) {
          return new Data_Generic.SProd("LambdaCube.IR.Lines", [  ]);
      };
      if (v instanceof Triangles) {
          return new Data_Generic.SProd("LambdaCube.IR.Triangles", [  ]);
      };
      if (v instanceof LinesAdjacency) {
          return new Data_Generic.SProd("LambdaCube.IR.LinesAdjacency", [  ]);
      };
      if (v instanceof TrianglesAdjacency) {
          return new Data_Generic.SProd("LambdaCube.IR.TrianglesAdjacency", [  ]);
      };
      throw new Error("Failed pattern match at LambdaCube.IR line 459, column 1 - line 459, column 64: " + [ v.constructor.name ]);
  });
  var showFetchPrimitive = new Data_Show.Show(Data_Generic.gShow(genericFetchPrimitive));
  var genericColorArity = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.Red" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Red.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.RG" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RG.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.RGB" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RGB.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.RGBA" && v.value1.length === 0)) {
          return new Data_Maybe.Just(RGBA.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("LambdaCube.IR.ColorArity", [ {
          sigConstructor: "LambdaCube.IR.Red", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.RG", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.RGB", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.IR.RGBA", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Red) {
          return new Data_Generic.SProd("LambdaCube.IR.Red", [  ]);
      };
      if (v instanceof RG) {
          return new Data_Generic.SProd("LambdaCube.IR.RG", [  ]);
      };
      if (v instanceof RGB) {
          return new Data_Generic.SProd("LambdaCube.IR.RGB", [  ]);
      };
      if (v instanceof RGBA) {
          return new Data_Generic.SProd("LambdaCube.IR.RGBA", [  ]);
      };
      throw new Error("Failed pattern match at LambdaCube.IR line 463, column 1 - line 463, column 56: " + [ v.constructor.name ]);
  });
  var genericTextureDataType = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.FloatT" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(FloatT.create))(Data_Generic.fromSpine(genericColorArity)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.IntT" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(IntT.create))(Data_Generic.fromSpine(genericColorArity)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.WordT" && v.value1.length === 1)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(WordT.create))(Data_Generic.fromSpine(genericColorArity)(v["value1"][0](Data_Unit.unit)));
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.IR.ShadowT" && v.value1.length === 0)) {
          return new Data_Maybe.Just(ShadowT.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("LambdaCube.IR.TextureDataType", [ {
          sigConstructor: "LambdaCube.IR.FloatT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "LambdaCube.IR.IntT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "LambdaCube.IR.WordT", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericColorArity)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "LambdaCube.IR.ShadowT", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof FloatT) {
          return new Data_Generic.SProd("LambdaCube.IR.FloatT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)(v.value0);
          } ]);
      };
      if (v instanceof IntT) {
          return new Data_Generic.SProd("LambdaCube.IR.IntT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)(v.value0);
          } ]);
      };
      if (v instanceof WordT) {
          return new Data_Generic.SProd("LambdaCube.IR.WordT", [ function ($dollarq) {
              return Data_Generic.toSpine(genericColorArity)(v.value0);
          } ]);
      };
      if (v instanceof ShadowT) {
          return new Data_Generic.SProd("LambdaCube.IR.ShadowT", [  ]);
      };
      throw new Error("Failed pattern match at LambdaCube.IR line 466, column 1 - line 466, column 66: " + [ v.constructor.name ]);
  });
  var showTextureDataType = new Data_Show.Show(Data_Generic.gShow(genericTextureDataType));
  var eqFetchPrimitive = new Data_Eq.Eq(Data_Generic.gEq(genericFetchPrimitive));
  var decodeJsonValue = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "VBool") {
                  return Data_Functor.map(Data_Either.functorEither)(VBool.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("arg0"));
              };
              if (v1 === "VV2B") {
                  return Data_Functor.map(Data_Either.functorEither)(VV2B.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VV3B") {
                  return Data_Functor.map(Data_Either.functorEither)(VV3B.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VV4B") {
                  return Data_Functor.map(Data_Either.functorEither)(VV4B.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VWord") {
                  return Data_Functor.map(Data_Either.functorEither)(VWord.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "VV2U") {
                  return Data_Functor.map(Data_Either.functorEither)(VV2U.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV3U") {
                  return Data_Functor.map(Data_Either.functorEither)(VV3U.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV4U") {
                  return Data_Functor.map(Data_Either.functorEither)(VV4U.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VInt") {
                  return Data_Functor.map(Data_Either.functorEither)(VInt.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "VV2I") {
                  return Data_Functor.map(Data_Either.functorEither)(VV2I.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV3I") {
                  return Data_Functor.map(Data_Either.functorEither)(VV3I.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VV4I") {
                  return Data_Functor.map(Data_Either.functorEither)(VV4I.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VFloat") {
                  return Data_Functor.map(Data_Either.functorEither)(VFloat.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "VV2F") {
                  return Data_Functor.map(Data_Either.functorEither)(VV2F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VV3F") {
                  return Data_Functor.map(Data_Either.functorEither)(VV3F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VV4F") {
                  return Data_Functor.map(Data_Either.functorEither)(VV4F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "VM22F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM22F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM23F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM23F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM24F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM24F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM32F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM32F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM33F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM33F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM34F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM34F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM42F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM42F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV2(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM43F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM43F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV3(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "VM44F") {
                  return Data_Functor.map(Data_Either.functorEither)(VM44F.create)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonValue - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonStencilOperation = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "OpZero") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpZero.value);
              };
              if (v1 === "OpKeep") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpKeep.value);
              };
              if (v1 === "OpReplace") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpReplace.value);
              };
              if (v1 === "OpIncr") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpIncr.value);
              };
              if (v1 === "OpIncrWrap") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpIncrWrap.value);
              };
              if (v1 === "OpDecr") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpDecr.value);
              };
              if (v1 === "OpDecrWrap") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpDecrWrap.value);
              };
              if (v1 === "OpInvert") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpInvert.value);
              };
              return new Data_Either.Left("decodeJsonStencilOperation - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonStencilOps = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilOps") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilOperation)(v)("frontStencilOp"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilOperation)(v)("backStencilOp"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new StencilOps({
                              frontStencilOp: v2, 
                              backStencilOp: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonStencilOps - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonProvokingVertex = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FirstVertex") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FirstVertex.value);
              };
              if (v1 === "LastVertex") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(LastVertex.value);
              };
              return new Data_Either.Left("decodeJsonProvokingVertex - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonPolygonOffset = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "NoOffset") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(NoOffset.value);
              };
              if (v1 === "Offset") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Offset.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg1"));
              };
              return new Data_Either.Left("decodeJsonPolygonOffset - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonPointSpriteCoordOrigin = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "LowerLeft") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(LowerLeft.value);
              };
              if (v1 === "UpperLeft") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UpperLeft.value);
              };
              return new Data_Either.Left("decodeJsonPointSpriteCoordOrigin - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonPointSize = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PointSize") {
                  return Data_Functor.map(Data_Either.functorEither)(PointSize.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "ProgramPointSize") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ProgramPointSize.value);
              };
              return new Data_Either.Left("decodeJsonPointSize - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonPolygonMode = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PolygonPoint") {
                  return Data_Functor.map(Data_Either.functorEither)(PolygonPoint.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonPointSize)(v)("arg0"));
              };
              if (v1 === "PolygonLine") {
                  return Data_Functor.map(Data_Either.functorEither)(PolygonLine.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg0"));
              };
              if (v1 === "PolygonFill") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(PolygonFill.value);
              };
              return new Data_Either.Left("decodeJsonPolygonMode - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonLogicOperation = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Clear") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Clear.value);
              };
              if (v1 === "And") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(And.value);
              };
              if (v1 === "AndReverse") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(AndReverse.value);
              };
              if (v1 === "Copy") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Copy.value);
              };
              if (v1 === "AndInverted") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(AndInverted.value);
              };
              if (v1 === "Noop") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Noop.value);
              };
              if (v1 === "Xor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Xor.value);
              };
              if (v1 === "Or") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Or.value);
              };
              if (v1 === "Nor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Nor.value);
              };
              if (v1 === "Equiv") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Equiv.value);
              };
              if (v1 === "Invert") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Invert.value);
              };
              if (v1 === "OrReverse") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OrReverse.value);
              };
              if (v1 === "CopyInverted") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(CopyInverted.value);
              };
              if (v1 === "OrInverted") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OrInverted.value);
              };
              if (v1 === "Nand") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Nand.value);
              };
              if (v1 === "Set") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)($$Set.value);
              };
              return new Data_Either.Left("decodeJsonLogicOperation - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonInputType = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Bool") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Bool.value);
              };
              if (v1 === "V2B") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V2B.value);
              };
              if (v1 === "V3B") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V3B.value);
              };
              if (v1 === "V4B") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V4B.value);
              };
              if (v1 === "Word") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Word.value);
              };
              if (v1 === "V2U") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V2U.value);
              };
              if (v1 === "V3U") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V3U.value);
              };
              if (v1 === "V4U") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V4U.value);
              };
              if (v1 === "Int") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Int.value);
              };
              if (v1 === "V2I") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V2I.value);
              };
              if (v1 === "V3I") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V3I.value);
              };
              if (v1 === "V4I") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V4I.value);
              };
              if (v1 === "Float") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Float.value);
              };
              if (v1 === "V2F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V2F.value);
              };
              if (v1 === "V3F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V3F.value);
              };
              if (v1 === "V4F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(V4F.value);
              };
              if (v1 === "M22F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M22F.value);
              };
              if (v1 === "M23F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M23F.value);
              };
              if (v1 === "M24F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M24F.value);
              };
              if (v1 === "M32F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M32F.value);
              };
              if (v1 === "M33F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M33F.value);
              };
              if (v1 === "M34F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M34F.value);
              };
              if (v1 === "M42F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M42F.value);
              };
              if (v1 === "M43F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M43F.value);
              };
              if (v1 === "M44F") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(M44F.value);
              };
              if (v1 === "STexture1D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STexture1D.value);
              };
              if (v1 === "STexture2D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STexture2D.value);
              };
              if (v1 === "STextureCube") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STextureCube.value);
              };
              if (v1 === "STexture1DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STexture1DArray.value);
              };
              if (v1 === "STexture2DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STexture2DArray.value);
              };
              if (v1 === "STexture2DRect") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(STexture2DRect.value);
              };
              if (v1 === "FTexture1D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture1D.value);
              };
              if (v1 === "FTexture2D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture2D.value);
              };
              if (v1 === "FTexture3D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture3D.value);
              };
              if (v1 === "FTextureCube") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTextureCube.value);
              };
              if (v1 === "FTexture1DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture1DArray.value);
              };
              if (v1 === "FTexture2DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture2DArray.value);
              };
              if (v1 === "FTexture2DMS") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture2DMS.value);
              };
              if (v1 === "FTexture2DMSArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture2DMSArray.value);
              };
              if (v1 === "FTextureBuffer") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTextureBuffer.value);
              };
              if (v1 === "FTexture2DRect") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FTexture2DRect.value);
              };
              if (v1 === "ITexture1D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture1D.value);
              };
              if (v1 === "ITexture2D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture2D.value);
              };
              if (v1 === "ITexture3D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture3D.value);
              };
              if (v1 === "ITextureCube") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITextureCube.value);
              };
              if (v1 === "ITexture1DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture1DArray.value);
              };
              if (v1 === "ITexture2DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture2DArray.value);
              };
              if (v1 === "ITexture2DMS") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture2DMS.value);
              };
              if (v1 === "ITexture2DMSArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture2DMSArray.value);
              };
              if (v1 === "ITextureBuffer") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITextureBuffer.value);
              };
              if (v1 === "ITexture2DRect") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ITexture2DRect.value);
              };
              if (v1 === "UTexture1D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture1D.value);
              };
              if (v1 === "UTexture2D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture2D.value);
              };
              if (v1 === "UTexture3D") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture3D.value);
              };
              if (v1 === "UTextureCube") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTextureCube.value);
              };
              if (v1 === "UTexture1DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture1DArray.value);
              };
              if (v1 === "UTexture2DArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture2DArray.value);
              };
              if (v1 === "UTexture2DMS") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture2DMS.value);
              };
              if (v1 === "UTexture2DMSArray") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture2DMSArray.value);
              };
              if (v1 === "UTextureBuffer") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTextureBuffer.value);
              };
              if (v1 === "UTexture2DRect") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(UTexture2DRect.value);
              };
              return new Data_Either.Left("decodeJsonInputType - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonParameter = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Parameter") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonInputType)(v)("ty"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Parameter({
                              name: v2, 
                              ty: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonParameter - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonProgram = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Program") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonInputType))(v)("programUniforms"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonParameter))(v)("programStreams"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonInputType))(v)("programInTextures"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonParameter))(v)("programOutput"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("vertexShader"))(function (v6) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(v)("geometryShader"))(function (v7) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("fragmentShader"))(function (v8) {
                                              return Control_Applicative.pure(Data_Either.applicativeEither)(new Program({
                                                  programUniforms: v2, 
                                                  programStreams: v3, 
                                                  programInTextures: v4, 
                                                  programOutput: v5, 
                                                  vertexShader: v6, 
                                                  geometryShader: v7, 
                                                  fragmentShader: v8
                                              }));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonProgram - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonImageSemantic = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Depth") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Depth.value);
              };
              if (v1 === "Stencil") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Stencil.value);
              };
              if (v1 === "Color") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Color.value);
              };
              return new Data_Either.Left("decodeJsonImageSemantic - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonImageRef = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TextureImage") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(TextureImage.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg2"));
              };
              if (v1 === "Framebuffer") {
                  return Data_Functor.map(Data_Either.functorEither)(Framebuffer.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageSemantic)(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonImageRef - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonTargetItem = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TargetItem") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageSemantic)(v)("targetSemantic"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(decodeJsonImageRef))(v)("targetRef"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new TargetItem({
                              targetSemantic: v2, 
                              targetRef: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonTargetItem - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonRenderTarget = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "RenderTarget") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonTargetItem))(v)("renderTargets"))(function (v2) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new RenderTarget({
                          renderTargets: v2
                      }));
                  });
              };
              return new Data_Either.Left("decodeJsonRenderTarget - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonFrontFace = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CCW") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(CCW.value);
              };
              if (v1 === "CW") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(CW.value);
              };
              return new Data_Either.Left("decodeJsonFrontFace - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonFilter = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Nearest") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Nearest.value);
              };
              if (v1 === "Linear") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Linear.value);
              };
              if (v1 === "NearestMipmapNearest") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(NearestMipmapNearest.value);
              };
              if (v1 === "NearestMipmapLinear") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(NearestMipmapLinear.value);
              };
              if (v1 === "LinearMipmapNearest") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(LinearMipmapNearest.value);
              };
              if (v1 === "LinearMipmapLinear") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(LinearMipmapLinear.value);
              };
              return new Data_Either.Left("decodeJsonFilter - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonFetchPrimitive = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Points") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Points.value);
              };
              if (v1 === "Lines") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Lines.value);
              };
              if (v1 === "Triangles") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Triangles.value);
              };
              if (v1 === "LinesAdjacency") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(LinesAdjacency.value);
              };
              if (v1 === "TrianglesAdjacency") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(TrianglesAdjacency.value);
              };
              return new Data_Either.Left("decodeJsonFetchPrimitive - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonSlot = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Slot") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("slotName"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonInputType))(v)("slotStreams"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonInputType))(v)("slotUniforms"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFetchPrimitive)(v)("slotPrimitive"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("slotPrograms"))(function (v6) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Slot({
                                          slotName: v2, 
                                          slotStreams: v3, 
                                          slotUniforms: v4, 
                                          slotPrimitive: v5, 
                                          slotPrograms: v6
                                      }));
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonSlot - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonEdgeMode = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Repeat") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Repeat.value);
              };
              if (v1 === "MirroredRepeat") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(MirroredRepeat.value);
              };
              if (v1 === "ClampToEdge") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ClampToEdge.value);
              };
              if (v1 === "ClampToBorder") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ClampToBorder.value);
              };
              return new Data_Either.Left("decodeJsonEdgeMode - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonCullMode = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CullNone") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(CullNone.value);
              };
              if (v1 === "CullFront") {
                  return Data_Functor.map(Data_Either.functorEither)(CullFront.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFrontFace)(v)("arg0"));
              };
              if (v1 === "CullBack") {
                  return Data_Functor.map(Data_Either.functorEither)(CullBack.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFrontFace)(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonCullMode - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonRasterContext = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "PointCtx") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(PointCtx.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonPointSize)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonPointSpriteCoordOrigin)(v)("arg2"));
              };
              if (v1 === "LineCtx") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(LineCtx.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonProvokingVertex)(v)("arg1"));
              };
              if (v1 === "TriangleCtx") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(TriangleCtx.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonCullMode)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonPolygonMode)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonPolygonOffset)(v)("arg2")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonProvokingVertex)(v)("arg3"));
              };
              return new Data_Either.Left("decodeJsonRasterContext - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonComparisonFunction = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Never") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Never.value);
              };
              if (v1 === "Less") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Less.value);
              };
              if (v1 === "Equal") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Equal.value);
              };
              if (v1 === "Lequal") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Lequal.value);
              };
              if (v1 === "Greater") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Greater.value);
              };
              if (v1 === "Notequal") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Notequal.value);
              };
              if (v1 === "Gequal") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Gequal.value);
              };
              if (v1 === "Always") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Always.value);
              };
              return new Data_Either.Left("decodeJsonComparisonFunction - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonSamplerDescriptor = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "SamplerDescriptor") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonEdgeMode)(v)("samplerWrapS"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(decodeJsonEdgeMode))(v)("samplerWrapT"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(decodeJsonEdgeMode))(v)("samplerWrapR"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFilter)(v)("samplerMinFilter"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFilter)(v)("samplerMagFilter"))(function (v6) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonValue)(v)("samplerBorderColor"))(function (v7) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("samplerMinLod"))(function (v8) {
                                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("samplerMaxLod"))(function (v9) {
                                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonNumber)(v)("samplerLodBias"))(function (v10) {
                                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(decodeJsonComparisonFunction))(v)("samplerCompareFunc"))(function (v11) {
                                                          return Control_Applicative.pure(Data_Either.applicativeEither)(new SamplerDescriptor({
                                                              samplerWrapS: v2, 
                                                              samplerWrapT: v3, 
                                                              samplerWrapR: v4, 
                                                              samplerMinFilter: v5, 
                                                              samplerMagFilter: v6, 
                                                              samplerBorderColor: v7, 
                                                              samplerMinLod: v8, 
                                                              samplerMaxLod: v9, 
                                                              samplerLodBias: v10, 
                                                              samplerCompareFunc: v11
                                                          }));
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonSamplerDescriptor - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonStencilTest = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilTest") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonComparisonFunction)(v)("stencilComparision"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("stencilReference"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("stencilMask"))(function (v4) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(new StencilTest({
                                  stencilComparision: v2, 
                                  stencilReference: v3, 
                                  stencilMask: v4
                              }));
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonStencilTest - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonStencilTests = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StencilTests") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(StencilTests.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilTest)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilTest)(v)("arg1"));
              };
              return new Data_Either.Left("decodeJsonStencilTests - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonColorArity = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Red") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Red.value);
              };
              if (v1 === "RG") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(RG.value);
              };
              if (v1 === "RGB") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(RGB.value);
              };
              if (v1 === "RGBA") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(RGBA.value);
              };
              return new Data_Either.Left("decodeJsonColorArity - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonTextureDataType = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FloatT") {
                  return Data_Functor.map(Data_Either.functorEither)(FloatT.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "IntT") {
                  return Data_Functor.map(Data_Either.functorEither)(IntT.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "WordT") {
                  return Data_Functor.map(Data_Either.functorEither)(WordT.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonColorArity)(v)("arg0"));
              };
              if (v1 === "ShadowT") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ShadowT.value);
              };
              return new Data_Either.Left("decodeJsonTextureDataType - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonTextureType = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Texture1D") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Texture1D.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "Texture2D") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Texture2D.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "Texture3D") {
                  return Data_Functor.map(Data_Either.functorEither)(Texture3D.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "TextureCube") {
                  return Data_Functor.map(Data_Either.functorEither)(TextureCube.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "TextureRect") {
                  return Data_Functor.map(Data_Either.functorEither)(TextureRect.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0"));
              };
              if (v1 === "Texture2DMS") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Texture2DMS.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg2")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("arg3"));
              };
              if (v1 === "TextureBuffer") {
                  return Data_Functor.map(Data_Either.functorEither)(TextureBuffer.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureDataType)(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonTextureType - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonTextureDescriptor = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TextureDescriptor") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTextureType)(v)("textureType"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonValue)(v)("textureSize"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageSemantic)(v)("textureSemantic"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonSamplerDescriptor)(v)("textureSampler"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("textureBaseLevel"))(function (v6) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("textureMaxLevel"))(function (v7) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)(new TextureDescriptor({
                                              textureType: v2, 
                                              textureSize: v3, 
                                              textureSemantic: v4, 
                                              textureSampler: v5, 
                                              textureBaseLevel: v6, 
                                              textureMaxLevel: v7
                                          }));
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonTextureDescriptor - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonClearImage = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "ClearImage") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageSemantic)(v)("imageSemantic"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonValue)(v)("clearValue"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new ClearImage({
                              imageSemantic: v2, 
                              clearValue: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonClearImage - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonBlendingFactor = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Zero") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Zero.value);
              };
              if (v1 === "One") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(One.value);
              };
              if (v1 === "SrcColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(SrcColor.value);
              };
              if (v1 === "OneMinusSrcColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusSrcColor.value);
              };
              if (v1 === "DstColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(DstColor.value);
              };
              if (v1 === "OneMinusDstColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusDstColor.value);
              };
              if (v1 === "SrcAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(SrcAlpha.value);
              };
              if (v1 === "OneMinusSrcAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusSrcAlpha.value);
              };
              if (v1 === "DstAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(DstAlpha.value);
              };
              if (v1 === "OneMinusDstAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusDstAlpha.value);
              };
              if (v1 === "ConstantColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ConstantColor.value);
              };
              if (v1 === "OneMinusConstantColor") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusConstantColor.value);
              };
              if (v1 === "ConstantAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(ConstantAlpha.value);
              };
              if (v1 === "OneMinusConstantAlpha") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OneMinusConstantAlpha.value);
              };
              if (v1 === "SrcAlphaSaturate") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(SrcAlphaSaturate.value);
              };
              return new Data_Either.Left("decodeJsonBlendingFactor - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonBlendEquation = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "FuncAdd") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FuncAdd.value);
              };
              if (v1 === "FuncSubtract") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FuncSubtract.value);
              };
              if (v1 === "FuncReverseSubtract") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(FuncReverseSubtract.value);
              };
              if (v1 === "Min") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Min.value);
              };
              if (v1 === "Max") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Max.value);
              };
              return new Data_Either.Left("decodeJsonBlendEquation - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonBlending = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "NoBlending") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(NoBlending.value);
              };
              if (v1 === "BlendLogicOp") {
                  return Data_Functor.map(Data_Either.functorEither)(BlendLogicOp.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonLogicOperation)(v)("arg0"));
              };
              if (v1 === "Blend") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendEquation)(v)("colorEqSrc"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendEquation)(v)("alphaEqSrc"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendingFactor)(v)("colorFSrc"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendingFactor)(v)("colorFDst"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendingFactor)(v)("alphaFSrc"))(function (v6) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlendingFactor)(v)("alphaFDst"))(function (v7) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("color"))(function (v8) {
                                              return Control_Applicative.pure(Data_Either.applicativeEither)(new Blend({
                                                  colorEqSrc: v2, 
                                                  alphaEqSrc: v3, 
                                                  colorFSrc: v4, 
                                                  colorFDst: v5, 
                                                  alphaFSrc: v6, 
                                                  alphaFDst: v7, 
                                                  color: v8
                                              }));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonBlending - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonFragmentOperation = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "DepthOp") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(DepthOp.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonComparisonFunction)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("arg1"));
              };
              if (v1 === "StencilOp") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(StencilOp.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilTests)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilOps)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonStencilOps)(v)("arg2"));
              };
              if (v1 === "ColorOp") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(ColorOp.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBlending)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonValue)(v)("arg1"));
              };
              return new Data_Either.Left("decodeJsonFragmentOperation - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonBackend = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "WebGL1") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(WebGL1.value);
              };
              if (v1 === "OpenGL33") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(OpenGL33.value);
              };
              return new Data_Either.Left("decodeJsonBackend - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonArrayValue = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "VBoolArray") {
                  return Data_Functor.map(Data_Either.functorEither)(VBoolArray.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonBoolean))(v)("arg0"));
              };
              if (v1 === "VIntArray") {
                  return Data_Functor.map(Data_Either.functorEither)(VIntArray.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VWordArray") {
                  return Data_Functor.map(Data_Either.functorEither)(VWordArray.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "VFloatArray") {
                  return Data_Functor.map(Data_Either.functorEither)(VFloatArray.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonArrayValue - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonStreamData = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "StreamData") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonArrayValue))(v)("streamData"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonInputType))(v)("streamType"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonFetchPrimitive)(v)("streamPrimitive"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("streamPrograms"))(function (v5) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new StreamData({
                                      streamData: v2, 
                                      streamType: v3, 
                                      streamPrimitive: v4, 
                                      streamPrograms: v5
                                  }));
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonStreamData - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonAccumulationContext = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "AccumulationContext") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(v)("accViewportName"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeList(decodeJsonFragmentOperation))(v)("accOperations"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new AccumulationContext({
                              accViewportName: v2, 
                              accOperations: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonAccumulationContext - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonCommand = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "SetRasterContext") {
                  return Data_Functor.map(Data_Either.functorEither)(SetRasterContext.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonRasterContext)(v)("arg0"));
              };
              if (v1 === "SetAccumulationContext") {
                  return Data_Functor.map(Data_Either.functorEither)(SetAccumulationContext.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonAccumulationContext)(v)("arg0"));
              };
              if (v1 === "SetRenderTarget") {
                  return Data_Functor.map(Data_Either.functorEither)(SetRenderTarget.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SetProgram") {
                  return Data_Functor.map(Data_Either.functorEither)(SetProgram.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SetSamplerUniform") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(SetSamplerUniform.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "SetTexture") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(SetTexture.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1"));
              };
              if (v1 === "SetSampler") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(SetSampler.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg1"));
              };
              if (v1 === "RenderSlot") {
                  return Data_Functor.map(Data_Either.functorEither)(RenderSlot.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "RenderStream") {
                  return Data_Functor.map(Data_Either.functorEither)(RenderStream.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "ClearRenderTarget") {
                  return Data_Functor.map(Data_Either.functorEither)(ClearRenderTarget.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonClearImage))(v)("arg0"));
              };
              if (v1 === "GenerateMipMap") {
                  return Data_Functor.map(Data_Either.functorEither)(GenerateMipMap.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0"));
              };
              if (v1 === "SaveImage") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(SaveImage.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageRef)(v)("arg1"));
              };
              if (v1 === "LoadImage") {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(LoadImage.create)(Data_Argonaut_Decode_Combinators.getField(decodeJsonImageRef)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("arg1"));
              };
              return new Data_Either.Left("decodeJsonCommand - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonPipeline = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Pipeline") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("info"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonBackend)(v)("backend"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonTextureDescriptor))(v)("textures"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonSamplerDescriptor))(v)("samplers"))(function (v5) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonRenderTarget))(v)("targets"))(function (v6) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonProgram))(v)("programs"))(function (v7) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonSlot))(v)("slots"))(function (v8) {
                                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonStreamData))(v)("streams"))(function (v9) {
                                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonCommand))(v)("commands"))(function (v10) {
                                                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Pipeline({
                                                          info: v2, 
                                                          backend: v3, 
                                                          textures: v4, 
                                                          samplers: v5, 
                                                          targets: v6, 
                                                          programs: v7, 
                                                          slots: v8, 
                                                          streams: v9, 
                                                          commands: v10
                                                      }));
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonPipeline - unknown tag: " + v1);
          });
      });
  });
  exports["AccumulationContext"] = AccumulationContext;
  exports["VBoolArray"] = VBoolArray;
  exports["VIntArray"] = VIntArray;
  exports["VWordArray"] = VWordArray;
  exports["VFloatArray"] = VFloatArray;
  exports["WebGL1"] = WebGL1;
  exports["OpenGL33"] = OpenGL33;
  exports["FuncAdd"] = FuncAdd;
  exports["FuncSubtract"] = FuncSubtract;
  exports["FuncReverseSubtract"] = FuncReverseSubtract;
  exports["Min"] = Min;
  exports["Max"] = Max;
  exports["NoBlending"] = NoBlending;
  exports["BlendLogicOp"] = BlendLogicOp;
  exports["Blend"] = Blend;
  exports["Zero"] = Zero;
  exports["One"] = One;
  exports["SrcColor"] = SrcColor;
  exports["OneMinusSrcColor"] = OneMinusSrcColor;
  exports["DstColor"] = DstColor;
  exports["OneMinusDstColor"] = OneMinusDstColor;
  exports["SrcAlpha"] = SrcAlpha;
  exports["OneMinusSrcAlpha"] = OneMinusSrcAlpha;
  exports["DstAlpha"] = DstAlpha;
  exports["OneMinusDstAlpha"] = OneMinusDstAlpha;
  exports["ConstantColor"] = ConstantColor;
  exports["OneMinusConstantColor"] = OneMinusConstantColor;
  exports["ConstantAlpha"] = ConstantAlpha;
  exports["OneMinusConstantAlpha"] = OneMinusConstantAlpha;
  exports["SrcAlphaSaturate"] = SrcAlphaSaturate;
  exports["ClearImage"] = ClearImage;
  exports["Red"] = Red;
  exports["RG"] = RG;
  exports["RGB"] = RGB;
  exports["RGBA"] = RGBA;
  exports["SetRasterContext"] = SetRasterContext;
  exports["SetAccumulationContext"] = SetAccumulationContext;
  exports["SetRenderTarget"] = SetRenderTarget;
  exports["SetProgram"] = SetProgram;
  exports["SetSamplerUniform"] = SetSamplerUniform;
  exports["SetTexture"] = SetTexture;
  exports["SetSampler"] = SetSampler;
  exports["RenderSlot"] = RenderSlot;
  exports["RenderStream"] = RenderStream;
  exports["ClearRenderTarget"] = ClearRenderTarget;
  exports["GenerateMipMap"] = GenerateMipMap;
  exports["SaveImage"] = SaveImage;
  exports["LoadImage"] = LoadImage;
  exports["Never"] = Never;
  exports["Less"] = Less;
  exports["Equal"] = Equal;
  exports["Lequal"] = Lequal;
  exports["Greater"] = Greater;
  exports["Notequal"] = Notequal;
  exports["Gequal"] = Gequal;
  exports["Always"] = Always;
  exports["CullNone"] = CullNone;
  exports["CullFront"] = CullFront;
  exports["CullBack"] = CullBack;
  exports["Repeat"] = Repeat;
  exports["MirroredRepeat"] = MirroredRepeat;
  exports["ClampToEdge"] = ClampToEdge;
  exports["ClampToBorder"] = ClampToBorder;
  exports["Points"] = Points;
  exports["Lines"] = Lines;
  exports["Triangles"] = Triangles;
  exports["LinesAdjacency"] = LinesAdjacency;
  exports["TrianglesAdjacency"] = TrianglesAdjacency;
  exports["Nearest"] = Nearest;
  exports["Linear"] = Linear;
  exports["NearestMipmapNearest"] = NearestMipmapNearest;
  exports["NearestMipmapLinear"] = NearestMipmapLinear;
  exports["LinearMipmapNearest"] = LinearMipmapNearest;
  exports["LinearMipmapLinear"] = LinearMipmapLinear;
  exports["DepthOp"] = DepthOp;
  exports["StencilOp"] = StencilOp;
  exports["ColorOp"] = ColorOp;
  exports["CCW"] = CCW;
  exports["CW"] = CW;
  exports["TextureImage"] = TextureImage;
  exports["Framebuffer"] = Framebuffer;
  exports["Depth"] = Depth;
  exports["Stencil"] = Stencil;
  exports["Color"] = Color;
  exports["Bool"] = Bool;
  exports["V2B"] = V2B;
  exports["V3B"] = V3B;
  exports["V4B"] = V4B;
  exports["Word"] = Word;
  exports["V2U"] = V2U;
  exports["V3U"] = V3U;
  exports["V4U"] = V4U;
  exports["Int"] = Int;
  exports["V2I"] = V2I;
  exports["V3I"] = V3I;
  exports["V4I"] = V4I;
  exports["Float"] = Float;
  exports["V2F"] = V2F;
  exports["V3F"] = V3F;
  exports["V4F"] = V4F;
  exports["M22F"] = M22F;
  exports["M23F"] = M23F;
  exports["M24F"] = M24F;
  exports["M32F"] = M32F;
  exports["M33F"] = M33F;
  exports["M34F"] = M34F;
  exports["M42F"] = M42F;
  exports["M43F"] = M43F;
  exports["M44F"] = M44F;
  exports["STexture1D"] = STexture1D;
  exports["STexture2D"] = STexture2D;
  exports["STextureCube"] = STextureCube;
  exports["STexture1DArray"] = STexture1DArray;
  exports["STexture2DArray"] = STexture2DArray;
  exports["STexture2DRect"] = STexture2DRect;
  exports["FTexture1D"] = FTexture1D;
  exports["FTexture2D"] = FTexture2D;
  exports["FTexture3D"] = FTexture3D;
  exports["FTextureCube"] = FTextureCube;
  exports["FTexture1DArray"] = FTexture1DArray;
  exports["FTexture2DArray"] = FTexture2DArray;
  exports["FTexture2DMS"] = FTexture2DMS;
  exports["FTexture2DMSArray"] = FTexture2DMSArray;
  exports["FTextureBuffer"] = FTextureBuffer;
  exports["FTexture2DRect"] = FTexture2DRect;
  exports["ITexture1D"] = ITexture1D;
  exports["ITexture2D"] = ITexture2D;
  exports["ITexture3D"] = ITexture3D;
  exports["ITextureCube"] = ITextureCube;
  exports["ITexture1DArray"] = ITexture1DArray;
  exports["ITexture2DArray"] = ITexture2DArray;
  exports["ITexture2DMS"] = ITexture2DMS;
  exports["ITexture2DMSArray"] = ITexture2DMSArray;
  exports["ITextureBuffer"] = ITextureBuffer;
  exports["ITexture2DRect"] = ITexture2DRect;
  exports["UTexture1D"] = UTexture1D;
  exports["UTexture2D"] = UTexture2D;
  exports["UTexture3D"] = UTexture3D;
  exports["UTextureCube"] = UTextureCube;
  exports["UTexture1DArray"] = UTexture1DArray;
  exports["UTexture2DArray"] = UTexture2DArray;
  exports["UTexture2DMS"] = UTexture2DMS;
  exports["UTexture2DMSArray"] = UTexture2DMSArray;
  exports["UTextureBuffer"] = UTextureBuffer;
  exports["UTexture2DRect"] = UTexture2DRect;
  exports["Clear"] = Clear;
  exports["And"] = And;
  exports["AndReverse"] = AndReverse;
  exports["Copy"] = Copy;
  exports["AndInverted"] = AndInverted;
  exports["Noop"] = Noop;
  exports["Xor"] = Xor;
  exports["Or"] = Or;
  exports["Nor"] = Nor;
  exports["Equiv"] = Equiv;
  exports["Invert"] = Invert;
  exports["OrReverse"] = OrReverse;
  exports["CopyInverted"] = CopyInverted;
  exports["OrInverted"] = OrInverted;
  exports["Nand"] = Nand;
  exports["Parameter"] = Parameter;
  exports["Pipeline"] = Pipeline;
  exports["PointSize"] = PointSize;
  exports["ProgramPointSize"] = ProgramPointSize;
  exports["LowerLeft"] = LowerLeft;
  exports["UpperLeft"] = UpperLeft;
  exports["PolygonPoint"] = PolygonPoint;
  exports["PolygonLine"] = PolygonLine;
  exports["PolygonFill"] = PolygonFill;
  exports["NoOffset"] = NoOffset;
  exports["Offset"] = Offset;
  exports["Program"] = Program;
  exports["FirstVertex"] = FirstVertex;
  exports["LastVertex"] = LastVertex;
  exports["PointCtx"] = PointCtx;
  exports["LineCtx"] = LineCtx;
  exports["TriangleCtx"] = TriangleCtx;
  exports["RenderTarget"] = RenderTarget;
  exports["SamplerDescriptor"] = SamplerDescriptor;
  exports["Slot"] = Slot;
  exports["OpZero"] = OpZero;
  exports["OpKeep"] = OpKeep;
  exports["OpReplace"] = OpReplace;
  exports["OpIncr"] = OpIncr;
  exports["OpIncrWrap"] = OpIncrWrap;
  exports["OpDecr"] = OpDecr;
  exports["OpDecrWrap"] = OpDecrWrap;
  exports["OpInvert"] = OpInvert;
  exports["StencilOps"] = StencilOps;
  exports["StencilTest"] = StencilTest;
  exports["StencilTests"] = StencilTests;
  exports["StreamData"] = StreamData;
  exports["TargetItem"] = TargetItem;
  exports["FloatT"] = FloatT;
  exports["IntT"] = IntT;
  exports["WordT"] = WordT;
  exports["ShadowT"] = ShadowT;
  exports["TextureDescriptor"] = TextureDescriptor;
  exports["Texture1D"] = Texture1D;
  exports["Texture2D"] = Texture2D;
  exports["Texture3D"] = Texture3D;
  exports["TextureCube"] = TextureCube;
  exports["TextureRect"] = TextureRect;
  exports["Texture2DMS"] = Texture2DMS;
  exports["TextureBuffer"] = TextureBuffer;
  exports["VBool"] = VBool;
  exports["VV2B"] = VV2B;
  exports["VV3B"] = VV3B;
  exports["VV4B"] = VV4B;
  exports["VWord"] = VWord;
  exports["VV2U"] = VV2U;
  exports["VV3U"] = VV3U;
  exports["VV4U"] = VV4U;
  exports["VInt"] = VInt;
  exports["VV2I"] = VV2I;
  exports["VV3I"] = VV3I;
  exports["VV4I"] = VV4I;
  exports["VFloat"] = VFloat;
  exports["VV2F"] = VV2F;
  exports["VV3F"] = VV3F;
  exports["VV4F"] = VV4F;
  exports["VM22F"] = VM22F;
  exports["VM23F"] = VM23F;
  exports["VM24F"] = VM24F;
  exports["VM32F"] = VM32F;
  exports["VM33F"] = VM33F;
  exports["VM34F"] = VM34F;
  exports["VM42F"] = VM42F;
  exports["VM43F"] = VM43F;
  exports["VM44F"] = VM44F;
  exports["genericFetchPrimitive"] = genericFetchPrimitive;
  exports["showFetchPrimitive"] = showFetchPrimitive;
  exports["eqFetchPrimitive"] = eqFetchPrimitive;
  exports["genericColorArity"] = genericColorArity;
  exports["genericTextureDataType"] = genericTextureDataType;
  exports["showTextureDataType"] = showTextureDataType;
  exports["decodeJsonArrayValue"] = decodeJsonArrayValue;
  exports["decodeJsonValue"] = decodeJsonValue;
  exports["decodeJsonInputType"] = decodeJsonInputType;
  exports["decodeJsonPointSpriteCoordOrigin"] = decodeJsonPointSpriteCoordOrigin;
  exports["decodeJsonPointSize"] = decodeJsonPointSize;
  exports["decodeJsonPolygonOffset"] = decodeJsonPolygonOffset;
  exports["decodeJsonFrontFace"] = decodeJsonFrontFace;
  exports["decodeJsonPolygonMode"] = decodeJsonPolygonMode;
  exports["decodeJsonProvokingVertex"] = decodeJsonProvokingVertex;
  exports["decodeJsonCullMode"] = decodeJsonCullMode;
  exports["decodeJsonComparisonFunction"] = decodeJsonComparisonFunction;
  exports["decodeJsonStencilOperation"] = decodeJsonStencilOperation;
  exports["decodeJsonBlendEquation"] = decodeJsonBlendEquation;
  exports["decodeJsonBlendingFactor"] = decodeJsonBlendingFactor;
  exports["decodeJsonLogicOperation"] = decodeJsonLogicOperation;
  exports["decodeJsonStencilOps"] = decodeJsonStencilOps;
  exports["decodeJsonStencilTest"] = decodeJsonStencilTest;
  exports["decodeJsonStencilTests"] = decodeJsonStencilTests;
  exports["decodeJsonFetchPrimitive"] = decodeJsonFetchPrimitive;
  exports["decodeJsonColorArity"] = decodeJsonColorArity;
  exports["decodeJsonBlending"] = decodeJsonBlending;
  exports["decodeJsonRasterContext"] = decodeJsonRasterContext;
  exports["decodeJsonFragmentOperation"] = decodeJsonFragmentOperation;
  exports["decodeJsonAccumulationContext"] = decodeJsonAccumulationContext;
  exports["decodeJsonTextureDataType"] = decodeJsonTextureDataType;
  exports["decodeJsonTextureType"] = decodeJsonTextureType;
  exports["decodeJsonFilter"] = decodeJsonFilter;
  exports["decodeJsonEdgeMode"] = decodeJsonEdgeMode;
  exports["decodeJsonImageSemantic"] = decodeJsonImageSemantic;
  exports["decodeJsonImageRef"] = decodeJsonImageRef;
  exports["decodeJsonClearImage"] = decodeJsonClearImage;
  exports["decodeJsonCommand"] = decodeJsonCommand;
  exports["decodeJsonSamplerDescriptor"] = decodeJsonSamplerDescriptor;
  exports["decodeJsonTextureDescriptor"] = decodeJsonTextureDescriptor;
  exports["decodeJsonParameter"] = decodeJsonParameter;
  exports["decodeJsonProgram"] = decodeJsonProgram;
  exports["decodeJsonSlot"] = decodeJsonSlot;
  exports["decodeJsonStreamData"] = decodeJsonStreamData;
  exports["decodeJsonTargetItem"] = decodeJsonTargetItem;
  exports["decodeJsonRenderTarget"] = decodeJsonRenderTarget;
  exports["decodeJsonBackend"] = decodeJsonBackend;
  exports["decodeJsonPipeline"] = decodeJsonPipeline;
})(PS["LambdaCube.IR"] = PS["LambdaCube.IR"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var Prelude = PS["Prelude"];        
  var P_Points = (function () {
      function P_Points() {

      };
      P_Points.value = new P_Points();
      return P_Points;
  })();
  var P_TriangleStrip = (function () {
      function P_TriangleStrip() {

      };
      P_TriangleStrip.value = new P_TriangleStrip();
      return P_TriangleStrip;
  })();
  var P_Triangles = (function () {
      function P_Triangles() {

      };
      P_Triangles.value = new P_Triangles();
      return P_Triangles;
  })();
  var P_TriangleStripI = (function () {
      function P_TriangleStripI(value0) {
          this.value0 = value0;
      };
      P_TriangleStripI.create = function (value0) {
          return new P_TriangleStripI(value0);
      };
      return P_TriangleStripI;
  })();
  var P_TrianglesI = (function () {
      function P_TrianglesI(value0) {
          this.value0 = value0;
      };
      P_TrianglesI.create = function (value0) {
          return new P_TrianglesI(value0);
      };
      return P_TrianglesI;
  })();
  var A_Float = (function () {
      function A_Float(value0) {
          this.value0 = value0;
      };
      A_Float.create = function (value0) {
          return new A_Float(value0);
      };
      return A_Float;
  })();
  var A_V2F = (function () {
      function A_V2F(value0) {
          this.value0 = value0;
      };
      A_V2F.create = function (value0) {
          return new A_V2F(value0);
      };
      return A_V2F;
  })();
  var A_V3F = (function () {
      function A_V3F(value0) {
          this.value0 = value0;
      };
      A_V3F.create = function (value0) {
          return new A_V3F(value0);
      };
      return A_V3F;
  })();
  var A_V4F = (function () {
      function A_V4F(value0) {
          this.value0 = value0;
      };
      A_V4F.create = function (value0) {
          return new A_V4F(value0);
      };
      return A_V4F;
  })();
  var A_M22F = (function () {
      function A_M22F(value0) {
          this.value0 = value0;
      };
      A_M22F.create = function (value0) {
          return new A_M22F(value0);
      };
      return A_M22F;
  })();
  var A_M33F = (function () {
      function A_M33F(value0) {
          this.value0 = value0;
      };
      A_M33F.create = function (value0) {
          return new A_M33F(value0);
      };
      return A_M33F;
  })();
  var A_M44F = (function () {
      function A_M44F(value0) {
          this.value0 = value0;
      };
      A_M44F.create = function (value0) {
          return new A_M44F(value0);
      };
      return A_M44F;
  })();
  var A_Int = (function () {
      function A_Int(value0) {
          this.value0 = value0;
      };
      A_Int.create = function (value0) {
          return new A_Int(value0);
      };
      return A_Int;
  })();
  var A_Word = (function () {
      function A_Word(value0) {
          this.value0 = value0;
      };
      A_Word.create = function (value0) {
          return new A_Word(value0);
      };
      return A_Word;
  })();
  var Mesh = (function () {
      function Mesh(value0) {
          this.value0 = value0;
      };
      Mesh.create = function (value0) {
          return new Mesh(value0);
      };
      return Mesh;
  })();
  var decodeJsonMeshPrimitive = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "P_Points") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(P_Points.value);
              };
              if (v1 === "P_TriangleStrip") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(P_TriangleStrip.value);
              };
              if (v1 === "P_Triangles") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(P_Triangles.value);
              };
              if (v1 === "P_TriangleStripI") {
                  return Data_Functor.map(Data_Either.functorEither)(P_TriangleStripI.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "P_TrianglesI") {
                  return Data_Functor.map(Data_Either.functorEither)(P_TrianglesI.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonMeshPrimitive - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonMeshAttribute = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "A_Float") {
                  return Data_Functor.map(Data_Either.functorEither)(A_Float.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonNumber))(v)("arg0"));
              };
              if (v1 === "A_V2F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_V2F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "A_V3F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_V3F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "A_V4F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_V4F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber)))(v)("arg0"));
              };
              if (v1 === "A_M22F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_M22F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV2(LambdaCube_LinearBase.decodeJsonV2(Data_Argonaut_Decode_Class.decodeJsonNumber))))(v)("arg0"));
              };
              if (v1 === "A_M33F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_M33F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV3(LambdaCube_LinearBase.decodeJsonV3(Data_Argonaut_Decode_Class.decodeJsonNumber))))(v)("arg0"));
              };
              if (v1 === "A_M44F") {
                  return Data_Functor.map(Data_Either.functorEither)(A_M44F.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(LambdaCube_LinearBase.decodeJsonV4(LambdaCube_LinearBase.decodeJsonV4(Data_Argonaut_Decode_Class.decodeJsonNumber))))(v)("arg0"));
              };
              if (v1 === "A_Int") {
                  return Data_Functor.map(Data_Either.functorEither)(A_Int.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              if (v1 === "A_Word") {
                  return Data_Functor.map(Data_Either.functorEither)(A_Word.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("arg0"));
              };
              return new Data_Either.Left("decodeJsonMeshAttribute - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonMesh = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Mesh") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(decodeJsonMeshAttribute))(v)("mAttributes"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonMeshPrimitive)(v)("mPrimitive"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Mesh({
                              mAttributes: v2, 
                              mPrimitive: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonMesh - unknown tag: " + v1);
          });
      });
  });
  exports["Mesh"] = Mesh;
  exports["A_Float"] = A_Float;
  exports["A_V2F"] = A_V2F;
  exports["A_V3F"] = A_V3F;
  exports["A_V4F"] = A_V4F;
  exports["A_M22F"] = A_M22F;
  exports["A_M33F"] = A_M33F;
  exports["A_M44F"] = A_M44F;
  exports["A_Int"] = A_Int;
  exports["A_Word"] = A_Word;
  exports["P_Points"] = P_Points;
  exports["P_TriangleStrip"] = P_TriangleStrip;
  exports["P_Triangles"] = P_Triangles;
  exports["P_TriangleStripI"] = P_TriangleStripI;
  exports["P_TrianglesI"] = P_TrianglesI;
  exports["decodeJsonMeshAttribute"] = decodeJsonMeshAttribute;
  exports["decodeJsonMeshPrimitive"] = decodeJsonMeshPrimitive;
  exports["decodeJsonMesh"] = decodeJsonMesh;
})(PS["LambdaCube.Mesh"] = PS["LambdaCube.Mesh"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var Prelude = PS["Prelude"];        
  var Attribute_Word = (function () {
      function Attribute_Word() {

      };
      Attribute_Word.value = new Attribute_Word();
      return Attribute_Word;
  })();
  var Attribute_V2U = (function () {
      function Attribute_V2U() {

      };
      Attribute_V2U.value = new Attribute_V2U();
      return Attribute_V2U;
  })();
  var Attribute_V3U = (function () {
      function Attribute_V3U() {

      };
      Attribute_V3U.value = new Attribute_V3U();
      return Attribute_V3U;
  })();
  var Attribute_V4U = (function () {
      function Attribute_V4U() {

      };
      Attribute_V4U.value = new Attribute_V4U();
      return Attribute_V4U;
  })();
  var Attribute_Int = (function () {
      function Attribute_Int() {

      };
      Attribute_Int.value = new Attribute_Int();
      return Attribute_Int;
  })();
  var Attribute_V2I = (function () {
      function Attribute_V2I() {

      };
      Attribute_V2I.value = new Attribute_V2I();
      return Attribute_V2I;
  })();
  var Attribute_V3I = (function () {
      function Attribute_V3I() {

      };
      Attribute_V3I.value = new Attribute_V3I();
      return Attribute_V3I;
  })();
  var Attribute_V4I = (function () {
      function Attribute_V4I() {

      };
      Attribute_V4I.value = new Attribute_V4I();
      return Attribute_V4I;
  })();
  var Attribute_Float = (function () {
      function Attribute_Float() {

      };
      Attribute_Float.value = new Attribute_Float();
      return Attribute_Float;
  })();
  var Attribute_V2F = (function () {
      function Attribute_V2F() {

      };
      Attribute_V2F.value = new Attribute_V2F();
      return Attribute_V2F;
  })();
  var Attribute_V3F = (function () {
      function Attribute_V3F() {

      };
      Attribute_V3F.value = new Attribute_V3F();
      return Attribute_V3F;
  })();
  var Attribute_V4F = (function () {
      function Attribute_V4F() {

      };
      Attribute_V4F.value = new Attribute_V4F();
      return Attribute_V4F;
  })();
  var Attribute_M22F = (function () {
      function Attribute_M22F() {

      };
      Attribute_M22F.value = new Attribute_M22F();
      return Attribute_M22F;
  })();
  var Attribute_M23F = (function () {
      function Attribute_M23F() {

      };
      Attribute_M23F.value = new Attribute_M23F();
      return Attribute_M23F;
  })();
  var Attribute_M24F = (function () {
      function Attribute_M24F() {

      };
      Attribute_M24F.value = new Attribute_M24F();
      return Attribute_M24F;
  })();
  var Attribute_M32F = (function () {
      function Attribute_M32F() {

      };
      Attribute_M32F.value = new Attribute_M32F();
      return Attribute_M32F;
  })();
  var Attribute_M33F = (function () {
      function Attribute_M33F() {

      };
      Attribute_M33F.value = new Attribute_M33F();
      return Attribute_M33F;
  })();
  var Attribute_M34F = (function () {
      function Attribute_M34F() {

      };
      Attribute_M34F.value = new Attribute_M34F();
      return Attribute_M34F;
  })();
  var Attribute_M42F = (function () {
      function Attribute_M42F() {

      };
      Attribute_M42F.value = new Attribute_M42F();
      return Attribute_M42F;
  })();
  var Attribute_M43F = (function () {
      function Attribute_M43F() {

      };
      Attribute_M43F.value = new Attribute_M43F();
      return Attribute_M43F;
  })();
  var Attribute_M44F = (function () {
      function Attribute_M44F() {

      };
      Attribute_M44F.value = new Attribute_M44F();
      return Attribute_M44F;
  })();
  var ObjectArraySchema = (function () {
      function ObjectArraySchema(value0) {
          this.value0 = value0;
      };
      ObjectArraySchema.create = function (value0) {
          return new ObjectArraySchema(value0);
      };
      return ObjectArraySchema;
  })();
  var PipelineSchema = (function () {
      function PipelineSchema(value0) {
          this.value0 = value0;
      };
      PipelineSchema.create = function (value0) {
          return new PipelineSchema(value0);
      };
      return PipelineSchema;
  })();
  var genericStreamType = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_Word" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_Word.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V2U" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V2U.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V3U" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V3U.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V4U" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V4U.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_Int" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_Int.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V2I" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V2I.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V3I" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V3I.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V4I" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V4I.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_Float" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_Float.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V2F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V2F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V3F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V3F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_V4F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_V4F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M22F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M22F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M23F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M23F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M24F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M24F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M32F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M32F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M33F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M33F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M34F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M34F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M42F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M42F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M43F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M43F.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "LambdaCube.PipelineSchema.Attribute_M44F" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Attribute_M44F.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("LambdaCube.PipelineSchema.StreamType", [ {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_Word", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V2U", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V3U", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V4U", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_Int", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V2I", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V3I", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V4I", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_Float", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V2F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V3F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_V4F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M22F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M23F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M24F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M32F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M33F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M34F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M42F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M43F", 
          sigValues: [  ]
      }, {
          sigConstructor: "LambdaCube.PipelineSchema.Attribute_M44F", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Attribute_Word) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_Word", [  ]);
      };
      if (v instanceof Attribute_V2U) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V2U", [  ]);
      };
      if (v instanceof Attribute_V3U) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V3U", [  ]);
      };
      if (v instanceof Attribute_V4U) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V4U", [  ]);
      };
      if (v instanceof Attribute_Int) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_Int", [  ]);
      };
      if (v instanceof Attribute_V2I) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V2I", [  ]);
      };
      if (v instanceof Attribute_V3I) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V3I", [  ]);
      };
      if (v instanceof Attribute_V4I) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V4I", [  ]);
      };
      if (v instanceof Attribute_Float) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_Float", [  ]);
      };
      if (v instanceof Attribute_V2F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V2F", [  ]);
      };
      if (v instanceof Attribute_V3F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V3F", [  ]);
      };
      if (v instanceof Attribute_V4F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_V4F", [  ]);
      };
      if (v instanceof Attribute_M22F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M22F", [  ]);
      };
      if (v instanceof Attribute_M23F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M23F", [  ]);
      };
      if (v instanceof Attribute_M24F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M24F", [  ]);
      };
      if (v instanceof Attribute_M32F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M32F", [  ]);
      };
      if (v instanceof Attribute_M33F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M33F", [  ]);
      };
      if (v instanceof Attribute_M34F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M34F", [  ]);
      };
      if (v instanceof Attribute_M42F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M42F", [  ]);
      };
      if (v instanceof Attribute_M43F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M43F", [  ]);
      };
      if (v instanceof Attribute_M44F) {
          return new Data_Generic.SProd("LambdaCube.PipelineSchema.Attribute_M44F", [  ]);
      };
      throw new Error("Failed pattern match at LambdaCube.PipelineSchema line 56, column 1 - line 56, column 56: " + [ v.constructor.name ]);
  });
  var showStreamType = new Data_Show.Show(Data_Generic.gShow(genericStreamType));
  var eqStreamType = new Data_Eq.Eq(Data_Generic.gEq(genericStreamType));
  exports["ObjectArraySchema"] = ObjectArraySchema;
  exports["PipelineSchema"] = PipelineSchema;
  exports["Attribute_Word"] = Attribute_Word;
  exports["Attribute_V2U"] = Attribute_V2U;
  exports["Attribute_V3U"] = Attribute_V3U;
  exports["Attribute_V4U"] = Attribute_V4U;
  exports["Attribute_Int"] = Attribute_Int;
  exports["Attribute_V2I"] = Attribute_V2I;
  exports["Attribute_V3I"] = Attribute_V3I;
  exports["Attribute_V4I"] = Attribute_V4I;
  exports["Attribute_Float"] = Attribute_Float;
  exports["Attribute_V2F"] = Attribute_V2F;
  exports["Attribute_V3F"] = Attribute_V3F;
  exports["Attribute_V4F"] = Attribute_V4F;
  exports["Attribute_M22F"] = Attribute_M22F;
  exports["Attribute_M23F"] = Attribute_M23F;
  exports["Attribute_M24F"] = Attribute_M24F;
  exports["Attribute_M32F"] = Attribute_M32F;
  exports["Attribute_M33F"] = Attribute_M33F;
  exports["Attribute_M34F"] = Attribute_M34F;
  exports["Attribute_M42F"] = Attribute_M42F;
  exports["Attribute_M43F"] = Attribute_M43F;
  exports["Attribute_M44F"] = Attribute_M44F;
  exports["genericStreamType"] = genericStreamType;
  exports["showStreamType"] = showStreamType;
  exports["eqStreamType"] = eqStreamType;
})(PS["LambdaCube.PipelineSchema"] = PS["LambdaCube.PipelineSchema"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var Prelude = PS["Prelude"];        
  var Range = (function () {
      function Range(value0) {
          this.value0 = value0;
      };
      Range.create = function (value0) {
          return new Range(value0);
      };
      return Range;
  })();
  var TypeInfo = (function () {
      function TypeInfo(value0) {
          this.value0 = value0;
      };
      TypeInfo.create = function (value0) {
          return new TypeInfo(value0);
      };
      return TypeInfo;
  })();
  var WarningInfo = (function () {
      function WarningInfo(value0) {
          this.value0 = value0;
      };
      WarningInfo.create = function (value0) {
          return new WarningInfo(value0);
      };
      return WarningInfo;
  })();
  var ErrorInfo = (function () {
      function ErrorInfo(value0) {
          this.value0 = value0;
      };
      ErrorInfo.create = function (value0) {
          return new ErrorInfo(value0);
      };
      return ErrorInfo;
  })();
  var CompileError = (function () {
      function CompileError(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      CompileError.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new CompileError(value0, value1, value2, value3);
                  };
              };
          };
      };
      return CompileError;
  })();
  var Compiled = (function () {
      function Compiled(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      Compiled.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new Compiled(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return Compiled;
  })();
  var decodeJsonRange = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "Range") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("startLine"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("startColumn"))(function (v3) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("endLine"))(function (v4) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("endColumn"))(function (v5) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Range({
                                      startLine: v2, 
                                      startColumn: v3, 
                                      endLine: v4, 
                                      endColumn: v5
                                  }));
                              });
                          });
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonRange - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonTypeInfo = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "TypeInfo") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonRange)(v)("range"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("text"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new TypeInfo({
                              range: v2, 
                              text: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonTypeInfo - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonWarningInfo = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "WarningInfo") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonRange)(v)("wRange"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("wText"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new WarningInfo({
                              wRange: v2, 
                              wText: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonWarningInfo - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonErrorInfo = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "ErrorInfo") {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonRange)(v)("eRange"))(function (v2) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("eText"))(function (v3) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new ErrorInfo({
                              eRange: v2, 
                              eText: v3
                          }));
                      });
                  });
              };
              return new Data_Either.Left("decodeJsonErrorInfo - unknown tag: " + v1);
          });
      });
  });
  var decodeJsonCompileResult = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("tag"))(function (v1) {
              if (v1 === "CompileError") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(CompileError.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonTypeInfo))(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonWarningInfo))(v)("arg2")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonErrorInfo))(v)("arg3"));
              };
              if (v1 === "Compiled") {
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Compiled.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("arg0")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("arg1")))(Data_Argonaut_Decode_Combinators.getField(LambdaCube_IR.decodeJsonPipeline)(v)("arg2")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonTypeInfo))(v)("arg3")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonWarningInfo))(v)("arg4"));
              };
              return new Data_Either.Left("decodeJsonCompileResult - unknown tag: " + v1);
          });
      });
  });
  exports["CompileError"] = CompileError;
  exports["Compiled"] = Compiled;
  exports["ErrorInfo"] = ErrorInfo;
  exports["Range"] = Range;
  exports["TypeInfo"] = TypeInfo;
  exports["WarningInfo"] = WarningInfo;
  exports["decodeJsonRange"] = decodeJsonRange;
  exports["decodeJsonTypeInfo"] = decodeJsonTypeInfo;
  exports["decodeJsonWarningInfo"] = decodeJsonWarningInfo;
  exports["decodeJsonErrorInfo"] = decodeJsonErrorInfo;
  exports["decodeJsonCompileResult"] = decodeJsonCompileResult;
})(PS["LambdaCube.TypeInfo"] = PS["LambdaCube.TypeInfo"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Backend

  exports.nullWebGLFramebuffer = null;
})(PS["LambdaCube.WebGL.Backend"] = PS["LambdaCube.WebGL.Backend"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_WebGL = PS["Control.Monad.Eff.WebGL"];
  var Data_Array = PS["Data.Array"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Int = PS["Data.Int"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var Prelude = PS["Prelude"];        
  var TextureData = (function () {
      function TextureData(value0) {
          this.value0 = value0;
      };
      TextureData.create = function (value0) {
          return new TextureData(value0);
      };
      return TextureData;
  })();
  var ConstFloat = (function () {
      function ConstFloat(value0) {
          this.value0 = value0;
      };
      ConstFloat.create = function (value0) {
          return new ConstFloat(value0);
      };
      return ConstFloat;
  })();
  var ConstV2F = (function () {
      function ConstV2F(value0) {
          this.value0 = value0;
      };
      ConstV2F.create = function (value0) {
          return new ConstV2F(value0);
      };
      return ConstV2F;
  })();
  var ConstV3F = (function () {
      function ConstV3F(value0) {
          this.value0 = value0;
      };
      ConstV3F.create = function (value0) {
          return new ConstV3F(value0);
      };
      return ConstV3F;
  })();
  var ConstV4F = (function () {
      function ConstV4F(value0) {
          this.value0 = value0;
      };
      ConstV4F.create = function (value0) {
          return new ConstV4F(value0);
      };
      return ConstV4F;
  })();
  var ConstM22F = (function () {
      function ConstM22F(value0) {
          this.value0 = value0;
      };
      ConstM22F.create = function (value0) {
          return new ConstM22F(value0);
      };
      return ConstM22F;
  })();
  var ConstM33F = (function () {
      function ConstM33F(value0) {
          this.value0 = value0;
      };
      ConstM33F.create = function (value0) {
          return new ConstM33F(value0);
      };
      return ConstM33F;
  })();
  var ConstM44F = (function () {
      function ConstM44F(value0) {
          this.value0 = value0;
      };
      ConstM44F.create = function (value0) {
          return new ConstM44F(value0);
      };
      return ConstM44F;
  })();
  var Stream = (function () {
      function Stream(value0) {
          this.value0 = value0;
      };
      Stream.create = function (value0) {
          return new Stream(value0);
      };
      return Stream;
  })();
  var TriangleStrip = (function () {
      function TriangleStrip() {

      };
      TriangleStrip.value = new TriangleStrip();
      return TriangleStrip;
  })();
  var TriangleList = (function () {
      function TriangleList() {

      };
      TriangleList.value = new TriangleList();
      return TriangleList;
  })();
  var TriangleFan = (function () {
      function TriangleFan() {

      };
      TriangleFan.value = new TriangleFan();
      return TriangleFan;
  })();
  var LineStrip = (function () {
      function LineStrip() {

      };
      LineStrip.value = new LineStrip();
      return LineStrip;
  })();
  var LineList = (function () {
      function LineList() {

      };
      LineList.value = new LineList();
      return LineList;
  })();
  var LineLoop = (function () {
      function LineLoop() {

      };
      LineLoop.value = new LineLoop();
      return LineLoop;
  })();
  var PointList = (function () {
      function PointList() {

      };
      PointList.value = new PointList();
      return PointList;
  })();
  var Generate = (function () {
      function Generate() {

      };
      Generate.value = new Generate();
      return Generate;
  })();
  var Reorder = (function () {
      function Reorder() {

      };
      Reorder.value = new Reorder();
      return Reorder;
  })();
  var Ordered = (function () {
      function Ordered() {

      };
      Ordered.value = new Ordered();
      return Ordered;
  })();
  var UniBool = (function () {
      function UniBool(value0) {
          this.value0 = value0;
      };
      UniBool.create = function (value0) {
          return new UniBool(value0);
      };
      return UniBool;
  })();
  var UniV2B = (function () {
      function UniV2B(value0) {
          this.value0 = value0;
      };
      UniV2B.create = function (value0) {
          return new UniV2B(value0);
      };
      return UniV2B;
  })();
  var UniV3B = (function () {
      function UniV3B(value0) {
          this.value0 = value0;
      };
      UniV3B.create = function (value0) {
          return new UniV3B(value0);
      };
      return UniV3B;
  })();
  var UniV4B = (function () {
      function UniV4B(value0) {
          this.value0 = value0;
      };
      UniV4B.create = function (value0) {
          return new UniV4B(value0);
      };
      return UniV4B;
  })();
  var UniInt = (function () {
      function UniInt(value0) {
          this.value0 = value0;
      };
      UniInt.create = function (value0) {
          return new UniInt(value0);
      };
      return UniInt;
  })();
  var UniV2I = (function () {
      function UniV2I(value0) {
          this.value0 = value0;
      };
      UniV2I.create = function (value0) {
          return new UniV2I(value0);
      };
      return UniV2I;
  })();
  var UniV3I = (function () {
      function UniV3I(value0) {
          this.value0 = value0;
      };
      UniV3I.create = function (value0) {
          return new UniV3I(value0);
      };
      return UniV3I;
  })();
  var UniV4I = (function () {
      function UniV4I(value0) {
          this.value0 = value0;
      };
      UniV4I.create = function (value0) {
          return new UniV4I(value0);
      };
      return UniV4I;
  })();
  var UniFloat = (function () {
      function UniFloat(value0) {
          this.value0 = value0;
      };
      UniFloat.create = function (value0) {
          return new UniFloat(value0);
      };
      return UniFloat;
  })();
  var UniV2F = (function () {
      function UniV2F(value0) {
          this.value0 = value0;
      };
      UniV2F.create = function (value0) {
          return new UniV2F(value0);
      };
      return UniV2F;
  })();
  var UniV3F = (function () {
      function UniV3F(value0) {
          this.value0 = value0;
      };
      UniV3F.create = function (value0) {
          return new UniV3F(value0);
      };
      return UniV3F;
  })();
  var UniV4F = (function () {
      function UniV4F(value0) {
          this.value0 = value0;
      };
      UniV4F.create = function (value0) {
          return new UniV4F(value0);
      };
      return UniV4F;
  })();
  var UniM22F = (function () {
      function UniM22F(value0) {
          this.value0 = value0;
      };
      UniM22F.create = function (value0) {
          return new UniM22F(value0);
      };
      return UniM22F;
  })();
  var UniM33F = (function () {
      function UniM33F(value0) {
          this.value0 = value0;
      };
      UniM33F.create = function (value0) {
          return new UniM33F(value0);
      };
      return UniM33F;
  })();
  var UniM44F = (function () {
      function UniM44F(value0) {
          this.value0 = value0;
      };
      UniM44F.create = function (value0) {
          return new UniM44F(value0);
      };
      return UniM44F;
  })();
  var UniFTexture2D = (function () {
      function UniFTexture2D(value0) {
          this.value0 = value0;
      };
      UniFTexture2D.create = function (value0) {
          return new UniFTexture2D(value0);
      };
      return UniFTexture2D;
  })();
  var SBool = (function () {
      function SBool(value0) {
          this.value0 = value0;
      };
      SBool.create = function (value0) {
          return new SBool(value0);
      };
      return SBool;
  })();
  var SV2B = (function () {
      function SV2B(value0) {
          this.value0 = value0;
      };
      SV2B.create = function (value0) {
          return new SV2B(value0);
      };
      return SV2B;
  })();
  var SV3B = (function () {
      function SV3B(value0) {
          this.value0 = value0;
      };
      SV3B.create = function (value0) {
          return new SV3B(value0);
      };
      return SV3B;
  })();
  var SV4B = (function () {
      function SV4B(value0) {
          this.value0 = value0;
      };
      SV4B.create = function (value0) {
          return new SV4B(value0);
      };
      return SV4B;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SV2I = (function () {
      function SV2I(value0) {
          this.value0 = value0;
      };
      SV2I.create = function (value0) {
          return new SV2I(value0);
      };
      return SV2I;
  })();
  var SV3I = (function () {
      function SV3I(value0) {
          this.value0 = value0;
      };
      SV3I.create = function (value0) {
          return new SV3I(value0);
      };
      return SV3I;
  })();
  var SV4I = (function () {
      function SV4I(value0) {
          this.value0 = value0;
      };
      SV4I.create = function (value0) {
          return new SV4I(value0);
      };
      return SV4I;
  })();
  var SFloat = (function () {
      function SFloat(value0) {
          this.value0 = value0;
      };
      SFloat.create = function (value0) {
          return new SFloat(value0);
      };
      return SFloat;
  })();
  var SV2F = (function () {
      function SV2F(value0) {
          this.value0 = value0;
      };
      SV2F.create = function (value0) {
          return new SV2F(value0);
      };
      return SV2F;
  })();
  var SV3F = (function () {
      function SV3F(value0) {
          this.value0 = value0;
      };
      SV3F.create = function (value0) {
          return new SV3F(value0);
      };
      return SV3F;
  })();
  var SV4F = (function () {
      function SV4F(value0) {
          this.value0 = value0;
      };
      SV4F.create = function (value0) {
          return new SV4F(value0);
      };
      return SV4F;
  })();
  var SM22F = (function () {
      function SM22F(value0) {
          this.value0 = value0;
      };
      SM22F.create = function (value0) {
          return new SM22F(value0);
      };
      return SM22F;
  })();
  var SM33F = (function () {
      function SM33F(value0) {
          this.value0 = value0;
      };
      SM33F.create = function (value0) {
          return new SM33F(value0);
      };
      return SM33F;
  })();
  var SM44F = (function () {
      function SM44F(value0) {
          this.value0 = value0;
      };
      SM44F.create = function (value0) {
          return new SM44F(value0);
      };
      return SM44F;
  })();
  var SFTexture2D = (function () {
      function SFTexture2D(value0) {
          this.value0 = value0;
      };
      SFTexture2D.create = function (value0) {
          return new SFTexture2D(value0);
      };
      return SFTexture2D;
  })();
  var ArrWord8 = (function () {
      function ArrWord8() {

      };
      ArrWord8.value = new ArrWord8();
      return ArrWord8;
  })();
  var ArrWord16 = (function () {
      function ArrWord16() {

      };
      ArrWord16.value = new ArrWord16();
      return ArrWord16;
  })();
  var ArrInt8 = (function () {
      function ArrInt8() {

      };
      ArrInt8.value = new ArrInt8();
      return ArrInt8;
  })();
  var ArrInt16 = (function () {
      function ArrInt16() {

      };
      ArrInt16.value = new ArrInt16();
      return ArrInt16;
  })();
  var ArrFloat = (function () {
      function ArrFloat() {

      };
      ArrFloat.value = new ArrFloat();
      return ArrFloat;
  })();
  var $$Array = (function () {
      function $$Array(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      $$Array.create = function (value0) {
          return function (value1) {
              return new $$Array(value0, value1);
          };
      };
      return $$Array;
  })();
  var GLSetVertexAttribArray = (function () {
      function GLSetVertexAttribArray(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      GLSetVertexAttribArray.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new GLSetVertexAttribArray(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return GLSetVertexAttribArray;
  })();
  var GLDrawArrays = (function () {
      function GLDrawArrays(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      GLDrawArrays.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new GLDrawArrays(value0, value1, value2);
              };
          };
      };
      return GLDrawArrays;
  })();
  var GLDrawElements = (function () {
      function GLDrawElements(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      GLDrawElements.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new GLDrawElements(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return GLDrawElements;
  })();
  var GLSetVertexAttrib = (function () {
      function GLSetVertexAttrib(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GLSetVertexAttrib.create = function (value0) {
          return function (value1) {
              return new GLSetVertexAttrib(value0, value1);
          };
      };
      return GLSetVertexAttrib;
  })();
  var GLSetUniform = (function () {
      function GLSetUniform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GLSetUniform.create = function (value0) {
          return function (value1) {
              return new GLSetUniform(value0, value1);
          };
      };
      return GLSetUniform;
  })();
  var GLBindTexture = (function () {
      function GLBindTexture(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      GLBindTexture.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new GLBindTexture(value0, value1, value2);
              };
          };
      };
      return GLBindTexture;
  })();
  var InputConnection = (function () {
      function InputConnection(value0) {
          this.value0 = value0;
      };
      InputConnection.create = function (value0) {
          return new InputConnection(value0);
      };
      return InputConnection;
  })();
  var NumberStorable = function (toArray) {
      this.toArray = toArray;
  };
  var IntStorable = function (toIntArray) {
      this.toIntArray = toIntArray;
  };
  var toIntArray = function (dict) {
      return dict.toIntArray;
  };
  var v2IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1 ]);
      });
  };
  var v3IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1, v.value2 ]);
      });
  };
  var v4IntStorable = function (dictIntStorable) {
      return new IntStorable(function (v) {
          return Data_Array.concatMap(toIntArray(dictIntStorable))([ v.value0, v.value1, v.value2, v.value3 ]);
      });
  };
  var toArray = function (dict) {
      return dict.toArray;
  };
  var v2Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1 ]);
      });
  };
  var v3Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1, v.value2 ]);
      });
  };
  var v4Storable = function (dictNumberStorable) {
      return new NumberStorable(function (v) {
          return Data_Array.concatMap(toArray(dictNumberStorable))([ v.value0, v.value1, v.value2, v.value3 ]);
      });
  };
  var streamToStreamType = function (s) {
      if (s instanceof ConstFloat) {
          return LambdaCube_PipelineSchema.Attribute_Float.value;
      };
      if (s instanceof ConstV2F) {
          return LambdaCube_PipelineSchema.Attribute_V2F.value;
      };
      if (s instanceof ConstV3F) {
          return LambdaCube_PipelineSchema.Attribute_V3F.value;
      };
      if (s instanceof ConstV4F) {
          return LambdaCube_PipelineSchema.Attribute_V4F.value;
      };
      if (s instanceof ConstM22F) {
          return LambdaCube_PipelineSchema.Attribute_M22F.value;
      };
      if (s instanceof ConstM33F) {
          return LambdaCube_PipelineSchema.Attribute_M33F.value;
      };
      if (s instanceof ConstM44F) {
          return LambdaCube_PipelineSchema.Attribute_M44F.value;
      };
      if (s instanceof Stream) {
          return s.value0.sType;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Type line 236, column 24 - line 244, column 24: " + [ s.constructor.name ]);
  };
  var sizeOfArrayType = function (v) {
      if (v instanceof ArrWord8) {
          return 1;
      };
      if (v instanceof ArrWord16) {
          return 2;
      };
      if (v instanceof ArrInt8) {
          return 1;
      };
      if (v instanceof ArrInt16) {
          return 2;
      };
      if (v instanceof ArrFloat) {
          return 4;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Type line 54, column 1 - line 55, column 1: " + [ v.constructor.name ]);
  };
  var showPrimitive = new Data_Show.Show(function (v) {
      if (v instanceof TriangleStrip) {
          return "TriangleStrip";
      };
      if (v instanceof TriangleList) {
          return "TriangleList";
      };
      if (v instanceof TriangleFan) {
          return "TriangleFan";
      };
      if (v instanceof LineStrip) {
          return "LineStrip";
      };
      if (v instanceof LineList) {
          return "LineList";
      };
      if (v instanceof LineLoop) {
          return "LineLoop";
      };
      if (v instanceof PointList) {
          return "PointList";
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Type line 96, column 3 - line 97, column 3: " + [ v.constructor.name ]);
  });
  var numStorable = new NumberStorable(function (a) {
      return [ a ];
  });
  var intStorable = new NumberStorable(function (a) {
      return [ Data_Int.toNumber(a) ];
  });
  var intIntStorable = new IntStorable(function (a) {
      return [ a ];
  });
  var boolIntStorable = new IntStorable(function (a) {
      return [ (function () {
          if (a) {
              return 1;
          };
          return 0;
      })() ];
  });
  var arrStorable = function (dictNumberStorable) {
      return new NumberStorable(function (a) {
          return Data_Array.concatMap(toArray(dictNumberStorable))(a);
      });
  };
  exports["ArrWord8"] = ArrWord8;
  exports["ArrWord16"] = ArrWord16;
  exports["ArrInt8"] = ArrInt8;
  exports["ArrInt16"] = ArrInt16;
  exports["ArrFloat"] = ArrFloat;
  exports["GLSetVertexAttribArray"] = GLSetVertexAttribArray;
  exports["GLDrawArrays"] = GLDrawArrays;
  exports["GLDrawElements"] = GLDrawElements;
  exports["GLSetVertexAttrib"] = GLSetVertexAttrib;
  exports["GLSetUniform"] = GLSetUniform;
  exports["GLBindTexture"] = GLBindTexture;
  exports["UniBool"] = UniBool;
  exports["UniV2B"] = UniV2B;
  exports["UniV3B"] = UniV3B;
  exports["UniV4B"] = UniV4B;
  exports["UniInt"] = UniInt;
  exports["UniV2I"] = UniV2I;
  exports["UniV3I"] = UniV3I;
  exports["UniV4I"] = UniV4I;
  exports["UniFloat"] = UniFloat;
  exports["UniV2F"] = UniV2F;
  exports["UniV3F"] = UniV3F;
  exports["UniV4F"] = UniV4F;
  exports["UniM22F"] = UniM22F;
  exports["UniM33F"] = UniM33F;
  exports["UniM44F"] = UniM44F;
  exports["UniFTexture2D"] = UniFTexture2D;
  exports["InputConnection"] = InputConnection;
  exports["SBool"] = SBool;
  exports["SV2B"] = SV2B;
  exports["SV3B"] = SV3B;
  exports["SV4B"] = SV4B;
  exports["SInt"] = SInt;
  exports["SV2I"] = SV2I;
  exports["SV3I"] = SV3I;
  exports["SV4I"] = SV4I;
  exports["SFloat"] = SFloat;
  exports["SV2F"] = SV2F;
  exports["SV3F"] = SV3F;
  exports["SV4F"] = SV4F;
  exports["SM22F"] = SM22F;
  exports["SM33F"] = SM33F;
  exports["SM44F"] = SM44F;
  exports["SFTexture2D"] = SFTexture2D;
  exports["Array"] = $$Array;
  exports["Generate"] = Generate;
  exports["Reorder"] = Reorder;
  exports["Ordered"] = Ordered;
  exports["TriangleStrip"] = TriangleStrip;
  exports["TriangleList"] = TriangleList;
  exports["TriangleFan"] = TriangleFan;
  exports["LineStrip"] = LineStrip;
  exports["LineList"] = LineList;
  exports["LineLoop"] = LineLoop;
  exports["PointList"] = PointList;
  exports["ConstFloat"] = ConstFloat;
  exports["ConstV2F"] = ConstV2F;
  exports["ConstV3F"] = ConstV3F;
  exports["ConstV4F"] = ConstV4F;
  exports["ConstM22F"] = ConstM22F;
  exports["ConstM33F"] = ConstM33F;
  exports["ConstM44F"] = ConstM44F;
  exports["Stream"] = Stream;
  exports["TextureData"] = TextureData;
  exports["IntStorable"] = IntStorable;
  exports["NumberStorable"] = NumberStorable;
  exports["sizeOfArrayType"] = sizeOfArrayType;
  exports["streamToStreamType"] = streamToStreamType;
  exports["toArray"] = toArray;
  exports["toIntArray"] = toIntArray;
  exports["showPrimitive"] = showPrimitive;
  exports["intStorable"] = intStorable;
  exports["numStorable"] = numStorable;
  exports["v2Storable"] = v2Storable;
  exports["v3Storable"] = v3Storable;
  exports["v4Storable"] = v4Storable;
  exports["arrStorable"] = arrStorable;
  exports["intIntStorable"] = intIntStorable;
  exports["boolIntStorable"] = boolIntStorable;
  exports["v2IntStorable"] = v2IntStorable;
  exports["v3IntStorable"] = v3IntStorable;
  exports["v4IntStorable"] = v4IntStorable;
})(PS["LambdaCube.WebGL.Type"] = PS["LambdaCube.WebGL.Type"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Util

  exports.setFloatArray
    = function setFloatArray(ta) {
        return function(a) {
          return function(){ta.set(a);};
        };
       };

  exports.setIntArray
    = function setIntArray(ta) {
        return function(a) {
          return function(){ta.set(a);};
        };
       };

  exports.newArrayBuffer
    = function newArrayBuffer(s) {
        return function() {return new ArrayBuffer(s);};
       };

  exports.newWord8View
    = function newWord8View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Uint8Array(b,o,l);};
          };
        };
       };

  exports.newWord16View
    = function newWord16View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Uint16Array(b,o,l);};
          };
        };
       };

  exports.newInt8View
    = function newInt8View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Int8Array(b,o,l);};
          };
        };
       };

  exports.newInt16View
    = function newInt16View(b) {
        return function(o) {
          return function(l) {
            return function(){return new Int16Array(b,o,l);};
          };
        };
       };

  exports.newFloatView
    = function newFloatView(b) {
        return function(o) {
          return function(l) {
            return function(){return new Float32Array(b,o,l);};
          };
        };
       };

  exports.setArrayView
    = function setArrayView(av) {
        return function(a) {
          return function(){av.set(a);};
        };
       };

  exports.nullWebGLBuffer = null;

  exports.bufferDataAlloc
    = function bufferDataAlloc(target)
     {return function(size)
      {return function(usage)
       {return function()
        {gl.bufferData(target,size,usage);};};};};

  exports.bufferSubDataArrayBuffer
    = function bufferSubDataArrayBuffer(target)
     {return function(offset)
      {return function(data)
       {return function()
        {gl.bufferSubData(target,offset,data);};};};};

  exports.texImage2DNull_
    = function texImage2DNull_(target)
     {return function(level)
      {return function(internalformat)
       {return function(width)
        {return function(height)
         {return function(border)
          {return function(format)
           {return function(type)
             {return function()
              {gl.texImage2D(target,level,internalformat,width,height,border,format,type,null);};};};};};};};};};

  exports.nullWebGLTexture = null;

  exports.loadImage_
    = function loadImage_(name)
      {return function(continuation)
       {return function()
        {var i = new Image();
         i.src = name;
         i.onload = continuation (i);
        };};};

  exports.texImage2D__
    = function (target)
      {return function(level)
       {return function(internalformat)
        {return function(format)
         {return function(type)
          {return function(pixels)
           {return function()
            {gl.texImage2D(target,level,internalformat,format,type,pixels);};};};};};};};
})(PS["LambdaCube.WebGL.Util"] = PS["LambdaCube.WebGL.Util"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["LambdaCube.WebGL.Util"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_TypedArray = PS["Data.TypedArray"];
  var Data_Unit = PS["Data.Unit"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var LambdaCube_WebGL_Type = PS["LambdaCube.WebGL.Type"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var unlines = function (l) {
      var v = Data_Array.uncons(l);
      if (v instanceof Data_Maybe.Nothing) {
          return "";
      };
      if (v instanceof Data_Maybe.Just) {
          var $17 = Data_Array["null"](v.value0.tail);
          if ($17) {
              return v.value0.head;
          };
          return v.value0.head + ("\x0a" + unlines(v.value0.tail));
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 106, column 13 - line 108, column 78: " + [ v.constructor.name ]);
  };
  var toStreamType = function (a) {
      if (a instanceof LambdaCube_IR.Float) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_Float.value);
      };
      if (a instanceof LambdaCube_IR.V2F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_V2F.value);
      };
      if (a instanceof LambdaCube_IR.V3F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_V3F.value);
      };
      if (a instanceof LambdaCube_IR.V4F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_V4F.value);
      };
      if (a instanceof LambdaCube_IR.M22F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_M22F.value);
      };
      if (a instanceof LambdaCube_IR.M33F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_M33F.value);
      };
      if (a instanceof LambdaCube_IR.M44F) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(LambdaCube_PipelineSchema.Attribute_M44F.value);
      };
      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid Stream Type"));
  };
  var textureDataTypeToGLType = function (v) {
      return function (a) {
          if (v instanceof LambdaCube_IR.Color) {
              if (a instanceof LambdaCube_IR.FloatT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof LambdaCube_IR.IntT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof LambdaCube_IR.WordT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          if (v instanceof LambdaCube_IR.Depth) {
              if (a instanceof LambdaCube_IR.FloatT && a.value0 instanceof LambdaCube_IR.Red) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              if (a instanceof LambdaCube_IR.WordT && a.value0 instanceof LambdaCube_IR.Red) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          if (v instanceof LambdaCube_IR.Stencil) {
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 233, column 1 - line 237, column 103: " + [ v.constructor.name, a.constructor.name ]);
      };
  };
  var textureDataTypeToGLArityType = function (v) {
      return function (a) {
          if (v instanceof LambdaCube_IR.Color) {
              if (a instanceof LambdaCube_IR.FloatT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof LambdaCube_IR.IntT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              if (a instanceof LambdaCube_IR.WordT && a.value0 instanceof LambdaCube_IR.RGBA) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._RGBA);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          if (v instanceof LambdaCube_IR.Depth) {
              if (a instanceof LambdaCube_IR.FloatT && a.value0 instanceof LambdaCube_IR.Red) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              if (a instanceof LambdaCube_IR.WordT && a.value0 instanceof LambdaCube_IR.Red) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._DEPTH_COMPONENT);
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          if (v instanceof LambdaCube_IR.Stencil) {
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("FIXME: This texture format is not yet supported" + Data_Show.show(LambdaCube_IR.showTextureDataType)(a)));
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 246, column 1 - line 250, column 104: " + [ v.constructor.name, a.constructor.name ]);
      };
  };
  var setUniform = function (i) {
      return function (uni) {
          if (uni instanceof LambdaCube_WebGL_Type.UniBool) {
              return Graphics_WebGLRaw.uniform1iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV2B) {
              return Graphics_WebGLRaw.uniform2iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV3B) {
              return Graphics_WebGLRaw.uniform3iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV4B) {
              return Graphics_WebGLRaw.uniform4iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniInt) {
              return Graphics_WebGLRaw.uniform1iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV2I) {
              return Graphics_WebGLRaw.uniform2iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV3I) {
              return Graphics_WebGLRaw.uniform3iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV4I) {
              return Graphics_WebGLRaw.uniform4iv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniFloat) {
              return Graphics_WebGLRaw.uniform1fv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV2F) {
              return Graphics_WebGLRaw.uniform2fv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV3F) {
              return Graphics_WebGLRaw.uniform3fv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniV4F) {
              return Graphics_WebGLRaw.uniform4fv_(i)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniM22F) {
              return Graphics_WebGLRaw.uniformMatrix2fv_(i)(false)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniM33F) {
              return Graphics_WebGLRaw.uniformMatrix3fv_(i)(false)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniM44F) {
              return Graphics_WebGLRaw.uniformMatrix4fv_(i)(false)(uni.value0);
          };
          if (uni instanceof LambdaCube_WebGL_Type.UniFTexture2D) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 151, column 20 - line 167, column 31: " + [ uni.constructor.name ]);
      };
  };
  var setAV4F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib4f_(i)(v.value0)(v.value1)(v.value2)(v.value3);
      };
  };
  var setAV3F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib3f_(i)(v.value0)(v.value1)(v.value2);
      };
  };
  var setAV2F = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib2f_(i)(v.value0)(v.value1);
      };
  };
  var setAFloat = function (i) {
      return function (v) {
          return Graphics_WebGLRaw.vertexAttrib1f_(i)(v);
      };
  };
  var setVertexAttrib = function (i) {
      return function (val) {
          if (val instanceof LambdaCube_WebGL_Type.ConstFloat) {
              return setAFloat(i)(val.value0);
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstV2F) {
              return setAV2F(i)(val.value0);
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstV3F) {
              return setAV3F(i)(val.value0);
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstV4F) {
              return setAV4F(i)(val.value0);
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstM22F) {
              return function __do() {
                  setAV2F(i)(val.value0.value0)();
                  return setAV2F(i + 1 | 0)(val.value0.value1)();
              };
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstM33F) {
              return function __do() {
                  setAV3F(i)(val.value0.value0)();
                  setAV3F(i + 1 | 0)(val.value0.value1)();
                  return setAV3F(i + 2 | 0)(val.value0.value2)();
              };
          };
          if (val instanceof LambdaCube_WebGL_Type.ConstM44F) {
              return function __do() {
                  setAV4F(i)(val.value0.value0)();
                  setAV4F(i + 1 | 0)(val.value0.value1)();
                  setAV4F(i + 2 | 0)(val.value0.value2)();
                  return setAV4F(i + 3 | 0)(val.value0.value3)();
              };
          };
          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (setVertexAttrib)!"));
      };
  };
  var primitiveToGLType = function (p) {
      if (p instanceof LambdaCube_WebGL_Type.TriangleStrip) {
          return Graphics_WebGLRaw._TRIANGLE_STRIP;
      };
      if (p instanceof LambdaCube_WebGL_Type.TriangleList) {
          return Graphics_WebGLRaw._TRIANGLES;
      };
      if (p instanceof LambdaCube_WebGL_Type.TriangleFan) {
          return Graphics_WebGLRaw._TRIANGLE_FAN;
      };
      if (p instanceof LambdaCube_WebGL_Type.LineStrip) {
          return Graphics_WebGLRaw._LINE_STRIP;
      };
      if (p instanceof LambdaCube_WebGL_Type.LineLoop) {
          return Graphics_WebGLRaw._LINE_LOOP;
      };
      if (p instanceof LambdaCube_WebGL_Type.LineList) {
          return Graphics_WebGLRaw._LINES;
      };
      if (p instanceof LambdaCube_WebGL_Type.PointList) {
          return Graphics_WebGLRaw._POINTS;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 171, column 23 - line 178, column 30: " + [ p.constructor.name ]);
  };
  var primitiveToFetchPrimitive = function (prim) {
      if (prim instanceof LambdaCube_WebGL_Type.TriangleStrip) {
          return LambdaCube_IR.Triangles.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.TriangleList) {
          return LambdaCube_IR.Triangles.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.TriangleFan) {
          return LambdaCube_IR.Triangles.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.LineStrip) {
          return LambdaCube_IR.Lines.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.LineLoop) {
          return LambdaCube_IR.Lines.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.LineList) {
          return LambdaCube_IR.Lines.value;
      };
      if (prim instanceof LambdaCube_WebGL_Type.PointList) {
          return LambdaCube_IR.Points.value;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 96, column 34 - line 103, column 36: " + [ prim.constructor.name ]);
  };
  var mkUniformSetter = function (v) {
      if (v instanceof LambdaCube_IR.Bool) {
          var r = Data_TypedArray.asInt32Array([ 0 ]);
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniBool(r), LambdaCube_WebGL_Type.SBool.create(function ($127) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.boolIntStorable)($127));
          })));
      };
      if (v instanceof LambdaCube_IR.V2B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(2)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV2B(r), LambdaCube_WebGL_Type.SV2B.create(function ($128) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v2IntStorable(LambdaCube_WebGL_Type.boolIntStorable))($128));
          })));
      };
      if (v instanceof LambdaCube_IR.V3B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(3)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV3B(r), LambdaCube_WebGL_Type.SV3B.create(function ($129) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v3IntStorable(LambdaCube_WebGL_Type.boolIntStorable))($129));
          })));
      };
      if (v instanceof LambdaCube_IR.V4B) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(4)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV4B(r), LambdaCube_WebGL_Type.SV4B.create(function ($130) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v4IntStorable(LambdaCube_WebGL_Type.boolIntStorable))($130));
          })));
      };
      if (v instanceof LambdaCube_IR.Int) {
          var r = Data_TypedArray.asInt32Array([ 0 ]);
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniInt(r), LambdaCube_WebGL_Type.SInt.create(function ($131) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.intIntStorable)($131));
          })));
      };
      if (v instanceof LambdaCube_IR.V2I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(2)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV2I(r), LambdaCube_WebGL_Type.SV2I.create(function ($132) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v2IntStorable(LambdaCube_WebGL_Type.intIntStorable))($132));
          })));
      };
      if (v instanceof LambdaCube_IR.V3I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(3)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV3I(r), LambdaCube_WebGL_Type.SV3I.create(function ($133) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v3IntStorable(LambdaCube_WebGL_Type.intIntStorable))($133));
          })));
      };
      if (v instanceof LambdaCube_IR.V4I) {
          var r = Data_TypedArray.asInt32Array(Data_Array.replicate(4)(0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV4I(r), LambdaCube_WebGL_Type.SV4I.create(function ($134) {
              return $foreign.setIntArray(r)(LambdaCube_WebGL_Type.toIntArray(LambdaCube_WebGL_Type.v4IntStorable(LambdaCube_WebGL_Type.intIntStorable))($134));
          })));
      };
      if (v instanceof LambdaCube_IR.Float) {
          var r = Data_TypedArray.asFloat32Array([ 0.0 ]);
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniFloat(r), LambdaCube_WebGL_Type.SFloat.create(function ($135) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.numStorable)($135));
          })));
      };
      if (v instanceof LambdaCube_IR.V2F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(2)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV2F(r), LambdaCube_WebGL_Type.SV2F.create(function ($136) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.numStorable))($136));
          })));
      };
      if (v instanceof LambdaCube_IR.V3F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(3)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV3F(r), LambdaCube_WebGL_Type.SV3F.create(function ($137) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.numStorable))($137));
          })));
      };
      if (v instanceof LambdaCube_IR.V4F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(4)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniV4F(r), LambdaCube_WebGL_Type.SV4F.create(function ($138) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.numStorable))($138));
          })));
      };
      if (v instanceof LambdaCube_IR.M22F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(4)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniM22F(r), LambdaCube_WebGL_Type.SM22F.create(function ($139) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.numStorable)))($139));
          })));
      };
      if (v instanceof LambdaCube_IR.M33F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(9)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniM33F(r), LambdaCube_WebGL_Type.SM33F.create(function ($140) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.numStorable)))($140));
          })));
      };
      if (v instanceof LambdaCube_IR.M44F) {
          var r = Data_TypedArray.asFloat32Array(Data_Array.replicate(16)(0.0));
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniM44F(r), LambdaCube_WebGL_Type.SM44F.create(function ($141) {
              return $foreign.setFloatArray(r)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.numStorable)))($141));
          })));
      };
      if (v instanceof LambdaCube_IR.FTexture2D) {
          return function __do() {
              var v1 = Control_Monad_Eff_Ref.newRef(new LambdaCube_WebGL_Type.TextureData($foreign.nullWebGLTexture))();
              return new Data_Tuple.Tuple(new LambdaCube_WebGL_Type.UniFTexture2D(v1), LambdaCube_WebGL_Type.SFTexture2D.create(Control_Monad_Eff_Ref.writeRef(v1)));
          };
      };
      return Partial_Unsafe.unsafeCrashWith("mkUniformSetter");
  };
  var filterToGLType = function (a) {
      if (a instanceof LambdaCube_IR.Nearest) {
          return Graphics_WebGLRaw._NEAREST;
      };
      if (a instanceof LambdaCube_IR.Linear) {
          return Graphics_WebGLRaw._LINEAR;
      };
      if (a instanceof LambdaCube_IR.NearestMipmapNearest) {
          return Graphics_WebGLRaw._NEAREST_MIPMAP_NEAREST;
      };
      if (a instanceof LambdaCube_IR.NearestMipmapLinear) {
          return Graphics_WebGLRaw._NEAREST_MIPMAP_LINEAR;
      };
      if (a instanceof LambdaCube_IR.LinearMipmapNearest) {
          return Graphics_WebGLRaw._LINEAR_MIPMAP_NEAREST;
      };
      if (a instanceof LambdaCube_IR.LinearMipmapLinear) {
          return Graphics_WebGLRaw._LINEAR_MIPMAP_LINEAR;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 289, column 20 - line 295, column 56: " + [ a.constructor.name ]);
  };
  var edgeModeToGLType = function (a) {
      if (a instanceof LambdaCube_IR.Repeat) {
          return Graphics_WebGLRaw._REPEAT;
      };
      if (a instanceof LambdaCube_IR.MirroredRepeat) {
          return Graphics_WebGLRaw._MIRRORED_REPEAT;
      };
      if (a instanceof LambdaCube_IR.ClampToEdge) {
          return Graphics_WebGLRaw._CLAMP_TO_EDGE;
      };
      return Partial_Unsafe.unsafeCrashWith("edgeModeToGLType");
  };
  var setTextureSamplerParameters = function (t) {
      return function (v) {
          return function __do() {
              Graphics_WebGLRaw.texParameteri_(t)(Graphics_WebGLRaw._TEXTURE_WRAP_S)(edgeModeToGLType(v.value0.samplerWrapS))();
              (function () {
                  if (v.value0.samplerWrapT instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  };
                  if (v.value0.samplerWrapT instanceof Data_Maybe.Just) {
                      return Graphics_WebGLRaw.texParameteri_(t)(Graphics_WebGLRaw._TEXTURE_WRAP_T)(edgeModeToGLType(v.value0.samplerWrapT.value0));
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 282, column 5 - line 284, column 79: " + [ v.value0.samplerWrapT.constructor.name ]);
              })()();
              Graphics_WebGLRaw.texParameteri_(t)(Graphics_WebGLRaw._TEXTURE_MIN_FILTER)(filterToGLType(v.value0.samplerMinFilter))();
              return Graphics_WebGLRaw.texParameteri_(t)(Graphics_WebGLRaw._TEXTURE_MAG_FILTER)(filterToGLType(v.value0.samplerMagFilter))();
          };
      };
  };
  var compileTexture = function (v) {
      return function __do() {
          var v1 = Graphics_WebGLRaw.createTexture_();
          var txSetup = function (txTarget) {
              return function (dTy) {
                  return function __do() {
                      var v2 = textureDataTypeToGLType(v.value0.textureSemantic)(dTy)();
                      var v3 = textureDataTypeToGLArityType(v.value0.textureSemantic)(dTy)();
                      Graphics_WebGLRaw.bindTexture_(txTarget)(v1)();
                      setTextureSamplerParameters(txTarget)(v.value0.textureSampler)();
                      return new Data_Tuple.Tuple(v2, v3);
                  };
              };
          };
          var mipSize = function (v2) {
              return function (x) {
                  if (v2 === 0) {
                      return [ x ];
                  };
                  return Data_Array.cons(x)(mipSize(v2 - 1 | 0)(x / 2 | 0));
              };
          };
          var mipS = mipSize(v.value0.textureMaxLevel - v.value0.textureBaseLevel | 0);
          var levels = Data_Array.range(v.value0.textureBaseLevel)(v.value0.textureMaxLevel);
          var div = function (a) {
              return function (b) {
                  return $$Math.floor(a / b);
              };
          };
          var act = (function () {
              if (v.value0.textureType instanceof LambdaCube_IR.Texture2D && v.value0.textureType.value1 === 1) {
                  if (v.value0.textureSize instanceof LambdaCube_IR.VV2U) {
                      return function __do() {
                          var v2 = txSetup(Graphics_WebGLRaw._TEXTURE_2D)(v.value0.textureType.value0)();
                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Array.zip(levels)(Data_Array.zip(mipS(v.value0.textureSize.value0.value0))(mipS(v.value0.textureSize.value0.value1))))(function (v3) {
                              return function __do() {
                                  $foreign.texImage2DNull_(Graphics_WebGLRaw._TEXTURE_2D)(v3.value0)(v2.value0)(v3.value1.value0)(v3.value1.value1)(0)(v2.value1)((function () {
                                      var $110 = v2.value1 === Graphics_WebGLRaw._DEPTH_COMPONENT;
                                      if ($110) {
                                          return Graphics_WebGLRaw._UNSIGNED_SHORT;
                                      };
                                      return Graphics_WebGLRaw._UNSIGNED_BYTE;
                                  })())();
                                  return Data_Unit.unit;
                              };
                          })();
                          return {
                              textureObject: v1, 
                              textureTarget: Graphics_WebGLRaw._TEXTURE_2D
                          };
                      };
                  };
                  return Partial_Unsafe.unsafeCrashWith("compileTexture");
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unsupported texture type!"));
          })();
          return act();
      };
  };
  var comparisonFunctionToGLType = function (a) {
      if (a instanceof LambdaCube_IR.Always) {
          return Graphics_WebGLRaw._ALWAYS;
      };
      if (a instanceof LambdaCube_IR.Equal) {
          return Graphics_WebGLRaw._EQUAL;
      };
      if (a instanceof LambdaCube_IR.Gequal) {
          return Graphics_WebGLRaw._GEQUAL;
      };
      if (a instanceof LambdaCube_IR.Greater) {
          return Graphics_WebGLRaw._GREATER;
      };
      if (a instanceof LambdaCube_IR.Lequal) {
          return Graphics_WebGLRaw._LEQUAL;
      };
      if (a instanceof LambdaCube_IR.Less) {
          return Graphics_WebGLRaw._LESS;
      };
      if (a instanceof LambdaCube_IR.Never) {
          return Graphics_WebGLRaw._NEVER;
      };
      if (a instanceof LambdaCube_IR.Notequal) {
          return Graphics_WebGLRaw._NOTEQUAL;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 23, column 32 - line 31, column 32: " + [ a.constructor.name ]);
  };
  var blendingFactorToGLType = function (a) {
      if (a instanceof LambdaCube_IR.ConstantAlpha) {
          return Graphics_WebGLRaw._CONSTANT_ALPHA;
      };
      if (a instanceof LambdaCube_IR.ConstantColor) {
          return Graphics_WebGLRaw._CONSTANT_COLOR;
      };
      if (a instanceof LambdaCube_IR.DstAlpha) {
          return Graphics_WebGLRaw._DST_ALPHA;
      };
      if (a instanceof LambdaCube_IR.DstColor) {
          return Graphics_WebGLRaw._DST_COLOR;
      };
      if (a instanceof LambdaCube_IR.One) {
          return Graphics_WebGLRaw._ONE;
      };
      if (a instanceof LambdaCube_IR.OneMinusConstantAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_ALPHA;
      };
      if (a instanceof LambdaCube_IR.OneMinusConstantColor) {
          return Graphics_WebGLRaw._ONE_MINUS_CONSTANT_COLOR;
      };
      if (a instanceof LambdaCube_IR.OneMinusDstAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_DST_ALPHA;
      };
      if (a instanceof LambdaCube_IR.OneMinusDstColor) {
          return Graphics_WebGLRaw._ONE_MINUS_DST_COLOR;
      };
      if (a instanceof LambdaCube_IR.OneMinusSrcAlpha) {
          return Graphics_WebGLRaw._ONE_MINUS_SRC_ALPHA;
      };
      if (a instanceof LambdaCube_IR.OneMinusSrcColor) {
          return Graphics_WebGLRaw._ONE_MINUS_SRC_COLOR;
      };
      if (a instanceof LambdaCube_IR.SrcAlpha) {
          return Graphics_WebGLRaw._SRC_ALPHA;
      };
      if (a instanceof LambdaCube_IR.SrcAlphaSaturate) {
          return Graphics_WebGLRaw._SRC_ALPHA_SATURATE;
      };
      if (a instanceof LambdaCube_IR.SrcColor) {
          return Graphics_WebGLRaw._SRC_COLOR;
      };
      if (a instanceof LambdaCube_IR.Zero) {
          return Graphics_WebGLRaw._ZERO;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 42, column 28 - line 57, column 40: " + [ a.constructor.name ]);
  };
  var blendEquationToGLType = function (a) {
      if (a instanceof LambdaCube_IR.FuncAdd) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      if (a instanceof LambdaCube_IR.FuncReverseSubtract) {
          return Graphics_WebGLRaw._FUNC_REVERSE_SUBTRACT;
      };
      if (a instanceof LambdaCube_IR.FuncSubtract) {
          return Graphics_WebGLRaw._FUNC_SUBTRACT;
      };
      if (a instanceof LambdaCube_IR.Max) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      if (a instanceof LambdaCube_IR.Min) {
          return Graphics_WebGLRaw._FUNC_ADD;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 34, column 27 - line 39, column 40: " + [ a.constructor.name ]);
  };
  var arrayTypeToGLType = function (a) {
      if (a instanceof LambdaCube_WebGL_Type.ArrWord8) {
          return Graphics_WebGLRaw._UNSIGNED_BYTE;
      };
      if (a instanceof LambdaCube_WebGL_Type.ArrWord16) {
          return Graphics_WebGLRaw._UNSIGNED_SHORT;
      };
      if (a instanceof LambdaCube_WebGL_Type.ArrInt8) {
          return Graphics_WebGLRaw._BYTE;
      };
      if (a instanceof LambdaCube_WebGL_Type.ArrInt16) {
          return Graphics_WebGLRaw._SHORT;
      };
      if (a instanceof LambdaCube_WebGL_Type.ArrFloat) {
          return Graphics_WebGLRaw._FLOAT;
      };
      throw new Error("Failed pattern match at LambdaCube.WebGL.Util line 181, column 23 - line 186, column 27: " + [ a.constructor.name ]);
  };
  exports["arrayTypeToGLType"] = arrayTypeToGLType;
  exports["blendEquationToGLType"] = blendEquationToGLType;
  exports["blendingFactorToGLType"] = blendingFactorToGLType;
  exports["comparisonFunctionToGLType"] = comparisonFunctionToGLType;
  exports["compileTexture"] = compileTexture;
  exports["edgeModeToGLType"] = edgeModeToGLType;
  exports["filterToGLType"] = filterToGLType;
  exports["mkUniformSetter"] = mkUniformSetter;
  exports["primitiveToFetchPrimitive"] = primitiveToFetchPrimitive;
  exports["primitiveToGLType"] = primitiveToGLType;
  exports["setAFloat"] = setAFloat;
  exports["setAV2F"] = setAV2F;
  exports["setAV3F"] = setAV3F;
  exports["setAV4F"] = setAV4F;
  exports["setTextureSamplerParameters"] = setTextureSamplerParameters;
  exports["setUniform"] = setUniform;
  exports["setVertexAttrib"] = setVertexAttrib;
  exports["textureDataTypeToGLArityType"] = textureDataTypeToGLArityType;
  exports["textureDataTypeToGLType"] = textureDataTypeToGLType;
  exports["toStreamType"] = toStreamType;
  exports["unlines"] = unlines;
  exports["bufferDataAlloc"] = $foreign.bufferDataAlloc;
  exports["bufferSubDataArrayBuffer"] = $foreign.bufferSubDataArrayBuffer;
  exports["loadImage_"] = $foreign.loadImage_;
  exports["newArrayBuffer"] = $foreign.newArrayBuffer;
  exports["newFloatView"] = $foreign.newFloatView;
  exports["newInt16View"] = $foreign.newInt16View;
  exports["newInt8View"] = $foreign.newInt8View;
  exports["newWord16View"] = $foreign.newWord16View;
  exports["newWord8View"] = $foreign.newWord8View;
  exports["nullWebGLBuffer"] = $foreign.nullWebGLBuffer;
  exports["setArrayView"] = $foreign.setArrayView;
  exports["texImage2D__"] = $foreign.texImage2D__;
})(PS["LambdaCube.WebGL.Util"] = PS["LambdaCube.WebGL.Util"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var Graphics_WebGLTexture = PS["Graphics.WebGLTexture"];
  var LambdaCube_WebGL_Type = PS["LambdaCube.WebGL.Type"];
  var LambdaCube_WebGL_Util = PS["LambdaCube.WebGL.Util"];
  var Prelude = PS["Prelude"];        
  var uploadTexture2DToGPU = function (name) {
      return function (action) {
          return function __do() {
              var v = Graphics_WebGLRaw.createTexture_();
              return LambdaCube_WebGL_Util.loadImage_(name)(function (image) {
                  return function __do() {
                      Graphics_WebGLRaw.bindTexture_(Graphics_WebGLRaw._TEXTURE_2D)(v)();
                      Graphics_WebGLRaw.texParameteri_(Graphics_WebGLRaw._TEXTURE_2D)(Graphics_WebGLRaw._TEXTURE_MAG_FILTER)(Graphics_WebGLRaw._LINEAR)();
                      Graphics_WebGLRaw.texParameteri_(Graphics_WebGLRaw._TEXTURE_2D)(Graphics_WebGLRaw._TEXTURE_MIN_FILTER)(Graphics_WebGLRaw._LINEAR)();
                      Graphics_WebGLRaw.pixelStorei_(Graphics_WebGLRaw._UNPACK_FLIP_Y_WEBGL)(1)();
                      Graphics_WebGLRaw.pixelStorei_(Graphics_WebGLRaw._UNPACK_PREMULTIPLY_ALPHA_WEBGL)(0)();
                      LambdaCube_WebGL_Util.texImage2D__(Graphics_WebGLRaw._TEXTURE_2D)(0)(Graphics_WebGLRaw._RGBA)(Graphics_WebGLRaw._RGBA)(Graphics_WebGLRaw._UNSIGNED_BYTE)(image)();
                      Graphics_WebGLTexture.unbindTexture(Graphics_WebGLTexture.TEXTURE_2D.value)();
                      return action(new LambdaCube_WebGL_Type.TextureData(v))();
                  };
              })();
          };
      };
  };
  var compileBuffer = function (arrs) {
      var offsets = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ 0 ])(Data_Traversable.scanl(Data_Traversable.traversableArray)(function (s) {
          return function (v) {
              return s + (LambdaCube_WebGL_Type.sizeOfArrayType(v.value0) * Data_Array.length(v.value1) | 0) | 0;
          };
      })(0)(arrs));
      var size = (function () {
          var v = Data_Array.last(offsets);
          if (v instanceof Data_Maybe.Just) {
              return v.value0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return 0;
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Data line 20, column 16 - line 23, column 5: " + [ v.constructor.name ]);
      })();
      return function __do() {
          var v = LambdaCube_WebGL_Util.newArrayBuffer(size)();
          var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(Data_Array.zip(arrs)(Data_Array.take(Data_Array.length(arrs))(offsets)))(function (v1) {
              var newView = (function () {
                  if (v1.value0.value0 instanceof LambdaCube_WebGL_Type.ArrWord8) {
                      return LambdaCube_WebGL_Util.newWord8View;
                  };
                  if (v1.value0.value0 instanceof LambdaCube_WebGL_Type.ArrWord16) {
                      return LambdaCube_WebGL_Util.newWord16View;
                  };
                  if (v1.value0.value0 instanceof LambdaCube_WebGL_Type.ArrInt8) {
                      return LambdaCube_WebGL_Util.newInt8View;
                  };
                  if (v1.value0.value0 instanceof LambdaCube_WebGL_Type.ArrInt16) {
                      return LambdaCube_WebGL_Util.newInt16View;
                  };
                  if (v1.value0.value0 instanceof LambdaCube_WebGL_Type.ArrFloat) {
                      return LambdaCube_WebGL_Util.newFloatView;
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Data line 27, column 21 - line 32, column 38: " + [ v1.value0.value0.constructor.name ]);
              })();
              var len = Data_Array.length(v1.value0.value1);
              var bytes = len * LambdaCube_WebGL_Type.sizeOfArrayType(v1.value0.value0) | 0;
              return function __do() {
                  var v2 = newView(v)(v1.value1)(len)();
                  LambdaCube_WebGL_Util.setArrayView(v2)(v1.value0.value1)();
                  return {
                      arrType: v1.value0.value0, 
                      arrLength: len, 
                      arrOffset: v1.value1, 
                      arrSize: bytes, 
                      arrView: v2
                  };
              };
          })();
          var v2 = Graphics_WebGLRaw.createBuffer_();
          Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER)(v2)();
          LambdaCube_WebGL_Util.bufferDataAlloc(Graphics_WebGLRaw._ARRAY_BUFFER)(size)(Graphics_WebGLRaw._STATIC_DRAW)();
          LambdaCube_WebGL_Util.bufferSubDataArrayBuffer(Graphics_WebGLRaw._ARRAY_BUFFER)(0)(v)();
          Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER)(LambdaCube_WebGL_Util.nullWebGLBuffer)();
          return {
              arrays: v1, 
              glBuffer: v2, 
              buffer: v
          };
      };
  };
  exports["compileBuffer"] = compileBuffer;
  exports["uploadTexture2DToGPU"] = uploadTexture2DToGPU;
})(PS["LambdaCube.WebGL.Data"] = PS["LambdaCube.WebGL.Data"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Array = PS["Data.Array"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_Unsafe = PS["Data.StrMap.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var LambdaCube_WebGL_Type = PS["LambdaCube.WebGL.Type"];
  var LambdaCube_WebGL_Util = PS["LambdaCube.WebGL.Util"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var sortSlotObjects = function (p) {
      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.slotVector)(function (slotRef) {
          return function __do() {
              var v = Control_Monad_Eff_Ref.readRef(slotRef)();
              var cmpFun = function (v1) {
                  return function (v2) {
                      return Data_Ord.compare(Data_Ord.ordInt)(v1.value0)(v2.value0);
                  };
              };
              var doSort = function (objs) {
                  return Control_Monad_Eff_Ref.writeRef(slotRef)((function () {
                      var $80 = {};
                      for (var $81 in v) {
                          if ({}.hasOwnProperty.call(v, $81)) {
                              $80[$81] = v[$81];
                          };
                      };
                      $80.sortedObjects = Data_Array.sortBy(cmpFun)(objs);
                      $80.orderJob = LambdaCube_WebGL_Type.Ordered.value;
                      return $80;
                  })());
              };
              if (v.orderJob instanceof LambdaCube_WebGL_Type.Ordered) {
                  return Data_Unit.unit;
              };
              if (v.orderJob instanceof LambdaCube_WebGL_Type.Generate) {
                  var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List_Types.traversableList)(Data_Map.values(v.objectMap))(function (obj) {
                      return function __do() {
                          var v1 = Control_Monad_Eff_Ref.readRef(obj.order)();
                          return new Data_Tuple.Tuple(v1, obj);
                      };
                  })();
                  return doSort(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(v1))();
              };
              if (v.orderJob instanceof LambdaCube_WebGL_Type.Reorder) {
                  var v1 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v.sortedObjects)(function (v1) {
                      return function __do() {
                          var v2 = Control_Monad_Eff_Ref.readRef(v1.value1.order)();
                          return new Data_Tuple.Tuple(v2, v1.value1);
                      };
                  })();
                  return doSort(v1)();
              };
              throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 153, column 5 - line 164, column 24: " + [ v.orderJob.constructor.name ]);
          };
      });
  };
  var setScreenSize = function (p) {
      return function (s) {
          return Control_Monad_Eff_Ref.writeRef(p.screenSize)(s);
      };
  };
  var nullSetter = function (n) {
      return function (t) {
          return function (v) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          };
      };
  };
  var uniformFTexture2D = function (n) {
      return function (is) {
          var v = Data_StrMap.lookup(n)(is);
          if (v instanceof Data_Maybe.Just && v.value0 instanceof LambdaCube_WebGL_Type.SFTexture2D) {
              return v.value0.value0;
          };
          return nullSetter(n)("FTexture2D");
      };
  };
  var uniformFloat = function (n) {
      return function (is) {
          var v = Data_StrMap.lookup(n)(is);
          if (v instanceof Data_Maybe.Just && v.value0 instanceof LambdaCube_WebGL_Type.SFloat) {
              return v.value0.value0;
          };
          return nullSetter(n)("Float");
      };
  };
  var uniformV2F = function (n) {
      return function (is) {
          var v = Data_StrMap.lookup(n)(is);
          if (v instanceof Data_Maybe.Just && v.value0 instanceof LambdaCube_WebGL_Type.SV2F) {
              return v.value0.value0;
          };
          return nullSetter(n)("V2F");
      };
  };
  var mkUniform = function (l) {
      return function __do() {
          var v = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(l)(function (v) {
              return function __do() {
                  var v1 = LambdaCube_WebGL_Util.mkUniformSetter(v.value1)();
                  return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, v1.value0), new Data_Tuple.Tuple(v.value0, v1.value1));
              };
          })();
          var fun = function (v1) {
              return new Data_Tuple.Tuple(Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(v1.value1), Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(v1.value0));
          };
          return fun(Data_Array.unzip(v));
      };
  };
  var mkWebGLPipelineInput = function (v) {
      var len = Data_StrMap.size(v.value0.objectArrays);
      var sm = Data_StrMap.fromFoldable(Data_List_Types.foldableList)(Data_List.zip(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_StrMap.keys(v.value0.objectArrays)))(Data_List.range(0)(len)));
      return function __do() {
          var v1 = mkUniform(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0.uniforms))();
          var v2 = Data_Unfoldable.replicateA(Control_Monad_Eff.applicativeEff)(Data_Unfoldable.unfoldableArray)(Data_Traversable.traversableArray)(len)(Control_Monad_Eff_Ref.newRef({
              objectMap: Data_Map.empty, 
              sortedObjects: [  ], 
              orderJob: LambdaCube_WebGL_Type.Ordered.value
          }))();
          var v3 = Control_Monad_Eff_Ref.newRef(0)();
          var v4 = Control_Monad_Eff_Ref.newRef(new LambdaCube_LinearBase.V2(0, 0))();
          var v5 = Control_Monad_Eff_Ref.newRef([ Data_Maybe.Nothing.value ])();
          return {
              schema: new LambdaCube_PipelineSchema.PipelineSchema(v.value0), 
              slotMap: sm, 
              slotVector: v2, 
              objSeed: v3, 
              uniformSetter: v1.value0, 
              uniformSetup: v1.value1, 
              screenSize: v4, 
              pipelines: v5
          };
      };
  };
  var createObjectCommands = function (texUnitMap) {
      return function (topUnis) {
          return function (obj) {
              return function (prg) {
                  var objUniCmds = (function () {
                      var uniMap = Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(prg.inputUniforms);
                      var uniCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(uniMap)(function (v) {
                          return LambdaCube_WebGL_Type.GLSetUniform.create(v.value1)((function () {
                              var v1 = Data_StrMap.lookup(v.value0)(obj.uniSetup);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Data_StrMap_Unsafe.unsafeIndex(topUnis)(v.value0);
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  return v1.value0;
                              };
                              throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 274, column 70 - line 276, column 23: " + [ v1.constructor.name ]);
                          })());
                      });
                      var topUni = function (n) {
                          return Data_StrMap_Unsafe.unsafeIndex(topUnis)(n);
                      };
                      var texCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(prg.inputTextureUniforms)(function (n) {
                          var u = (function () {
                              var v = Data_StrMap.lookup(n)(obj.uniSetup);
                              if (v instanceof Data_Maybe.Nothing) {
                                  return topUni(n);
                              };
                              if (v instanceof Data_Maybe.Just) {
                                  return v.value0;
                              };
                              throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 278, column 19 - line 280, column 32: " + [ v.constructor.name ]);
                          })();
                          var texUnit = Data_StrMap_Unsafe.unsafeIndex(texUnitMap)(n);
                          return new LambdaCube_WebGL_Type.GLBindTexture(Graphics_WebGLRaw._TEXTURE_2D, texUnit, u);
                      });
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(uniCmds)(texCmds);
                  })();
                  var objStreamCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(Data_StrMap.values(prg.inputStreams))(function (is) {
                      var x = Data_StrMap_Unsafe.unsafeIndex(obj.attributes)(is.slotAttribute);
                      if (x instanceof LambdaCube_WebGL_Type.Stream) {
                          var glType = LambdaCube_WebGL_Util.arrayTypeToGLType(x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrType);
                          var ptr = function (compCnt) {
                              return x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrOffset + ((x.value0.start * compCnt | 0) * LambdaCube_WebGL_Type.sizeOfArrayType(x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrType) | 0) | 0;
                          };
                          var setFloatAttrib = function (n) {
                              return new LambdaCube_WebGL_Type.GLSetVertexAttribArray(is.location, x.value0.buffer.glBuffer, n, glType, ptr(n));
                          };
                          return setFloatAttrib((function () {
                              var __unused = function (dictPartial1) {
                                  return function ($dollar41) {
                                      return $dollar41;
                                  };
                              };
                              return __unused()((function () {
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_Float) {
                                      return 1;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V2F) {
                                      return 2;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V3F) {
                                      return 3;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V4F) {
                                      return 4;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M22F) {
                                      return 4;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M33F) {
                                      return 9;
                                  };
                                  if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M44F) {
                                      return 16;
                                  };
                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 295, column 33 - line 303, column 13: " + [ x.value0.sType.constructor.name ]);
                              })());
                          })());
                      };
                      return new LambdaCube_WebGL_Type.GLSetVertexAttrib(is.location, x);
                  });
                  var objDrawCmd = (function (dictPartial) {
                      var streamLen = function (a) {
                          if (a instanceof LambdaCube_WebGL_Type.Stream) {
                              return [ a.value0.length ];
                          };
                          return [  ];
                      };
                      var prim = LambdaCube_WebGL_Util.primitiveToGLType(obj.primitive);
                      var count = (Data_Array.concatMap(streamLen)(Data_StrMap.values(obj.attributes)))[0];
                      if (obj.indices instanceof Data_Maybe.Nothing) {
                          return new LambdaCube_WebGL_Type.GLDrawArrays(prim, 0, count);
                      };
                      if (obj.indices instanceof Data_Maybe.Just) {
                          var idxType = LambdaCube_WebGL_Util.arrayTypeToGLType(obj["indices"]["value0"]["buffer"]["arrays"][obj.indices.value0.arrIdx].arrType);
                          var ptr = obj["indices"]["value0"]["buffer"]["arrays"][obj.indices.value0.arrIdx].arrOffset + (obj.indices.value0.start * LambdaCube_WebGL_Type.sizeOfArrayType(obj["indices"]["value0"]["buffer"]["arrays"][obj.indices.value0.arrIdx].arrType) | 0) | 0;
                          return new LambdaCube_WebGL_Type.GLDrawElements(prim, obj.indices.value0.length, idxType, obj.indices.value0.buffer.glBuffer, ptr);
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 260, column 10 - line 266, column 74: " + [ obj.indices.constructor.name ]);
                  })();
                  return Data_Array.concat([ objUniCmds, objStreamCmds, [ objDrawCmd ] ]);
              };
          };
      };
  };
  var addObject = function (input) {
      return function (slotName) {
          return function (prim) {
              return function (indices) {
                  return function (attribs) {
                      return function (uniformNames) {
                          return function __do() {
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(uniformNames)(function (n) {
                                  var v1 = Data_StrMap.lookup(n)(input.schema.value0.uniforms);
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unknown uniform: " + Data_Show.show(Data_Show.showString)(n)));
                                  };
                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                              })();
                              (function () {
                                  var v1 = Data_StrMap.lookup(slotName)(input.schema.value0.objectArrays);
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unknown objectArray: " + slotName));
                                  };
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Eq.notEq(LambdaCube_IR.eqFetchPrimitive)(v1.value0.value0.primitive)(LambdaCube_WebGL_Util.primitiveToFetchPrimitive(prim)))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Primitive mismatch for slot (" + (Data_Show.show(Data_Show.showString)(slotName) + (") expected " + (Data_Show.show(LambdaCube_IR.showFetchPrimitive)(v1.value0.value0.primitive) + (" but got " + Data_Show.show(LambdaCube_WebGL_Type.showPrimitive)(prim))))))))();
                                          var sType = Data_Functor.map(Data_StrMap.functorStrMap)(LambdaCube_WebGL_Type.streamToStreamType)(attribs);
                                          return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Eq.notEq(Data_StrMap.eqStrMap(LambdaCube_PipelineSchema.eqStreamType))(sType)(v1.value0.value0.attributes))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(LambdaCube_WebGL_Util.unlines([ "Attribute stream mismatch for slot (" + (Data_Show.show(Data_Show.showString)(slotName) + ") expected "), Data_Show.show(Data_StrMap.showStrMap(LambdaCube_PipelineSchema.showStreamType))(v1.value0.value0.attributes), " but got ", Data_Show.show(Data_StrMap.showStrMap(LambdaCube_PipelineSchema.showStreamType))(sType) ]))))();
                                      };
                                  };
                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 70, column 5 - line 81, column 18: " + [ v1.constructor.name ]);
                              })()();
                              var v1 = (function () {
                                  var v1 = Data_StrMap.lookup(slotName)(input.slotMap);
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (slot index)"));
                                  };
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v1.value0);
                                  };
                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 83, column 16 - line 85, column 24: " + [ v1.constructor.name ]);
                              })()();
                              var v2 = Control_Monad_Eff_Ref.newRef(0)();
                              var v3 = Control_Monad_Eff_Ref.newRef(true)();
                              var v4 = Control_Monad_Eff_Ref.readRef(input.objSeed)();
                              Control_Monad_Eff_Ref.modifyRef(input.objSeed)(function (x) {
                                  return 1 + x | 0;
                              })();
                              var v5 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(mkUniform)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(uniformNames)(function (n) {
                                  var v5 = Data_StrMap.lookup(n)(input.schema.value0.uniforms);
                                  if (v5 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (uniform setter not found)"));
                                  };
                                  if (v5 instanceof Data_Maybe.Just) {
                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(n, v5.value0));
                                  };
                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 90, column 67 - line 92, column 33: " + [ v5.constructor.name ]);
                              }))();
                              var v6 = Control_Monad_Eff_Ref.newRef([ [  ] ])();
                              var obj = {
                                  slot: v1, 
                                  primitive: prim, 
                                  indices: indices, 
                                  attributes: attribs, 
                                  uniSetter: v5.value0, 
                                  uniSetup: v5.value1, 
                                  order: v2, 
                                  enabled: v3, 
                                  id: v4, 
                                  commands: v6
                              };
                              Control_Monad_Eff_Ref.modifyRef(input["slotVector"][v1])(function (s) {
                                  return {
                                      objectMap: Data_Map.insert(Data_Ord.ordInt)(v4)(obj)(s.objectMap), 
                                      sortedObjects: [  ], 
                                      orderJob: LambdaCube_WebGL_Type.Generate.value
                                  };
                              })();
                              var v7 = Control_Monad_Eff_Ref.readRef(input.pipelines)();
                              var v8 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v7)(function (mp) {
                                  if (mp instanceof Data_Maybe.Nothing) {
                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)([  ]);
                                  };
                                  if (mp instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          var v8 = Control_Monad_Eff_Ref.readRef(mp.value0.input)();
                                          var __unused = function (dictPartial1) {
                                              return function ($dollar47) {
                                                  return $dollar47;
                                              };
                                          };
                                          return __unused()((function () {
                                              if (v8 instanceof Data_Maybe.Just) {
                                                  if (v8["value0"]["value0"]["slotMapInputToPipeline"][v1] instanceof Data_Maybe.Nothing) {
                                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)([  ]);
                                                  };
                                                  if (v8["value0"]["value0"]["slotMapInputToPipeline"][v1] instanceof Data_Maybe.Just) {
                                                      var emptyV = Data_Array.replicate(Data_Array.length(mp.value0.programs))([  ]);
                                                      var addCmds = function (v10) {
                                                          return function (prgIdx) {
                                                              return Data_Maybe.fromJust()(Data_Array.updateAt(prgIdx)(createObjectCommands(mp.value0.texUnitMapping)(input.uniformSetup)(obj)(mp["value0"]["programs"][prgIdx]))(v10));
                                                          };
                                                      };
                                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldl(Data_Foldable.foldableArray)(addCmds)(emptyV)(mp["value0"]["slotPrograms"][v8["value0"]["value0"]["slotMapInputToPipeline"][v1].value0]));
                                                  };
                                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 120, column 13 - line 126, column 88: " + [ v8["value0"]["value0"]["slotMapInputToPipeline"][v1].constructor.name ]);
                                              };
                                              throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 119, column 13 - line 119, column 57: " + [ v8.constructor.name ]);
                                          })())();
                                      };
                                  };
                                  throw new Error("Failed pattern match at LambdaCube.WebGL.Input line 116, column 31 - line 126, column 88: " + [ mp.constructor.name ]);
                              })();
                              Control_Monad_Eff_Ref.writeRef(v6)(v8)();
                              return obj;
                          };
                      };
                  };
              };
          };
      };
  };
  exports["addObject"] = addObject;
  exports["createObjectCommands"] = createObjectCommands;
  exports["mkUniform"] = mkUniform;
  exports["mkWebGLPipelineInput"] = mkWebGLPipelineInput;
  exports["nullSetter"] = nullSetter;
  exports["setScreenSize"] = setScreenSize;
  exports["sortSlotObjects"] = sortSlotObjects;
  exports["uniformFTexture2D"] = uniformFTexture2D;
  exports["uniformFloat"] = uniformFloat;
  exports["uniformV2F"] = uniformV2F;
})(PS["LambdaCube.WebGL.Input"] = PS["LambdaCube.WebGL.Input"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["LambdaCube.WebGL.Backend"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Array = PS["Data.Array"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_Unsafe = PS["Data.StrMap.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Graphics_WebGLRaw = PS["Graphics.WebGLRaw"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var LambdaCube_WebGL_Data = PS["LambdaCube.WebGL.Data"];
  var LambdaCube_WebGL_Input = PS["LambdaCube.WebGL.Input"];
  var LambdaCube_WebGL_Type = PS["LambdaCube.WebGL.Type"];
  var LambdaCube_WebGL_Util = PS["LambdaCube.WebGL.Util"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var setupRasterContext = (function () {
      var setPointSize = function (ps) {
          if (ps instanceof LambdaCube_IR.ProgramPointSize) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          };
          if (ps instanceof LambdaCube_IR.PointSize) {
              return Control_Monad_Eff_Console.error("PointSize is not supported!");
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 43, column 23 - line 47, column 5: " + [ ps.constructor.name ]);
      };
      var cff = function (v) {
          if (v instanceof LambdaCube_IR.CCW) {
              return Graphics_WebGLRaw._CCW;
          };
          if (v instanceof LambdaCube_IR.CW) {
              return Graphics_WebGLRaw._CW;
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 31, column 5 - line 31, column 22: " + [ v.constructor.name ]);
      };
      var cvt = function (v) {
          if (v instanceof LambdaCube_IR.PointCtx) {
              return setPointSize(v.value0);
          };
          if (v instanceof LambdaCube_IR.LineCtx) {
              return Graphics_WebGLRaw.lineWidth_(v.value0);
          };
          if (v instanceof LambdaCube_IR.TriangleCtx) {
              return function __do() {
                  (function () {
                      if (v.value0 instanceof LambdaCube_IR.CullNone) {
                          return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._CULL_FACE);
                      };
                      if (v.value0 instanceof LambdaCube_IR.CullFront) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._CULL_FACE)();
                              Graphics_WebGLRaw.cullFace_(Graphics_WebGLRaw._FRONT)();
                              return Graphics_WebGLRaw.frontFace_(cff(v.value0.value0))();
                          };
                      };
                      if (v.value0 instanceof LambdaCube_IR.CullBack) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._CULL_FACE)();
                              Graphics_WebGLRaw.cullFace_(Graphics_WebGLRaw._BACK)();
                              return Graphics_WebGLRaw.frontFace_(cff(v.value0.value0))();
                          };
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 63, column 9 - line 72, column 38: " + [ v.value0.constructor.name ]);
                  })()();
                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._POLYGON_OFFSET_FILL)();
                  if (v.value2 instanceof LambdaCube_IR.NoOffset) {
                      return Data_Unit.unit;
                  };
                  if (v.value2 instanceof LambdaCube_IR.Offset) {
                      Graphics_WebGLRaw.polygonOffset_(v.value2.value0)(v.value2.value1)();
                      return Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._POLYGON_OFFSET_FILL)();
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 90, column 9 - line 94, column 51: " + [ v.value2.constructor.name ]);
              };
          };
          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 48, column 5 - line 49, column 24: " + [ v.constructor.name ]);
      };
      return cvt;
  })();
  var setupAccumulationContext = function (v) {
      var cvtC = function (v1) {
          return function (v2) {
              if (v2 instanceof Data_List_Types.Cons && v2.value0 instanceof LambdaCube_IR.ColorOp) {
                  return function __do() {
                      (function () {
                          if (v2.value0.value0 instanceof LambdaCube_IR.NoBlending) {
                              return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._BLEND);
                          };
                          if (v2.value0.value0 instanceof LambdaCube_IR.BlendLogicOp) {
                              return function __do() {
                                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._BLEND)();
                                  return Control_Monad_Eff_Console.log("not presented: BlendLogicOp")();
                              };
                          };
                          if (v2.value0.value0 instanceof LambdaCube_IR.Blend) {
                              return function __do() {
                                  Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._BLEND)();
                                  Graphics_WebGLRaw.blendEquationSeparate_(LambdaCube_WebGL_Util.blendEquationToGLType(v2.value0.value0.value0.colorEqSrc))(LambdaCube_WebGL_Util.blendEquationToGLType(v2.value0.value0.value0.alphaEqSrc))();
                                  Graphics_WebGLRaw.blendColor_(v2.value0.value0.value0.color.value0)(v2.value0.value0.value0.color.value1)(v2.value0.value0.value0.color.value2)(v2.value0.value0.value0.color.value3)();
                                  return Graphics_WebGLRaw.blendFuncSeparate_(LambdaCube_WebGL_Util.blendingFactorToGLType(v2.value0.value0.value0.colorFSrc))(LambdaCube_WebGL_Util.blendingFactorToGLType(v2.value0.value0.value0.colorFDst))(LambdaCube_WebGL_Util.blendingFactorToGLType(v2.value0.value0.value0.alphaFSrc))(LambdaCube_WebGL_Util.blendingFactorToGLType(v2.value0.value0.value0.alphaFDst))();
                              };
                          };
                          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 128, column 9 - line 148, column 127: " + [ v2.value0.value0.constructor.name ]);
                      })()();
                      (function () {
                          if (v2.value0.value1 instanceof LambdaCube_IR.VBool) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0)(true)(true)(true);
                          };
                          if (v2.value0.value1 instanceof LambdaCube_IR.VV2B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0)(v2.value0.value1.value0.value1)(true)(true);
                          };
                          if (v2.value0.value1 instanceof LambdaCube_IR.VV3B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0)(v2.value0.value1.value0.value1)(v2.value0.value1.value0.value2)(true);
                          };
                          if (v2.value0.value1 instanceof LambdaCube_IR.VV4B) {
                              return Graphics_WebGLRaw.colorMask_(v2.value0.value1.value0.value0)(v2.value0.value1.value0.value1)(v2.value0.value1.value0.value2)(v2.value0.value1.value0.value3);
                          };
                          return Graphics_WebGLRaw.colorMask_(true)(true)(true)(true);
                      })()();
                      return cvtC(v1 + 1 | 0)(v2.value1)();
                  };
              };
              if (v2 instanceof Data_List_Types.Cons) {
                  return Partial_Unsafe.unsafeCrashWith("setupAccumulationContext");
              };
              if (v2 instanceof Data_List_Types.Nil) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 126, column 5 - line 155, column 24: " + [ v1.constructor.name, v2.constructor.name ]);
          };
      };
      var cvt = function (v1) {
          if (v1 instanceof Data_List_Types.Cons && (v1.value0 instanceof LambdaCube_IR.StencilOp && (v1.value1 instanceof Data_List_Types.Cons && v1.value1.value0 instanceof LambdaCube_IR.DepthOp))) {
              return cvtC(0)(v1.value1.value1);
          };
          if (v1 instanceof Data_List_Types.Cons && v1.value0 instanceof LambdaCube_IR.StencilOp) {
              return cvtC(0)(v1.value1);
          };
          if (v1 instanceof Data_List_Types.Cons && v1.value0 instanceof LambdaCube_IR.DepthOp) {
              return function __do() {
                  Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._STENCIL_TEST)();
                  var glDF = LambdaCube_WebGL_Util.comparisonFunctionToGLType(v1.value0.value0);
                  (function () {
                      var v2 = glDF === LambdaCube_WebGL_Util.comparisonFunctionToGLType(LambdaCube_IR.Always.value) && v1.value0.value1 === false;
                      if (v2) {
                          return Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._DEPTH_TEST);
                      };
                      if (!v2) {
                          return function __do() {
                              Graphics_WebGLRaw.enable_(Graphics_WebGLRaw._DEPTH_TEST)();
                              Graphics_WebGLRaw.depthFunc_(glDF)();
                              return Graphics_WebGLRaw.depthMask_(v1.value0.value1)();
                          };
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 113, column 9 - line 118, column 33: " + [ v2.constructor.name ]);
                  })()();
                  return cvtC(0)(v1.value1)();
              };
          };
          return function __do() {
              Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._DEPTH_TEST)();
              Graphics_WebGLRaw.disable_(Graphics_WebGLRaw._STENCIL_TEST)();
              return cvtC(0)(v1)();
          };
      };
      return cvt(v.value0.accOperations);
  };
  var renderSlot = function (cmds) {
      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(cmds)(function (cmd) {
          if (cmd instanceof LambdaCube_WebGL_Type.GLSetVertexAttribArray) {
              return function __do() {
                  Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ARRAY_BUFFER)(cmd.value1)();
                  Graphics_WebGLRaw.enableVertexAttribArray_(cmd.value0)();
                  return Graphics_WebGLRaw.vertexAttribPointer_(cmd.value0)(cmd.value2)(cmd.value3)(false)(0)(cmd.value4)();
              };
          };
          if (cmd instanceof LambdaCube_WebGL_Type.GLDrawArrays) {
              return Graphics_WebGLRaw.drawArrays_(cmd.value0)(cmd.value1)(cmd.value2);
          };
          if (cmd instanceof LambdaCube_WebGL_Type.GLDrawElements) {
              return function __do() {
                  Graphics_WebGLRaw.bindBuffer_(Graphics_WebGLRaw._ELEMENT_ARRAY_BUFFER)(cmd.value3)();
                  return Graphics_WebGLRaw.drawElements_(cmd.value0)(cmd.value1)(cmd.value2)(cmd.value4)();
              };
          };
          if (cmd instanceof LambdaCube_WebGL_Type.GLSetVertexAttrib) {
              return function __do() {
                  Graphics_WebGLRaw.disableVertexAttribArray_(cmd.value0)();
                  return LambdaCube_WebGL_Util.setVertexAttrib(cmd.value0)(cmd.value1)();
              };
          };
          if (cmd instanceof LambdaCube_WebGL_Type.GLSetUniform) {
              return LambdaCube_WebGL_Util.setUniform(cmd.value0)(cmd.value1);
          };
          if (cmd instanceof LambdaCube_WebGL_Type.GLBindTexture && cmd.value2 instanceof LambdaCube_WebGL_Type.UniFTexture2D) {
              return function __do() {
                  var v = Control_Monad_Eff_Ref.readRef(cmd.value2.value0)();
                  var v1 = Control_Monad_Eff_Ref.readRef(cmd.value1)();
                  Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + v1 | 0)();
                  return Graphics_WebGLRaw.bindTexture_(cmd.value0)(v.value0)();
              };
          };
          return Partial_Unsafe.unsafeCrashWith("renderSlot");
      });
  };
  var createStreamCommands = function (texUnitMap) {
      return function (topUnis) {
          return function (attrs) {
              return function (primitive) {
                  return function (prg) {
                      var streamUniCmds = (function () {
                          var uniMap = Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(prg.inputUniforms);
                          var uniCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(uniMap)(function (v) {
                              return LambdaCube_WebGL_Type.GLSetUniform.create(v.value1)(Data_StrMap_Unsafe.unsafeIndex(topUnis)(v.value0));
                          });
                          var topUni = function (n) {
                              return Data_StrMap_Unsafe.unsafeIndex(topUnis)(n);
                          };
                          var texCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(prg.inputTextureUniforms)(function (n) {
                              var u = topUni(n);
                              var texUnit = Data_StrMap_Unsafe.unsafeIndex(texUnitMap)(n);
                              return new LambdaCube_WebGL_Type.GLBindTexture(Graphics_WebGLRaw._TEXTURE_2D, texUnit, u);
                          });
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(uniCmds)(texCmds);
                      })();
                      var streamCmds = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(Data_StrMap.values(prg.inputStreams))(function (is) {
                          var x = Data_StrMap_Unsafe.unsafeIndex(attrs)(is.slotAttribute);
                          if (x instanceof LambdaCube_WebGL_Type.Stream) {
                              var glType = LambdaCube_WebGL_Util.arrayTypeToGLType(x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrType);
                              var ptr = function (compCnt) {
                                  return x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrOffset + ((x.value0.start * compCnt | 0) * LambdaCube_WebGL_Type.sizeOfArrayType(x["value0"]["buffer"]["arrays"][x.value0.arrIdx].arrType) | 0) | 0;
                              };
                              var setFloatAttrib = function (n) {
                                  return new LambdaCube_WebGL_Type.GLSetVertexAttribArray(is.location, x.value0.buffer.glBuffer, n, glType, ptr(n));
                              };
                              return setFloatAttrib((function () {
                                  var __unused = function (dictPartial1) {
                                      return function ($dollar82) {
                                          return $dollar82;
                                      };
                                  };
                                  return __unused()((function () {
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_Float) {
                                          return 1;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V2F) {
                                          return 2;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V3F) {
                                          return 3;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_V4F) {
                                          return 4;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M22F) {
                                          return 4;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M33F) {
                                          return 9;
                                      };
                                      if (x.value0.sType instanceof LambdaCube_PipelineSchema.Attribute_M44F) {
                                          return 16;
                                      };
                                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 371, column 33 - line 379, column 13: " + [ x.value0.sType.constructor.name ]);
                                  })());
                              })());
                          };
                          return new LambdaCube_WebGL_Type.GLSetVertexAttrib(is.location, x);
                      });
                      var drawCmd = (function () {
                          var streamLen = function (a) {
                              if (a instanceof LambdaCube_WebGL_Type.Stream) {
                                  return [ a.value0.length ];
                              };
                              return [  ];
                          };
                          var prim = LambdaCube_WebGL_Util.primitiveToGLType(primitive);
                          var count = (Data_Array.concatMap(streamLen)(Data_StrMap.values(attrs)))[0];
                          return new LambdaCube_WebGL_Type.GLDrawArrays(prim, 0, count);
                      })();
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(streamUniCmds)(streamCmds))([ drawCmd ]);
                  };
              };
          };
      };
  };
  var setPipelineInput = function (pl) {
      return function (input$prime) {
          return function __do() {
              var v = Control_Monad_Eff_Ref.readRef(pl.input)();
              (function () {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return function __do() {
                          Control_Monad_Eff_Ref.modifyRef(v.value0.value0.input.pipelines)(function (v1) {
                              return Data_Maybe.fromJust()(Data_Array.updateAt(v.value0.value0.id)(Data_Maybe.Nothing.value)(v1));
                          })();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v.value0.value0.slotMapPipelineToInput)(function (slotIdx) {
                              return function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(v["value0"]["value0"]["input"]["slotVector"][slotIdx])();
                                  return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List_Types.foldableList)(Data_Map.values(v1.objectMap))(function (obj) {
                                      return Control_Monad_Eff_Ref.modifyRef(obj.commands)(function (v2) {
                                          return Data_Maybe.fromJust()(Data_Array.updateAt(v.value0.value0.id)([  ])(v2));
                                      });
                                  })();
                              };
                          })();
                      };
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 520, column 5 - line 527, column 82: " + [ v.constructor.name ]);
              })()();
              if (input$prime instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Eff_Ref.writeRef(pl.input)(Data_Maybe.Nothing.value)();
              };
              if (input$prime instanceof Data_Maybe.Just) {
                  var v1 = Control_Monad_Eff_Ref.readRef(input$prime.value0.pipelines)();
                  var v2 = (function () {
                      var v2 = Data_Array.findIndex(Data_Maybe.isNothing)(v1);
                      if (v2 instanceof Data_Maybe.Nothing) {
                          var len = Data_Array.length(v1);
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(input$prime.value0.pipelines)(function (v3) {
                                  return Data_Maybe.fromJust()(Data_Array.updateAt(len)(new Data_Maybe.Just(pl))(Data_Array.concat([ v3, Data_Array.replicate(len)(Data_Maybe.Nothing.value) ])));
                              })();
                              return new Data_Tuple.Tuple(len, new Data_Maybe.Just(len));
                          };
                      };
                      if (v2 instanceof Data_Maybe.Just) {
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(input$prime.value0.pipelines)(function (v3) {
                                  return Data_Maybe.fromJust()(Data_Array.updateAt(v2.value0)(new Data_Maybe.Just(pl))(v3));
                              })();
                              return new Data_Tuple.Tuple(v2.value0, Data_Maybe.Nothing.value);
                          };
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 539, column 39 - line 547, column 43: " + [ v2.constructor.name ]);
                  })()();
                  var v3 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(pl.slotNames)(function (n) {
                      var v3 = Data_StrMap.lookup(n)(input$prime.value0.slotMap);
                      if (v3 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error: unknown slot name in input"));
                      };
                      if (v3 instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v3.value0);
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 549, column 46 - line 551, column 31: " + [ v3.constructor.name ]);
                  })();
                  var iToP = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v4) {
                      return function (p) {
                          return Data_Maybe.fromJust()(Data_Array.updateAt(v4.value1)(new Data_Maybe.Just(v4.value0))(p));
                      };
                  })(Data_Array.replicate(Data_StrMap.size(input$prime.value0.slotMap))(Data_Maybe.Nothing.value))(Data_Array.zip(Data_Array.range(0)(Data_Array.length(v3)))(v3));
                  Control_Monad_Eff_Ref.writeRef(pl.input)(Data_Maybe.Just.create(new LambdaCube_WebGL_Type.InputConnection({
                      id: v2.value0, 
                      input: input$prime.value0, 
                      slotMapPipelineToInput: v3, 
                      slotMapInputToPipeline: iToP
                  })))();
                  var extend = function (v4) {
                      if (v2.value1 instanceof Data_Maybe.Nothing) {
                          return v4;
                      };
                      if (v2.value1 instanceof Data_Maybe.Just) {
                          return Data_Array.concat([ v4, Data_Array.replicate(v2.value1.value0)([  ]) ]);
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 565, column 28 - line 567, column 57: " + [ v2.value1.constructor.name ]);
                  };
                  var emptyV = Data_Array.replicate(Data_Array.length(pl.programs))([  ]);
                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Array.zip(v3)(pl.slotPrograms))(function (v4) {
                      return function __do() {
                          var v5 = Control_Monad_Eff_Ref.readRef(input$prime["value0"]["slotVector"][v4.value0])();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List_Types.foldableList)(Data_Map.values(v5.objectMap))(function (obj) {
                              var updateCmds = function (v6) {
                                  return function (prgIdx) {
                                      return Data_Maybe.fromJust()(Data_Array.updateAt(prgIdx)(LambdaCube_WebGL_Input.createObjectCommands(pl.texUnitMapping)(input$prime.value0.uniformSetup)(obj)(pl["programs"][prgIdx]))(v6));
                                  };
                              };
                              var cmdV = Data_Foldable.foldl(Data_Foldable.foldableArray)(updateCmds)(emptyV)(v4.value1);
                              return Control_Monad_Eff_Ref.modifyRef(obj.commands)(function (v6) {
                                  return Data_Maybe.fromJust()(Data_Array.updateAt(v2.value0)(cmdV)(extend(v6)));
                              });
                          })();
                      };
                  })();
                  return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(pl.streams)(function (s) {
                      return Control_Monad_Eff_Ref.writeRef(s.commands)(createStreamCommands(pl.texUnitMapping)(input$prime.value0.uniformSetup)(s.attributes)(s.primitive)(pl["programs"][s.program]));
                  })();
              };
              throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 535, column 5 - line 577, column 145: " + [ input$prime.constructor.name ]);
          };
      };
  };
  var disposePipeline = function (p) {
      return function __do() {
          setPipelineInput(p)(Data_Maybe.Nothing.value)();
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.programs)(function (prg) {
              return function __do() {
                  Graphics_WebGLRaw.deleteProgram_(prg.program)();
                  return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Graphics_WebGLRaw.deleteShader_)(prg.shaders)();
              };
          })();
      };
  };
  var compileStreamData = function (v) {
      var compileAttr = function (v1) {
          var __unused = function (dictPartial1) {
              return function ($dollar89) {
                  return $dollar89;
              };
          };
          return __unused()((function () {
              if (v1 instanceof LambdaCube_IR.VFloatArray) {
                  return new LambdaCube_WebGL_Type["Array"](LambdaCube_WebGL_Type.ArrFloat.value, v1.value0);
              };
              if (v1 instanceof LambdaCube_IR.VIntArray) {
                  return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrInt16.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.intStorable))(v1.value0));
              };
              if (v1 instanceof LambdaCube_IR.VWordArray) {
                  return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrWord16.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.intStorable))(v1.value0));
              };
              throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 290, column 7 - line 290, column 53: " + [ v1.constructor.name ]);
          })());
      };
      return function __do() {
          var v1 = Data_Array.unzip(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value1.value0, v1.value0), compileAttr(v1.value1.value1));
          })(Data_Array.zip(Data_Array.range(0)(Data_StrMap.size(v.value0.streamData) - 1 | 0))(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0.streamData))));
          var getLength = function (n) {
              return function __do() {
                  var v2 = (function () {
                      var v2 = Data_StrMap.lookup(n)(v.value0.streamData);
                      if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof LambdaCube_IR.VFloatArray) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Array.length(v2.value0.value0));
                      };
                      if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof LambdaCube_IR.VIntArray) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Array.length(v2.value0.value0));
                      };
                      if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof LambdaCube_IR.VWordArray) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Array.length(v2.value0.value0));
                      };
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - getLength"));
                  })()();
                  var v3 = (function () {
                      var v3 = Data_StrMap.lookup(n)(v.value0.streamType);
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.Float) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(1);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.V2F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(2);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.V3F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(3);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.V4F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(4);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.M22F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(4);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.M33F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(9);
                      };
                      if (v3 instanceof Data_Maybe.Just && v3.value0 instanceof LambdaCube_IR.M44F) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(16);
                      };
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - getLength element count"));
                  })()();
                  return v2 / v3 | 0;
              };
          };
          var v2 = LambdaCube_WebGL_Data.compileBuffer(v1.value1)();
          var v3 = Control_Monad_Eff_Ref.newRef([  ])();
          var toStream = function (v4) {
              return function __do() {
                  var v5 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(LambdaCube_WebGL_Util.toStreamType)((function () {
                      var v5 = Data_StrMap.lookup(v4.value0)(v.value0.streamType);
                      if (v5 instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v5.value0);
                      };
                      if (v5 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileStreamData - toStream"));
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 314, column 31 - line 317, column 9: " + [ v5.constructor.name ]);
                  })())();
                  var v6 = getLength(v4.value0)();
                  return new Data_Tuple.Tuple(v4.value0, new LambdaCube_WebGL_Type.Stream({
                      sType: v5, 
                      buffer: v2, 
                      arrIdx: v4.value1, 
                      start: 0, 
                      length: v6
                  }));
              };
          };
          var v4 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(toStream)(v1.value0)();
          return {
              commands: v3, 
              primitive: (function () {
                  var __unused = function (dictPartial1) {
                      return function ($dollar91) {
                          return $dollar91;
                      };
                  };
                  return __unused()((function () {
                      if (v.value0.streamPrimitive instanceof LambdaCube_IR.Points) {
                          return LambdaCube_WebGL_Type.PointList.value;
                      };
                      if (v.value0.streamPrimitive instanceof LambdaCube_IR.Lines) {
                          return LambdaCube_WebGL_Type.LineList.value;
                      };
                      if (v.value0.streamPrimitive instanceof LambdaCube_IR.Triangles) {
                          return LambdaCube_WebGL_Type.TriangleList.value;
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 328, column 18 - line 331, column 34: " + [ v.value0.streamPrimitive.constructor.name ]);
                  })());
              })(), 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(v4), 
              program: Data_Maybe.fromJust()(Data_Array.head(v.value0.streamPrograms))
          };
      };
  };
  var compileRenderTarget = function (texs) {
      return function (glTexs) {
          return function (v) {
              var isFB = function (v1) {
                  if (v1 instanceof LambdaCube_IR.Framebuffer) {
                      return true;
                  };
                  return false;
              };
              var images = Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                  return Data_Maybe.fromJust()(v1.value0.targetRef);
              })(Data_Array.filter(function (v1) {
                  return Data_Maybe.isJust(v1.value0.targetRef);
              })(v.value0.renderTargets));
              var act1 = (function () {
                  var v1 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isFB)(images);
                  if (v1) {
                      var isColor = function (v2) {
                          if (v2 instanceof LambdaCube_IR.Color) {
                              return true;
                          };
                          return false;
                      };
                      var cvt = function (v2) {
                          if (v2.value0.targetRef instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._NONE);
                          };
                          if (v2.value0.targetRef instanceof Data_Maybe.Just && (v2.value0.targetRef.value0 instanceof LambdaCube_IR.Framebuffer && v2.value0.targetRef.value0.value0 instanceof LambdaCube_IR.Color)) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Graphics_WebGLRaw._BACK);
                          };
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (compileRenderTarget)!"));
                      };
                      return function __do() {
                          var v2 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(cvt)(Data_Array.filter(function (v2) {
                              return isColor(v2.value0.targetSemantic);
                          })(v.value0.renderTargets))();
                          return {
                              framebufferObject: $foreign.nullWebGLFramebuffer, 
                              framebufferDrawbuffers: new Data_Maybe.Just(v2)
                          };
                      };
                  };
                  if (!v1) {
                      return function __do() {
                          Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isFB)(images))(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (compileRenderTarget)!")))();
                          var v2 = Graphics_WebGLRaw.createFramebuffer_();
                          Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(v2)();
                          var attach = function (v3) {
                              return function (v4) {
                                  if (v4 instanceof LambdaCube_IR.TextureImage && v4.value2 instanceof Data_Maybe.Nothing) {
                                      var attach2D = Graphics_WebGLRaw.framebufferTexture2D_(Graphics_WebGLRaw._FRAMEBUFFER)(v3)(glTexs[v4.value0].textureTarget)(glTexs[v4.value0].textureObject)(v4.value1);
                                      var act0 = (function () {
                                          if (texs[v4.value0].value0.textureType instanceof LambdaCube_IR.Texture2D && texs[v4.value0].value0.textureType.value1 === 1) {
                                              return attach2D;
                                          };
                                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid texture format!"));
                                      })();
                                      return act0;
                                  };
                                  return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid texture format!"));
                              };
                          };
                          var go = function (v3) {
                              return function (v4) {
                                  if (v4.value0.targetSemantic instanceof LambdaCube_IR.Stencil && v4.value0.targetRef instanceof Data_Maybe.Just) {
                                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Stencil support is not implemented yet!"));
                                  };
                                  if (v4.value0.targetSemantic instanceof LambdaCube_IR.Depth && v4.value0.targetRef instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          attach(Graphics_WebGLRaw._DEPTH_ATTACHMENT)(v4.value0.targetRef.value0)();
                                          return v3;
                                      };
                                  };
                                  if (v4.value0.targetSemantic instanceof LambdaCube_IR.Color && v4.value0.targetRef instanceof Data_Maybe.Just) {
                                      return function __do() {
                                          attach(Graphics_WebGLRaw._COLOR_ATTACHMENT0)(v4.value0.targetRef.value0)();
                                          return new Data_Tuple.Tuple(Data_Array.cons(Graphics_WebGLRaw._COLOR_ATTACHMENT0)(v3.value0), v3.value1 + 1 | 0);
                                      };
                                  };
                                  if (v4.value0.targetSemantic instanceof LambdaCube_IR.Color && v4.value0.targetRef instanceof Data_Maybe.Nothing) {
                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(Data_Array.cons(Graphics_WebGLRaw._NONE)(v3.value0), v3.value1 + 1 | 0));
                                  };
                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v3);
                              };
                          };
                          var v3 = Data_Array.foldM(Control_Monad_Eff.monadEff)(go)(new Data_Tuple.Tuple([  ], 0))(v.value0.renderTargets)();
                          return {
                              framebufferObject: v2, 
                              framebufferDrawbuffers: Data_Maybe.Nothing.value
                          };
                      };
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 240, column 14 - line 285, column 20: " + [ v1.constructor.name ]);
              })();
              return act1;
          };
      };
  };
  var compileProgram = function (v) {
      return function __do() {
          var v1 = Graphics_WebGLRaw.createProgram_();
          var createAndAttach = function (src) {
              return function (t) {
                  return function __do() {
                      var v2 = Graphics_WebGLRaw.createShader_(t)();
                      Graphics_WebGLRaw.shaderSource_(v2)(src)();
                      Graphics_WebGLRaw.compileShader_(v2)();
                      var v3 = Graphics_WebGLRaw.getShaderInfoLog_(v2)();
                      Control_Monad_Eff_Console.log(v3)();
                      var v4 = Graphics_WebGLRaw.getShaderParameter_(v2)(Graphics_WebGLRaw._COMPILE_STATUS)();
                      Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v4 !== true)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("compileShader failed!")))();
                      Graphics_WebGLRaw.attachShader_(v1)(v2)();
                      return v2;
                  };
              };
          };
          var v2 = createAndAttach(v.value0.vertexShader)(Graphics_WebGLRaw._VERTEX_SHADER)();
          var v3 = createAndAttach(v.value0.fragmentShader)(Graphics_WebGLRaw._FRAGMENT_SHADER)();
          Graphics_WebGLRaw.linkProgram_(v1)();
          var v4 = Graphics_WebGLRaw.getProgramInfoLog_(v1)();
          Control_Monad_Eff_Console.log(v4)();
          var v5 = Graphics_WebGLRaw.getProgramParameter_(v1)(Graphics_WebGLRaw._LINK_STATUS)();
          Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v5 !== true)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("link program failed!")))();
          var v6 = Data_Traversable.sequence(Data_StrMap.traversableStrMap)(Control_Monad_Eff.applicativeEff)(Data_Function.flip(Data_StrMap.mapWithKey)(v.value0.programUniforms)(function (n) {
              return function (t) {
                  return function __do() {
                      var v6 = Graphics_WebGLRaw.getUniformLocation_(v1)(n)();
                      return v6;
                  };
              };
          }))();
          var v7 = Data_Traversable.sequence(Data_StrMap.traversableStrMap)(Control_Monad_Eff.applicativeEff)(Data_Function.flip(Data_StrMap.mapWithKey)(v.value0.programInTextures)(function (n) {
              return function (t) {
                  return function __do() {
                      var v7 = Graphics_WebGLRaw.getUniformLocation_(v1)(n)();
                      return v7;
                  };
              };
          }))();
          var v8 = Data_Traversable.sequence(Data_StrMap.traversableStrMap)(Control_Monad_Eff.applicativeEff)(Data_Function.flip(Data_StrMap.mapWithKey)(v.value0.programStreams)(function (streamName) {
              return function (v8) {
                  return function __do() {
                      var v9 = Graphics_WebGLRaw.getAttribLocation_(v1)(streamName)();
                      Control_Monad_Eff_Console.log("attrib location " + (streamName + (" " + Data_Show.show(Data_Show.showInt)(v9))))();
                      return {
                          location: v9, 
                          slotAttribute: v8.value0.name
                      };
                  };
              };
          }))();
          var texUnis = Data_Array.filter(function (n) {
              return Data_StrMap.member(n)(v.value0.programUniforms);
          })(Data_StrMap.keys(v7));
          return {
              program: v1, 
              shaders: [ v2, v3 ], 
              inputUniforms: v6, 
              inputSamplers: v7, 
              inputStreams: v8, 
              inputTextureUniforms: texUnis
          };
      };
  };
  var clearRenderTarget = function (values) {
      var setClearValue = function (v) {
          return function (v1) {
              if (v1.value0.imageSemantic instanceof LambdaCube_IR.Depth && v1.value0.clearValue instanceof LambdaCube_IR.VFloat) {
                  return function __do() {
                      Graphics_WebGLRaw.depthMask_(true)();
                      Graphics_WebGLRaw.clearDepth_(v1.value0.clearValue.value0)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._DEPTH_BUFFER_BIT, 
                          index: v.index
                      };
                  };
              };
              if (v1.value0.imageSemantic instanceof LambdaCube_IR.Stencil && v1.value0.clearValue instanceof LambdaCube_IR.VWord) {
                  return function __do() {
                      Graphics_WebGLRaw.clearStencil_(v1.value0.clearValue.value0)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._STENCIL_BUFFER_BIT, 
                          index: v.index
                      };
                  };
              };
              if (v1.value0.imageSemantic instanceof LambdaCube_IR.Color) {
                  return function __do() {
                      (function () {
                          if (v1.value0.clearValue instanceof LambdaCube_IR.VFloat) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0)(0.0)(0.0)(1.0);
                          };
                          if (v1.value0.clearValue instanceof LambdaCube_IR.VV2F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0)(v1.value0.clearValue.value0.value1)(0.0)(1.0);
                          };
                          if (v1.value0.clearValue instanceof LambdaCube_IR.VV3F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0)(v1.value0.clearValue.value0.value1)(v1.value0.clearValue.value0.value2)(1.0);
                          };
                          if (v1.value0.clearValue instanceof LambdaCube_IR.VV4F) {
                              return Graphics_WebGLRaw.clearColor_(v1.value0.clearValue.value0.value0)(v1.value0.clearValue.value0.value1)(v1.value0.clearValue.value0.value2)(v1.value0.clearValue.value0.value3);
                          };
                          return Graphics_WebGLRaw.clearColor_(0.0)(0.0)(0.0)(1.0);
                      })()();
                      Graphics_WebGLRaw.colorMask_(true)(true)(true)(true)();
                      return {
                          mask: v.mask | Graphics_WebGLRaw._COLOR_BUFFER_BIT, 
                          index: v.index + 1 | 0
                      };
                  };
              };
              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (clearRenderTarget)"));
          };
      };
      return function __do() {
          var v = Data_Array.foldM(Control_Monad_Eff.monadEff)(setClearValue)({
              mask: 0, 
              index: 0
          })(values)();
          return Graphics_WebGLRaw.clear_(v.mask)();
      };
  };
  var renderPipeline = function (p) {
      return function __do() {
          Control_Monad_Eff_Ref.writeRef(p.curProgram)(Data_Maybe.Nothing.value)();
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(p.commands)(function (cmd) {
              if (cmd instanceof LambdaCube_IR.SetRenderTarget) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(p.input)();
                      (function () {
                          if (v instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(v.value0.value0.input.screenSize)();
                                  return Graphics_WebGLRaw.viewport_(0)(0)(v1.value0)(v1.value1)();
                              };
                          };
                          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 413, column 9 - line 417, column 45: " + [ v.constructor.name ]);
                      })()();
                      return Graphics_WebGLRaw.bindFramebuffer_(Graphics_WebGLRaw._FRAMEBUFFER)(p["targets"][cmd.value0].framebufferObject)();
                  };
              };
              if (cmd instanceof LambdaCube_IR.SetSamplerUniform) {
                  return function __do() {
                      var cp = Control_Monad_Eff_Ref.readRef(p.curProgram)();
                      if (cp instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid pipeline, no active program"))();
                      };
                      if (cp instanceof Data_Maybe.Just) {
                          var v = Data_StrMap.lookup(cmd.value0)(p["programs"][cp.value0].inputSamplers);
                          if (v instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (SetSamplerUniform)!"))();
                          };
                          if (v instanceof Data_Maybe.Just) {
                              var v1 = Data_StrMap.lookup(cmd.value0)(p.texUnitMapping);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("internal error (SetSamplerUniform)!"))();
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  Control_Monad_Eff_Ref.writeRef(v1.value0)(cmd.value1)();
                                  return Graphics_WebGLRaw.uniform1i_(v.value0)(cmd.value1)();
                              };
                              throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 432, column 24 - line 436, column 35: " + [ v1.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 430, column 27 - line 436, column 35: " + [ v.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 428, column 41 - line 436, column 35: " + [ cp.constructor.name ]);
                  };
              };
              if (cmd instanceof LambdaCube_IR.SetTexture) {
                  return function __do() {
                      Graphics_WebGLRaw.activeTexture_(Graphics_WebGLRaw._TEXTURE0 + cmd.value0 | 0)();
                      return Graphics_WebGLRaw.bindTexture_(p["textures"][cmd.value1].textureTarget)(p["textures"][cmd.value1].textureObject)();
                  };
              };
              if (cmd instanceof LambdaCube_IR.SetRasterContext) {
                  return setupRasterContext(cmd.value0);
              };
              if (cmd instanceof LambdaCube_IR.SetAccumulationContext) {
                  return setupAccumulationContext(cmd.value0);
              };
              if (cmd instanceof LambdaCube_IR.ClearRenderTarget) {
                  return clearRenderTarget(cmd.value0);
              };
              if (cmd instanceof LambdaCube_IR.SetProgram) {
                  return function __do() {
                      Control_Monad_Eff_Ref.writeRef(p.curProgram)(new Data_Maybe.Just(cmd.value0))();
                      return Graphics_WebGLRaw.useProgram_(p["programs"][cmd.value0].program)();
                  };
              };
              if (cmd instanceof LambdaCube_IR.RenderStream) {
                  return Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(renderSlot)(Control_Monad_Eff_Ref.readRef(p["streams"][cmd.value0].commands));
              };
              if (cmd instanceof LambdaCube_IR.RenderSlot) {
                  return function __do() {
                      var cp = Control_Monad_Eff_Ref.readRef(p.curProgram)();
                      if (cp instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("invalid pipeline, no active program"))();
                      };
                      if (cp instanceof Data_Maybe.Just) {
                          var input = Control_Monad_Eff_Ref.readRef(p.input)();
                          if (input instanceof Data_Maybe.Nothing) {
                              return Data_Unit.unit;
                          };
                          if (input instanceof Data_Maybe.Just) {
                              var v = Control_Monad_Eff_Ref.readRef(input["value0"]["value0"]["input"]["slotVector"][input["value0"]["value0"]["slotMapPipelineToInput"][cmd.value0]])();
                              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v.sortedObjects)(function (v1) {
                                  return function __do() {
                                      var v2 = Control_Monad_Eff_Ref.readRef(v1.value1.enabled)();
                                      return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v2)(function __do() {
                                          var v3 = Control_Monad_Eff_Ref.readRef(v1.value1.commands)();
                                          return renderSlot(v3[input.value0.value0.id][cp.value0])();
                                      })();
                                  };
                              })();
                          };
                          throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 461, column 57 - line 470, column 79: " + [ input.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at LambdaCube.WebGL.Backend line 459, column 41 - line 470, column 79: " + [ cp.constructor.name ]);
                  };
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          })();
      };
  };
  var allocPipeline = function (v) {
      return function __do() {
          var v1 = Graphics_WebGLRaw.getExtension_("WEBGL_depth_texture")();
          var v2 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(LambdaCube_WebGL_Util.compileTexture)(v.value0.textures)();
          var v3 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileRenderTarget(v.value0.textures)(v2))(v.value0.targets)();
          var v4 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileProgram)(v.value0.programs)();
          var v5 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_StrMap.fromFoldable(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (k) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(k))(Control_Monad_Eff_Ref.newRef(0));
          })(Data_Array.nub(Data_Eq.eqString)(Data_Array.concatMap(function (v5) {
              return Data_StrMap.keys(v5.value0.programInTextures);
          })(v.value0.programs))))();
          var v6 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var v7 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var v8 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(compileStreamData)(v.value0.streams)();
          return {
              targets: v3, 
              textures: v2, 
              programs: v4, 
              commands: v.value0.commands, 
              input: v6, 
              slotPrograms: Data_Functor.map(Data_Functor.functorArray)(function (v9) {
                  return v9.value0.slotPrograms;
              })(v.value0.slots), 
              slotNames: Data_Functor.map(Data_Functor.functorArray)(function (v9) {
                  return v9.value0.slotName;
              })(v.value0.slots), 
              curProgram: v7, 
              texUnitMapping: v5, 
              streams: v8
          };
      };
  };
  exports["allocPipeline"] = allocPipeline;
  exports["clearRenderTarget"] = clearRenderTarget;
  exports["compileProgram"] = compileProgram;
  exports["compileRenderTarget"] = compileRenderTarget;
  exports["compileStreamData"] = compileStreamData;
  exports["createStreamCommands"] = createStreamCommands;
  exports["disposePipeline"] = disposePipeline;
  exports["renderPipeline"] = renderPipeline;
  exports["renderSlot"] = renderSlot;
  exports["setPipelineInput"] = setPipelineInput;
  exports["setupAccumulationContext"] = setupAccumulationContext;
  exports["setupRasterContext"] = setupRasterContext;
})(PS["LambdaCube.WebGL.Backend"] = PS["LambdaCube.WebGL.Backend"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Array = PS["Data.Array"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var LambdaCube_Mesh = PS["LambdaCube.Mesh"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var LambdaCube_WebGL_Data = PS["LambdaCube.WebGL.Data"];
  var LambdaCube_WebGL_Input = PS["LambdaCube.WebGL.Input"];
  var LambdaCube_WebGL_Type = PS["LambdaCube.WebGL.Type"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var GPUMesh = (function () {
      function GPUMesh(value0) {
          this.value0 = value0;
      };
      GPUMesh.create = function (value0) {
          return new GPUMesh(value0);
      };
      return GPUMesh;
  })();
  var meshAttrToStream = function (b) {
      return function (i) {
          return function (a) {
              return LambdaCube_WebGL_Type.Stream.create((function () {
                  if (a instanceof LambdaCube_Mesh.A_Float) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_Float.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_V2F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_V2F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_V3F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_V3F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_V4F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_V4F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_M22F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_M22F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_M33F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_M33F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  if (a instanceof LambdaCube_Mesh.A_M44F) {
                      return {
                          sType: LambdaCube_PipelineSchema.Attribute_M44F.value, 
                          buffer: b, 
                          arrIdx: i, 
                          start: 0, 
                          length: Data_Array.length(a.value0)
                      };
                  };
                  return Partial_Unsafe.unsafeCrashWith("meshAttrToStream - unsupported MeshAttribute");
              })());
          };
      };
  };
  var meshAttrToArray = function (a) {
      if (a instanceof LambdaCube_Mesh.A_Float) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.numStorable))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_V2F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.numStorable)))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_V3F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.numStorable)))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_V4F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.numStorable)))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_M22F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.v2Storable(LambdaCube_WebGL_Type.numStorable))))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_M33F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.v3Storable(LambdaCube_WebGL_Type.numStorable))))(a.value0));
      };
      if (a instanceof LambdaCube_Mesh.A_M44F) {
          return LambdaCube_WebGL_Type["Array"].create(LambdaCube_WebGL_Type.ArrFloat.value)(LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.v4Storable(LambdaCube_WebGL_Type.numStorable))))(a.value0));
      };
      return Partial_Unsafe.unsafeCrashWith("meshAttrToArray - unsupported MeshAttribute");
  };
  var compileMesh = function (v) {
      var mkIndexBuf = function (v1) {
          return function __do() {
              var v2 = LambdaCube_WebGL_Data.compileBuffer([ new LambdaCube_WebGL_Type["Array"](LambdaCube_WebGL_Type.ArrWord16.value, LambdaCube_WebGL_Type.toArray(LambdaCube_WebGL_Type.arrStorable(LambdaCube_WebGL_Type.intStorable))(v1)) ])();
              return new Data_Maybe.Just({
                  buffer: v2, 
                  arrIdx: 0, 
                  start: 0, 
                  length: Data_Array.length(v1)
              });
          };
      };
      return function __do() {
          var v1 = LambdaCube_WebGL_Data.compileBuffer(Data_Functor.map(Data_Functor.functorArray)(meshAttrToArray)(Data_StrMap.values(v.value0.mAttributes)))();
          var v2 = (function () {
              if (v.value0.mPrimitive instanceof LambdaCube_Mesh.P_Points) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(LambdaCube_WebGL_Type.PointList.value, Data_Maybe.Nothing.value));
              };
              if (v.value0.mPrimitive instanceof LambdaCube_Mesh.P_TriangleStrip) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(LambdaCube_WebGL_Type.TriangleStrip.value, Data_Maybe.Nothing.value));
              };
              if (v.value0.mPrimitive instanceof LambdaCube_Mesh.P_Triangles) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(LambdaCube_WebGL_Type.TriangleList.value, Data_Maybe.Nothing.value));
              };
              if (v.value0.mPrimitive instanceof LambdaCube_Mesh.P_TriangleStripI) {
                  return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(LambdaCube_WebGL_Type.TriangleStrip.value))(mkIndexBuf(v.value0.mPrimitive.value0));
              };
              if (v.value0.mPrimitive instanceof LambdaCube_Mesh.P_TrianglesI) {
                  return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(LambdaCube_WebGL_Type.TriangleList.value))(mkIndexBuf(v.value0.mPrimitive.value0));
              };
              throw new Error("Failed pattern match at LambdaCube.WebGL.Mesh line 43, column 27 - line 48, column 67: " + [ v.value0.mPrimitive.constructor.name ]);
          })()();
          var streams = Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Array.zipWith(function (i) {
              return function (v3) {
                  return new Data_Tuple.Tuple(v3.value0, meshAttrToStream(v1)(i)(v3.value1));
              };
          })(Data_Array.range(0)(Data_StrMap.size(v.value0.mAttributes)))(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0.mAttributes)));
          var gpuData = {
              primitive: v2.value0, 
              streams: streams, 
              indices: v2.value1
          };
          return new GPUMesh({
              meshData: new LambdaCube_Mesh.Mesh(v.value0), 
              gpuData: gpuData
          });
      };
  };
  var addMesh = function (input) {
      return function (slotName) {
          return function (v) {
              return function (objUniNames) {
                  var v1 = Data_StrMap.lookup(slotName)(input.schema.value0.objectArrays);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("addMesh: slot not found"));
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      var filterStream = function (v2) {
                          return Data_StrMap.member(v2.value0)(v1.value0.value0.attributes);
                      };
                      return LambdaCube_WebGL_Input.addObject(input)(slotName)(v.value0.gpuData.primitive)(v.value0.gpuData.indices)(Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Array.filter(filterStream)(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0.gpuData.streams))))(objUniNames);
                  };
                  throw new Error("Failed pattern match at LambdaCube.WebGL.Mesh line 30, column 28 - line 35, column 174: " + [ v1.constructor.name ]);
              };
          };
      };
  };
  exports["GPUMesh"] = GPUMesh;
  exports["addMesh"] = addMesh;
  exports["compileMesh"] = compileMesh;
  exports["meshAttrToArray"] = meshAttrToArray;
  exports["meshAttrToStream"] = meshAttrToStream;
})(PS["LambdaCube.WebGL.Mesh"] = PS["LambdaCube.WebGL.Mesh"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Main

  exports.getMousePos =
    function getMousePos(e) {
        return function() {
          var mouseX, mouseY;

          if(e.offsetX) {
              mouseX = e.offsetX;
              mouseY = e.offsetY;
          }
          else if(e.layerX) {
              mouseX = e.layerX;
              mouseY = e.layerY;
          }
          return [mouseX,mouseY];
        };
    };

  exports.getJSON =
    function getJSON(uri) {
      return function(act) {
        return function() {
          $.getJSON(uri, function(data) {
            act(data)();
          });
        };
      };
    };

  exports.addCommand =
    function addCommand(editor) {
      return function(cmdName) {
        return function(winKey) {
          return function(macKey) {
            return function(cmd) {
              return function() {
                editor.commands.addCommand({
                  name: cmdName,
                  bindKey: {win: winKey,  mac: macKey},
                  exec: function(editor) {
                    cmd(editor)();
                  }
                });
              };
            };
          };
        };
      };
    };

  exports.tokenTooltip =
    function tokenTooltip(editor) {
      return function(getTy) {
        return function() {
            editor.tokenTooltip = new myTokenTooltip(editor,getTy);
        };
      };
    };

  exports.addMarkerImpl =
    function addMarkerImpl(range, clazz, type, inFront, self) {
      return function() {
        return self.addMarker(range, clazz, type, inFront);
      };
    };

  exports.getUrlParameter =
    function getUrlParameter(sParam) {
      return function () {
        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;
  
        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');
  
            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
        return "";
      };
    };
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_Mesh = PS["LambdaCube.Mesh"];
  var Prelude = PS["Prelude"];        
  var myQuad = new LambdaCube_Mesh.Mesh({
      mAttributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", new LambdaCube_Mesh.A_V2F([ new LambdaCube_LinearBase.V2(-1.0, 1.0), new LambdaCube_LinearBase.V2(-1.0, -1.0), new LambdaCube_LinearBase.V2(1.0, -1.0), new LambdaCube_LinearBase.V2(1.0, -1.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(-1.0, 1.0) ])) ]), 
      mPrimitive: LambdaCube_Mesh.P_Triangles.value
  });
  var lambdaCubeVertices = [ new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -4.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -4.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, -4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, -5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(-5.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-5.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, -5.0), new LambdaCube_LinearBase.V3(-4.0, 5.0, 5.0), new LambdaCube_LinearBase.V3(-4.0, 4.0, 5.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -4.0), new LambdaCube_LinearBase.V3(-3.889, 4.596, -5.0), new LambdaCube_LinearBase.V3(-4.596, 3.889, -5.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -5.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -5.0), new LambdaCube_LinearBase.V3(4.596, -3.889, -4.0), new LambdaCube_LinearBase.V3(3.889, -4.596, -4.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(-0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(-0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -7.0), new LambdaCube_LinearBase.V3(0.5, 0.5, -5.0), new LambdaCube_LinearBase.V3(0.5, -0.5, -5.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -6.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -6.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -6.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -6.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -6.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -8.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -8.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -8.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -6.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -8.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -8.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -8.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -8.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -8.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -6.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -6.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -6.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -6.0), new LambdaCube_LinearBase.V3(-3.134, 7.428, -8.0), new LambdaCube_LinearBase.V3(-4.866, 6.428, -8.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -8.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -8.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -6.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -8.0), new LambdaCube_LinearBase.V3(4.866, -6.428, -6.0), new LambdaCube_LinearBase.V3(3.134, -7.428, -6.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -6.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -6.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -6.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -6.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -6.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -8.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -8.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -8.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -6.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -8.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -8.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -8.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -8.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -8.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -6.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -6.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -6.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -6.0), new LambdaCube_LinearBase.V3(-4.366, -6.464, -8.0), new LambdaCube_LinearBase.V3(-2.634, -7.464, -8.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -8.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -8.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -6.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -8.0), new LambdaCube_LinearBase.V3(-0.366, 0.464, -6.0), new LambdaCube_LinearBase.V3(1.366, -0.536, -6.0) ];
  var lambdaCubeNormals = [ new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(-0.707, 0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.707, -0.707, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(0.0, -1.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(-1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(1.0, 0.0, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, 1.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(-0.866, 0.5, 0.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.0, 0.0, -1.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(0.866, -0.5, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(-0.5, -0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0), new LambdaCube_LinearBase.V3(0.5, 0.866, 0.0) ];
  var lambdaCube = new LambdaCube_Mesh.Mesh({
      mAttributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", new LambdaCube_Mesh.A_V3F(lambdaCubeVertices)), new Data_Tuple.Tuple("normal", new LambdaCube_Mesh.A_V3F(lambdaCubeNormals)) ]), 
      mPrimitive: LambdaCube_Mesh.P_Triangles.value
  });
  var g_vertex_buffer_data = [ new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, 1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(1.0, -1.0, -1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, 1.0, 1.0), new LambdaCube_LinearBase.V4(-1.0, -1.0, -1.0, 1.0) ];
  var g_uv_buffer_data = [ new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(0.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(0.0, 1.0), new LambdaCube_LinearBase.V2(1.0, 0.0), new LambdaCube_LinearBase.V2(1.0, 1.0) ];
  var myCube = new LambdaCube_Mesh.Mesh({
      mAttributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position4", new LambdaCube_Mesh.A_V4F(g_vertex_buffer_data)), new Data_Tuple.Tuple("vertexUV", new LambdaCube_Mesh.A_V2F(g_uv_buffer_data)) ]), 
      mPrimitive: LambdaCube_Mesh.P_Triangles.value
  });
  exports["g_uv_buffer_data"] = g_uv_buffer_data;
  exports["g_vertex_buffer_data"] = g_vertex_buffer_data;
  exports["lambdaCube"] = lambdaCube;
  exports["lambdaCubeNormals"] = lambdaCubeNormals;
  exports["lambdaCubeVertices"] = lambdaCubeVertices;
  exports["myCube"] = myCube;
  exports["myQuad"] = myQuad;
})(PS["Sample"] = PS["Sample"] || {});
(function(exports) {
    "use strict";

  // module Timer

  exports.timeout = function(millis) {
      return function(action) {
          return function() {
              return setTimeout(action, millis);
          };
      };
  };

  exports.clearTimeout = function(timer) {
      return function() {
          clearTimeout(timer);
      };
  };

  exports.nowEpochMilliseconds = function () {
    return Date.now();
  };
})(PS["Timer"] = PS["Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  exports["clearTimeout"] = $foreign.clearTimeout;
  exports["nowEpochMilliseconds"] = $foreign.nowEpochMilliseconds;
  exports["timeout"] = $foreign.timeout;
})(PS["Timer"] = PS["Timer"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module WebSocket

  exports.webSocketImpl =
    function webSocketImpl(uri) {
     return function(h) {
      return function(ok) {
       return function(err) {
        return function() {
          try {
            var ws = new WebSocket(uri);
            ws.onerror = function(event) {
              h.onError(ws)(event.data)();
            };
  
            ws.onopen = function() {
              h.onOpen(ws)();
            };
  
            ws.onclose = function() {
              h.onClose();
            };
  
            ws.onmessage = function(event) {
              h.onMessage(ws)(event.data)();
            };
            return ok(ws);
          } catch (e) {
            console.log("exception");
            console.log(e);
            console.log(e.type);
            return err(e.type);
          }
        };
       };
      };
     };
    };

  exports.send =
    function send (socket) {
      return function (data) {
        return function () {
          socket.send(data);
        };
      };
    };
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["WebSocket"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Prelude = PS["Prelude"];        
  var webSocket = function (a) {
      return function (b) {
          return $foreign.webSocketImpl(a)(b)(Data_Either.Right.create)(Data_Either.Left.create);
      };
  };
  exports["webSocket"] = webSocket;
  exports["send"] = $foreign.send;
})(PS["WebSocket"] = PS["WebSocket"] || {});
(function(exports) {
  // Generated by purs version 0.11.4
  "use strict";
  var $foreign = PS["Main"];
  var Ace = PS["Ace"];
  var Ace_EditSession = PS["Ace.EditSession"];
  var Ace_Editor = PS["Ace.Editor"];
  var Ace_Range = PS["Ace.Range"];
  var Ace_Types = PS["Ace.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var DOM = PS["DOM"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Matrix = PS["Data.Matrix"];
  var Data_Matrix4 = PS["Data.Matrix4"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Extensions = PS["Extensions"];
  var Global = PS["Global"];
  var Graphics_WebGL = PS["Graphics.WebGL"];
  var LambdaCube_IR = PS["LambdaCube.IR"];
  var LambdaCube_LinearBase = PS["LambdaCube.LinearBase"];
  var LambdaCube_Mesh = PS["LambdaCube.Mesh"];
  var LambdaCube_PipelineSchema = PS["LambdaCube.PipelineSchema"];
  var LambdaCube_TypeInfo = PS["LambdaCube.TypeInfo"];
  var LambdaCube_WebGL = PS["LambdaCube.WebGL"];
  var LambdaCube_WebGL_Backend = PS["LambdaCube.WebGL.Backend"];
  var LambdaCube_WebGL_Data = PS["LambdaCube.WebGL.Data"];
  var LambdaCube_WebGL_Input = PS["LambdaCube.WebGL.Input"];
  var LambdaCube_WebGL_Mesh = PS["LambdaCube.WebGL.Mesh"];
  var LambdaCube_WebGL_Util = PS["LambdaCube.WebGL.Util"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Sample = PS["Sample"];
  var Timer = PS["Timer"];
  var WebSocket = PS["WebSocket"];        
  var main = Control_Monad_Eff_Console.log("Start LambdaCube 3D Editor");
  var defaultExampleName = "LambdaCube2.lc";
  var addMarker = function (range) {
      return function (clazz) {
          return function (_type) {
              return function (inFront) {
                  return function (self) {
                      return $foreign.addMarkerImpl(range, clazz, _type, inFront, self);
                  };
              };
          };
      };
  };
  var run = Graphics_WebGL.runWebGL("glcanvas")(function (s) {
      return Control_Monad_Eff_Console.log(s);
  })(function (context) {
      var inputSchema = new LambdaCube_PipelineSchema.PipelineSchema({
          objectArrays: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ Data_Tuple.Tuple.create("stream")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value), new Data_Tuple.Tuple("normal", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })), Data_Tuple.Tuple.create("stream4")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position4", LambdaCube_PipelineSchema.Attribute_V4F.value), new Data_Tuple.Tuple("vertexUV", LambdaCube_PipelineSchema.Attribute_V2F.value) ])
          })), Data_Tuple.Tuple.create("line")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })), Data_Tuple.Tuple.create("grid")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })), Data_Tuple.Tuple.create("grid3d")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Points.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })), Data_Tuple.Tuple.create("quad")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V2F.value) ])
          })), Data_Tuple.Tuple.create("cube")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value), new Data_Tuple.Tuple("normal", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })), Data_Tuple.Tuple.create("lambdaCube")(new LambdaCube_PipelineSchema.ObjectArraySchema({
              primitive: LambdaCube_IR.Triangles.value, 
              attributes: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("position", LambdaCube_PipelineSchema.Attribute_V3F.value), new Data_Tuple.Tuple("normal", LambdaCube_PipelineSchema.Attribute_V3F.value) ])
          })) ]), 
          uniforms: Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("MVP", LambdaCube_IR.M44F.value), new Data_Tuple.Tuple("Time", LambdaCube_IR.Float.value), new Data_Tuple.Tuple("Mouse", LambdaCube_IR.V2F.value), new Data_Tuple.Tuple("Diffuse", LambdaCube_IR.FTexture2D.value), new Data_Tuple.Tuple("OcclusionFieldMin", LambdaCube_IR.FTexture2D.value), new Data_Tuple.Tuple("OcclusionFieldMax", LambdaCube_IR.FTexture2D.value) ])
      });
      return function __do() {
          var v = LambdaCube_WebGL_Input.mkWebGLPipelineInput(inputSchema)();
          var v1 = Control_Monad_Eff_Ref.newRef(0.0)();
          var v2 = Control_Monad_Eff_JQuery.body();
          var v3 = Control_Monad_Eff_JQuery.find("#timeBox")(v2)();
          var v4 = Control_Monad_Eff_JQuery.find("#timeRange")(v2)();
          var getTime = function __do() {
              var v5 = Control_Monad_Eff_JQuery.getValue(v3)();
              var v6 = Control_Monad_Except.runExcept(Data_Foreign.readNumber(v5));
              if (v6 instanceof Data_Either.Right) {
                  return v6.value0;
              };
              var v7 = Control_Monad_Except.runExcept(Data_Foreign.readString(v5));
              if (v7 instanceof Data_Either.Right) {
                  return Global.readFloat(v7.value0);
              };
              return 0.0;
          };
          Data_Function.flip(Control_Monad_Eff_JQuery.on("input"))(v3)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v3))(Data_Function.flip(Control_Monad_Eff_JQuery.setValue)(v4))();
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Data_Function.flip(Control_Monad_Eff_JQuery.on("input"))(v4)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v4))(Data_Function.flip(Control_Monad_Eff_JQuery.setValue)(v3))();
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Data_Function.flip(Control_Monad_Eff_JQuery.on("change"))(v3)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v3))(Data_Function.flip(Control_Monad_Eff_JQuery.setValue)(v4))();
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          Data_Function.flip(Control_Monad_Eff_JQuery.on("change"))(v4)(function (v5) {
              return function (v6) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.getValue(v4))(Data_Function.flip(Control_Monad_Eff_JQuery.setValue)(v3))();
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(getTime)(Control_Monad_Eff_Ref.writeRef(v1))();
                  };
              };
          })();
          var v5 = Control_Monad_Eff_JQuery.find("#pause")(v2)();
          var v6 = Control_Monad_Eff_JQuery.find("#pipeline")(v2)();
          var v7 = Control_Monad_Eff_JQuery.find("#desugared")(v2)();
          var v8 = Control_Monad_Eff_JQuery.find("#messagepanel")(v2)();
          var v9 = Control_Monad_Eff_JQuery.find("#statuspanel")(v2)();
          var v10 = Control_Monad_Eff_JQuery.find("#compilebutton")(v2)();
          var v11 = Control_Monad_Eff_JQuery.find("#exerciseselect")(v2)();
          var v12 = Control_Monad_Eff_JQuery.find("#glcanvas")(v2)();
          Data_Function.flip(Control_Monad_Eff_JQuery.on("mousemove"))(v12)(function (e) {
              return function (v13) {
                  return function __do() {
                      var v14 = Graphics_WebGL.getCanvasWidth(context)();
                      var v15 = Graphics_WebGL.getCanvasHeight(context)();
                      var v16 = $foreign.getMousePos(e)();
                      var __unused = function (dictPartial1) {
                          return function ($dollar83) {
                              return $dollar83;
                          };
                      };
                      return __unused()((function () {
                          if (v16.length === 2) {
                              return LambdaCube_WebGL_Input.uniformV2F("Mouse")(v.uniformSetter)(new LambdaCube_LinearBase.V2(v16[0] / Data_Int.toNumber(v14), v16[1] / Data_Int.toNumber(v15)));
                          };
                          throw new Error("Failed pattern match at Main line 150, column 5 - line 150, column 27: " + [ v16.constructor.name ]);
                      })())();
                  };
              };
          })();
          var updateInput = function (t) {
              return function __do() {
                  var v13 = Graphics_WebGL.getCanvasWidth(context)();
                  var v14 = Graphics_WebGL.getCanvasHeight(context)();
                  LambdaCube_WebGL_Input.setScreenSize(v)(new LambdaCube_LinearBase.V2(v13, v14))();
                  return LambdaCube_WebGL_Input.uniformFloat("Time")(v.uniformSetter)(t)();
              };
          };
          var toLCMat4 = function (v13) {
              if (v13.length === 16) {
                  var v41 = new LambdaCube_LinearBase.V4(v13[12], v13[13], v13[14], v13[15]);
                  var v31 = new LambdaCube_LinearBase.V4(v13[8], v13[9], v13[10], v13[11]);
                  var v21 = new LambdaCube_LinearBase.V4(v13[4], v13[5], v13[6], v13[7]);
                  var v14 = new LambdaCube_LinearBase.V4(v13[0], v13[1], v13[2], v13[3]);
                  return new LambdaCube_LinearBase.V4(v14, v21, v31, v41);
              };
              return Extensions.fail("invalid Mat4");
          };
          var v13 = LambdaCube_WebGL_Mesh.compileMesh(Sample.myCube)();
          var v14 = LambdaCube_WebGL_Mesh.addMesh(v)("stream4")(v13)([  ])();
          var v15 = LambdaCube_WebGL_Mesh.compileMesh(Sample.myQuad)();
          var v16 = LambdaCube_WebGL_Mesh.addMesh(v)("quad")(v15)([  ])();
          var v17 = LambdaCube_WebGL_Mesh.compileMesh(Sample.lambdaCube)();
          var v18 = LambdaCube_WebGL_Mesh.addMesh(v)("lambdaCube")(v17)([  ])();
          LambdaCube_WebGL_Data.uploadTexture2DToGPU("logo.png")(LambdaCube_WebGL_Input.uniformFTexture2D("Diffuse")(v.uniformSetter))();
          LambdaCube_WebGL_Data.uploadTexture2DToGPU("OcclusionFieldMin.png")(LambdaCube_WebGL_Input.uniformFTexture2D("OcclusionFieldMin")(v.uniformSetter))();
          LambdaCube_WebGL_Data.uploadTexture2DToGPU("OcclusionFieldMax.png")(LambdaCube_WebGL_Input.uniformFTexture2D("OcclusionFieldMax")(v.uniformSetter))();
          var addRemoteModel = function (sname) {
              return function (uri) {
                  return $foreign.getJSON(uri)(function (m) {
                      var v19 = Data_Argonaut_Decode_Class.decodeJson(LambdaCube_Mesh.decodeJsonMesh)(m);
                      if (v19 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Console.log("decode error: " + v19.value0);
                      };
                      if (v19 instanceof Data_Either.Right) {
                          return function __do() {
                              var v20 = LambdaCube_WebGL_Mesh.compileMesh(v19.value0)();
                              var v21 = LambdaCube_WebGL_Mesh.addMesh(v)(sname)(v20)([  ])();
                              LambdaCube_WebGL_Input.sortSlotObjects(v)();
                              return Data_Unit.unit;
                          };
                      };
                      throw new Error("Failed pattern match at Main line 185, column 9 - line 191, column 22: " + [ v19.constructor.name ]);
                  });
              };
          };
          var v19 = Ace.edit("editor")(Ace.ace)();
          var v20 = Ace_Editor.getSession(v19)();
          Ace_Editor.setTheme("ace/theme/terminal")(v19)();
          Ace_EditSession.setMode("ace/mode/haskell")(v20)();
          var v21 = Control_Monad_Eff_Ref.newRef([  ])();
          var v22 = Control_Monad_Eff_Ref.newRef([  ])();
          var lessEqPos = function (l) {
              return function (c) {
                  return function (l$prime) {
                      return function (c$prime) {
                          return l < l$prime || l === l$prime && c <= c$prime;
                      };
                  };
              };
          };
          var lessPos = function (l) {
              return function (c) {
                  return function (l$prime) {
                      return function (c$prime) {
                          return l < l$prime || l === l$prime && c < c$prime;
                      };
                  };
              };
          };
          var getTypeInfo = function (l) {
              return function (c) {
                  return function __do() {
                      var v23 = Control_Monad_Eff_Ref.readRef(v21)();
                      var flattenTypeInfo = function (v24) {
                          return {
                              startLine: v24.value0.range.value0.startLine, 
                              startColumn: v24.value0.range.value0.startColumn, 
                              endLine: v24.value0.range.value0.endLine, 
                              endColumn: v24.value0.range.value0.endColumn, 
                              text: v24.value0.text
                          };
                      };
                      var ps = Data_Function.flip(Data_Array.filter)(Data_Functor.map(Data_Functor.functorArray)(flattenTypeInfo)(v23))(function (ti) {
                          return lessEqPos(ti.startLine)(ti.startColumn)(l)(c) && lessPos(l)(c)(ti.endLine)(ti.endColumn);
                      });
                      var f = function (v24) {
                          return function (i) {
                              if (v24 instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(i);
                              };
                              if (v24 instanceof Data_Maybe.Just) {
                                  if (lessPos(v24.value0.startLine)(v24.value0.startColumn)(i.startLine)(i.startColumn)) {
                                      return new Data_Maybe.Just(i);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      return new Data_Maybe.Just(v24.value0);
                                  };
                              };
                              throw new Error("Failed pattern match at Main line 213, column 9 - line 225, column 37: " + [ v24.constructor.name, i.constructor.name ]);
                          };
                      };
                      var v24 = Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(Data_Maybe.Nothing.value)(ps);
                      if (v24 instanceof Data_Maybe.Nothing) {
                          return {
                              startLine: 0, 
                              startColumn: 0, 
                              endLine: 0, 
                              endColumn: 0, 
                              text: ""
                          };
                      };
                      if (v24 instanceof Data_Maybe.Just) {
                          return v24.value0;
                      };
                      throw new Error("Failed pattern match at Main line 226, column 16 - line 234, column 22: " + [ v24.constructor.name ]);
                  };
              };
          };
          $foreign.tokenTooltip(v19)(getTypeInfo)();
          var v23 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
          var render = function (ir) {
              return function __do() {
                  var v24 = Control_Monad_Eff_Ref.readRef(v23)();
                  Control_Monad_Eff_Ref.writeRef(v23)(Data_Maybe.Nothing.value)();
                  (function () {
                      if (v24 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                      if (v24 instanceof Data_Maybe.Just) {
                          return function __do() {
                              Control_Monad_Eff_Console.log("dispose old pipeline")();
                              return LambdaCube_WebGL_Backend.disposePipeline(v24.value0)();
                          };
                      };
                      throw new Error("Failed pattern match at Main line 255, column 9 - line 259, column 30: " + [ v24.constructor.name ]);
                  })()();
                  Control_Monad_Eff_Console.log("allocate new pipeline")();
                  var v25 = LambdaCube_WebGL_Backend.allocPipeline(ir)();
                  Control_Monad_Eff_Console.log("attach pipeline input")();
                  LambdaCube_WebGL_Backend.setPipelineInput(v25)(new Data_Maybe.Just(v))();
                  Control_Monad_Eff_Console.log("generate object commands")();
                  LambdaCube_WebGL_Input.sortSlotObjects(v)();
                  return Control_Monad_Eff_Ref.writeRef(v23)(new Data_Maybe.Just(v25))();
              };
          };
          var compile = function (s) {
              return function __do() {
                  Control_Monad_Eff_Console.log("compile")();
                  Control_Monad_Eff_JQuery.setText("Compiling...")(v9)();
                  var v24 = Ace_EditSession.getValue(v20)();
                  return WebSocket.send(s)(v24)();
              };
          };
          var v24 = WebSocket.webSocket("ws://localhost:8000/exerciselist")({
              onOpen: function (s) {
                  return function __do() {
                      WebSocket.send(s)("query")();
                      Control_Monad_Eff_Console.log("socket1 is ready")();
                      return Data_Unit.unit;
                  };
              }, 
              onMessage: function (s) {
                  return function (m) {
                      var v24 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString)));
                      if (v24 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Console.log("decode error: " + v24.value0);
                      };
                      if (v24 instanceof Data_Either.Right) {
                          return function __do() {
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v24.value0)(function (e) {
                                  return function __do() {
                                      var v25 = Control_Monad_Eff_JQuery.create("<option></option>")();
                                      Control_Monad_Eff_JQuery.setText(e)(v25)();
                                      return Control_Monad_Eff_JQuery.append(v25)(v11)();
                                  };
                              })();
                              return Data_Unit.unit;
                          };
                      };
                      throw new Error("Failed pattern match at Main line 273, column 27 - line 280, column 22: " + [ v24.constructor.name ]);
                  };
              }, 
              onError: function (s) {
                  return function (m) {
                      return Control_Monad_Eff_Console.log(m);
                  };
              }, 
              onClose: Control_Monad_Eff_Console.log("socket1 is closed")
          })();
          var v25 = WebSocket.webSocket("ws://localhost:8000/compile")({
              onOpen: function (s) {
                  return function __do() {
                      Control_Monad_Eff_Console.log("socket is ready")();
                      var v25 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                      return Ace_EditSession.onChange(v20)(function __do() {
                          var v26 = Control_Monad_Eff_Ref.readRef(v25)();
                          (function () {
                              if (v26 instanceof Data_Maybe.Nothing) {
                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                              };
                              if (v26 instanceof Data_Maybe.Just) {
                                  return Timer.clearTimeout(v26.value0);
                              };
                              throw new Error("Failed pattern match at Main line 291, column 11 - line 293, column 37: " + [ v26.constructor.name ]);
                          })()();
                          return Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.writeRef(v25))(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(Timer.timeout(1000)(compile(s))))();
                      })();
                  };
              }, 
              onClose: Control_Monad_Eff_Console.log("socket is closed"), 
              onMessage: function (s) {
                  return function (m) {
                      return function __do() {
                          Control_Monad_Eff_Console.log("got response")();
                          var unlinesWithCaption = function (title) {
                              return function (a) {
                                  var $172 = Data_Array["null"](a);
                                  if ($172) {
                                      return "";
                                  };
                                  return Data_Show.show(Data_Show.showInt)(Data_Array.length(a)) + (" " + (title + LambdaCube_WebGL_Util.unlines(a)));
                              };
                          };
                          var addRangeMarker = function (cssClass) {
                              return function (e) {
                                  return function __do() {
                                      var v25 = Ace_Range.create(e.startLine - 1 | 0)(e.startColumn - 1 | 0)(e.endLine - 1 | 0)(e.endColumn - 1 | 0)();
                                      return addMarker(v25)(cssClass)("text")(false)(v20)();
                                  };
                              };
                          };
                          var v25 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode_Class.decodeJson(LambdaCube_TypeInfo.decodeJsonCompileResult));
                          if (v25 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Console.log("decode error: " + v25.value0)();
                          };
                          if (v25 instanceof Data_Either.Right && v25.value0 instanceof LambdaCube_TypeInfo.CompileError) {
                              Control_Monad_Eff_JQuery.setText(Data_Show.show(Data_Show.showInt)(Data_Ord.max(Data_Ord.ordInt)(1)(Data_Array.length(v25.value0.value3))) + (" Errors" + (function () {
                                  var $176 = Data_Array["null"](v25.value0.value2);
                                  if ($176) {
                                      return "";
                                  };
                                  return ", " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v25.value0.value2)) + " Warnings");
                              })()))(v9)();
                              var warningsTxt = Data_Functor.map(Data_Functor.functorArray)(function (v26) {
                                  return v26.value0.wText;
                              })(v25.value0.value2);
                              var errorsTxt = Data_Functor.map(Data_Functor.functorArray)(function (v26) {
                                  return v26.value0.eText;
                              })(v25.value0.value3);
                              Control_Monad_Eff_JQuery.setText(LambdaCube_WebGL_Util.unlines([ v25.value0.value0, unlinesWithCaption("Errors:\x0a")(errorsTxt), unlinesWithCaption("Warnings:\x0a")(warningsTxt) ]))(v8)();
                              var v26 = Control_Monad_Eff_Ref.readRef(v22)();
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v26)(function (mkr) {
                                  return Ace_EditSession.removeMarker(mkr)(v20);
                              })();
                              var v27 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v25.value0.value2)(function (v27) {
                                  return addRangeMarker("lc_warning")(v27.value0.wRange.value0);
                              })();
                              var v28 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v25.value0.value3)(function (v28) {
                                  return addRangeMarker("lc_error")(v28.value0.eRange.value0);
                              })();
                              Control_Monad_Eff_Ref.writeRef(v22)(Data_Array.concat([ v27, v28 ]))();
                              Control_Monad_Eff_Ref.writeRef(v21)(v25.value0.value1)();
                              return Data_Unit.unit;
                          };
                          if (v25 instanceof Data_Either.Right && v25.value0 instanceof LambdaCube_TypeInfo.Compiled) {
                              Control_Monad_Eff_JQuery.setText(v25.value0.value0)(v7)();
                              Control_Monad_Eff_JQuery.setText(v25.value0.value1)(v6)();
                              Control_Monad_Eff_JQuery.setText("Compiled" + (function () {
                                  var $197 = Data_Array["null"](v25.value0.value4);
                                  if ($197) {
                                      return "";
                                  };
                                  return ", " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v25.value0.value4)) + " Warnings");
                              })())(v9)();
                              var warningsTxt = Data_Functor.map(Data_Functor.functorArray)(function (v26) {
                                  return v26.value0.wText;
                              })(v25.value0.value4);
                              Control_Monad_Eff_JQuery.setText((function () {
                                  var $200 = Data_Array["null"](v25.value0.value4);
                                  if ($200) {
                                      return "No errors.\x0a";
                                  };
                                  return unlinesWithCaption("Warnings:\x0a")(warningsTxt);
                              })())(v8)();
                              Control_Monad_Eff_Ref.writeRef(v21)(v25.value0.value3)();
                              var v26 = Control_Monad_Eff_Ref.readRef(v22)();
                              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v26)(function (mkr) {
                                  return Ace_EditSession.removeMarker(mkr)(v20);
                              })();
                              var v27 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(v25.value0.value4)(function (v27) {
                                  return addRangeMarker("lc_warning")(v27.value0.wRange.value0);
                              })();
                              Control_Monad_Eff_Ref.writeRef(v22)(v27)();
                              return render(v25.value0.value2)();
                          };
                          throw new Error("Failed pattern match at Main line 303, column 9 - line 328, column 21: " + [ v25.constructor.name ]);
                      };
                  };
              }, 
              onError: function (s) {
                  return function (m) {
                      return Control_Monad_Eff_Console.log("error: " + m);
                  };
              }
          })();
          if (v25 instanceof Data_Either.Left) {
              return Control_Monad_Eff_Console.log("error: " + v25.value0)();
          };
          if (v25 instanceof Data_Either.Right) {
              var v26 = WebSocket.webSocket("ws://localhost:8000/getexercise")({
                  onOpen: function (s) {
                      return function __do() {
                          Control_Monad_Eff_Console.log("socket2 is ready")();
                          Data_Function.flip(Control_Monad_Eff_JQuery.on("change"))(v11)(function (v26) {
                              return function (v27) {
                                  return function __do() {
                                      var v28 = Control_Monad_Eff_JQuery.find(":selected")(v11)();
                                      var v29 = Control_Monad_Eff_JQuery.getText(v28)();
                                      return WebSocket.send(s)(v29)();
                                  };
                              };
                          })();
                          var v26 = $foreign.getUrlParameter("example")();
                          WebSocket.send(s)((function () {
                              var $219 = v26 === "";
                              if ($219) {
                                  return defaultExampleName;
                              };
                              return v26;
                          })())();
                          return Data_Unit.unit;
                      };
                  }, 
                  onMessage: function (s) {
                      return function (m) {
                          var v26 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(m))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString));
                          if (v26 instanceof Data_Either.Left) {
                              return Control_Monad_Eff_Console.log("decode error: " + v26.value0);
                          };
                          if (v26 instanceof Data_Either.Right) {
                              return function __do() {
                                  Ace_EditSession.setValue(v26.value0)(v20)();
                                  compile(v25.value0)();
                                  return Data_Unit.unit;
                              };
                          };
                          throw new Error("Failed pattern match at Main line 346, column 31 - line 351, column 26: " + [ v26.constructor.name ]);
                      };
                  }, 
                  onError: function (s) {
                      return function (m) {
                          return Control_Monad_Eff_Console.log(m);
                      };
                  }, 
                  onClose: Control_Monad_Eff_Console.log("socket2 is closed")
              })();
              Data_Function.flip(Control_Monad_Eff_JQuery.on("click"))(v10)(function (v27) {
                  return function (v28) {
                      return function __do() {
                          compile(v25.value0)();
                          return Control_Monad_Eff_Console.log("clicked compile")();
                      };
                  };
              })();
              $foreign.addCommand(v19)("Compile")("Ctrl-B")("Command-B")(function (v27) {
                  return compile(v25.value0);
              })();
              var v27 = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.newRef)(Timer.nowEpochMilliseconds)();
              var renderLoop = function __do() {
                  var v28 = Timer.nowEpochMilliseconds();
                  var v29 = Control_Monad_Eff_Ref.readRef(v27)();
                  var deltaTime = (v28 - v29) / 1000.0;
                  Control_Monad_Eff_Ref.writeRef(v27)(v28)();
                  var v30 = Control_Monad_Eff_JQuery.getProp("checked")(v5)();
                  (function () {
                      var v31 = Control_Monad_Except.runExcept(Data_Foreign.readBoolean(v30));
                      if (v31 instanceof Data_Either.Right && !v31.value0) {
                          return function __do() {
                              Control_Monad_Eff_Ref.modifyRef(v1)(function (x) {
                                  return deltaTime + x;
                              })();
                              var v32 = Control_Monad_Eff_Ref.readRef(v1)();
                              var time$prime = Data_Int.toNumber(Data_Int.floor(v32 * 1000.0)) / 1000.0;
                              Control_Monad_Eff_JQuery.setValue(time$prime)(v3)();
                              Control_Monad_Eff_JQuery.setValue(time$prime)(v4)();
                              return updateInput(v32)();
                          };
                      };
                      return function __do() {
                          var v32 = getTime();
                          Control_Monad_Eff_Ref.writeRef(v1)(v32)();
                          return updateInput(v32)();
                      };
                  })()();
                  var v31 = Control_Monad_Eff_Ref.readRef(v23)();
                  (function () {
                      if (v31 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                      if (v31 instanceof Data_Maybe.Just) {
                          return LambdaCube_WebGL_Backend.renderPipeline(v31.value0);
                      };
                      throw new Error("Failed pattern match at Main line 381, column 13 - line 383, column 45: " + [ v31.constructor.name ]);
                  })()();
                  return Timer.timeout(1000 / 25 | 0)(renderLoop)();
              };
              var v28 = renderLoop();
              return Data_Unit.unit;
          };
          throw new Error("Failed pattern match at Main line 331, column 3 - line 388, column 12: " + [ v25.constructor.name ]);
      };
  });
  exports["main"] = main;
  exports["run"] = run;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
